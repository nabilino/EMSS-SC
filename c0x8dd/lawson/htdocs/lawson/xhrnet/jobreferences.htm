<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<meta http-equiv="Pragma" content="No-Cache">
<title>Applicant Job References</title>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/instctrycdselect.js"></script>
<script src="/lawson/xhrnet/statesuscan.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script>
var searchStr = (window.location.search)?unescape(window.location.search):"";
var applicant = "0";
var stateProvFilter = "state";
var AssociationCodes = new Array();
var JobReferences = new Array();
if (searchStr)
	applicant = getVarFromString("number",searchStr);

function StartJobReferences()
{
	stylePage();
	setWinTitle(getSeaPhrase("APP_JOB_REFERENCES","ESS"));
	var nextFunc = function()
	{
		if (emssObjInstance.emssObj.filterSelect)
			GoToListScreen();
		else
			GetInstCtryCdSelect(authUser.prodline,"GetStates()");
	};
	if (searchStr)
		parent.showWaitAlert(getSeaPhrase("WAIT","ESS"), nextFunc);
	else
		nextFunc();
}

function GetStates()
{
	GrabStates("GetCodes()");
}

function sortByDescription(obj1, obj2)
{
	var name1 = obj1.description;
	var name2 = obj2.description;
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function GetCodes()
{
  	AssociationCodes = new Array();
   	var dmeObj = new DMEObject(authUser.prodline,"pcodes");
   	dmeObj.out = "JAVASCRIPT";
   	dmeObj.index = "pcoset1";
   	dmeObj.field = "code;description";
	dmeObj.key = "AS";
   	dmeObj.cond = "active";
   	dmeObj.max = "600";
   	dmeObj.exclude = "drill;keys;sorts";
   	dmeObj.func = "StoreAssociationCodes()";
   	DME(dmeObj,"jsreturn");
}

function StoreAssociationCodes()
{
	AssociationCodes = AssociationCodes.concat(self.jsreturn.record);
   	if (self.jsreturn.Next != "")
    	self.jsreturn.location.replace(self.jsreturn.Next);
	else 
	{
		AssociationCodes.sort(sortByDescription);
   		GoToListScreen();
   	}
}

function sortByLastName(obj1, obj2)
{
	var name1 = obj1.last_name;
	var name2 = obj2.last_name;
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function GoToListScreen(Refresh)
{
	JobReferences = new Array();
   	var dmeObj = new DMEObject(authUser.prodline, "referenc");
   	dmeObj.out = "JAVASCRIPT";
	dmeObj.index = "refset1";
	dmeObj.field = "addr1;addr2;addr3;addr4;city;state;zip;first-name;middle-init;"
	+ "last-name;wk-phone-nbr;seq-nbr;country.country-code;hm-phone-nbr;"
	+ "association;association.description;country.country-desc;full-name";
	dmeObj.key = parseInt(authUser.company,10)+"="+parseInt(applicant,10)+"=";
	dmeObj.max = "600";
   	dmeObj.exclude = "drill;keys;sorts";
   	dmeObj.func = (Refresh)?"JobReferences_Finished(true)":"JobReferences_Finished(false)";
    DME(dmeObj, "jsreturn");
}

function JobReferences_Finished(Refresh)
{
	JobReferences = JobReferences.concat(self.jsreturn.record);
   	if (self.jsreturn.Next != "")
    	self.jsreturn.location.replace(self.jsreturn.Next);
 	else 
 	{
 		JobReferences.sort(sortByLastName);
    	JobReferencesListScreen(Refresh);
   	}
}

function JobReferencesListScreen(Refresh)
{
	// Clear the right-hand-side detail frame.
	ClearDetailScreen();
	var jobRec;
	var jobTitle;
	var bodyHtml = '';
	if (JobReferences.length > 0)
	{
		bodyHtml += '<table id="jobreferencesTbl" class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" summary="'+getSeaPhrase("TSUM_43","SEA")+'">'
		+ '<caption class="offscreen">'+getSeaPhrase("JOB_REFERENCES","ESS")+'</caption>'
		+ '<tr><th scope="col" colspan="2"></th></tr>'
		for (var i=0; i<JobReferences.length; i++)
		{
		   	jobRec = JobReferences[i];
		   	var tip = getSeaPhrase("EDIT_DTL_FOR_JOB_REF","SEA",[jobRec.full_name,jobRec.association_description]);
			bodyHtml += '<tr><th scope="row" class="plaintablerowheaderborder" style="width:40%;border-bottom:0px;padding-top:5px;text-align:right">'+getSeaPhrase("NAME","ESS")+'</th>'
			+ '<td class="plaintablecellborder" style="border-bottom:0px;padding-top:5px;text-align:left">'
			+ '<a href="javascript:;" onclick="parent.FillDetail('+i+','+((i*2)-1)+');return false" nowrap title="'+tip+'">'+((jobRec.full_name)?jobRec.full_name:'&nbsp;')+'<span class="offscreen"> - '+getSeaPhrase("EDIT_DTL_FOR","SEA")+'</span></a></td></tr>'
			+ '<tr><th scope="row" class="plaintablerowheaderborder" style="width:40%;padding-bottom:5px;text-align:right">'+getSeaPhrase("ASSOCIATION","ESS")+'</th>'
			+ '<td class="plaintablecellborder" style="padding-bottom:5px;text-align:left" nowrap>'+((jobRec.association_description)?jobRec.association_description:'&nbsp;')+'</td></tr>'
		}
	    bodyHtml += '</table>'
	}
	bodyHtml += '<div style="width:100%;text-align:center">'
	if (searchStr)
	{
		bodyHtml += uiButton(getSeaPhrase("ADD","ESS"),"parent.AddJobReference();return false",false,"addbtn");
		bodyHtml += uiButton(getSeaPhrase("BACK","ESS"),"parent.CloseJobReferences();return false","margin-left:5px","closebtn");
	}
	else
		bodyHtml += uiButton(getSeaPhrase("ADD","ESS"),"parent.AddJobReference();return false",false,"addbtn");
	bodyHtml += '</div>'
	self.left.document.getElementById("paneHeader").innerHTML = getSeaPhrase("INIT_APP_27","ESS");
	if (!document.all) 
	{
		self.left.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold" style="text-align:left;padding-bottom:40px;padding-left:20px;padding-right:20px;padding-top:10px">'
		+getSeaPhrase("ADD_JOBREFERENCE","ESS")
		+'<p/>'+((JobReferences.length)?getSeaPhrase("CHG_JOBREFERENCE","ESS"):'')+'</div><p/>'+bodyHtml;
	}
	else 
	{
		self.left.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold" style="text-align:left;padding-left:20px;padding-right:20px;padding-top:10px">'
		+getSeaPhrase("ADD_JOBREFERENCE","ESS")
		+'<p/>'+((JobReferences.length)?getSeaPhrase("CHG_JOBREFERENCE","ESS"):'')+'</div><p/>'+bodyHtml;
	}
	self.left.stylePage();
	document.getElementById("left").style.visibility = "visible";
	if (Refresh)
		UpdateComplete();
	if (searchStr)
		parent.removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.left.getWinTitle()]));	
	fitToScreen();
}

function AddJobReference()
{
	if (searchStr)
		parent.showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), DrawAddDetailContent);
	else
		DrawAddDetailContent();
}

function DrawAddDetailContent()
{
	var toolTip;
	var JobReferenceContent = '<form name="jobreferenceform">'
	+ '<input class="inputbox" type="hidden" name="seqnbr" value="0">'
	+ '<input class="inputbox" type="hidden" name="fc" value="A">'
	+ '<table border="0" cellspacing="0" cellpadding="0" width="100%" role="presentation">'
	+ '<tr style="padding-top:5px"><td class="fieldlabelboldlite" style="width:40%">'+uiRequiredFooter()+'</td><td>&nbsp;</td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="firstname">'+getSeaPhrase("DEP_34","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="firstname" name="firstname" value="" size="15" maxlength="15" onfocus="this.select()">'+uiRequiredIcon()+'</td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="middlename">'+getSeaPhrase("DEP_35","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="middlename" name="middlename" value="" size="1" maxlength="1" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="lastname">'+getSeaPhrase("DEP_38","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="lastname" name="lastname" value="" size="30" maxlength="30" onfocus="this.select()">'+uiRequiredIcon()+'</td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="association">'+getSeaPhrase("ASSOCIATION","ESS")+'</label></td>'
	if (emssObjInstance.emssObj.filterSelect)
	{
		toolTip = dmeFieldToolTip("association");
		JobReferenceContent += '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="association" name="association" fieldnm="association" value="" size="10" maxlength="10" onfocus="this.select()" onkeyup="parent.dmeFieldOnKeyUpHandler(event,\'association\');">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'association\');" style="margin-left:5px" title="'+toolTip+'" aria-label="'+toolTip+'">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0" alt="'+toolTip+'" title="'+toolTip+'"></a>'
		+ '<span id="associationDesc" style="text-align:left;width:200px" class="fieldlabel"></span></td></tr>'
	}
	else
		JobReferenceContent += '<td class="plaintablecell" nowrap><select class="inputbox" id="association" name="association">'+BuildAssociationSelect("")+'</select></td></tr>'
	JobReferenceContent += '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="wkphonenbr">'+getSeaPhrase("WORK_TELEPHONE","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="wkphonenbr" name="wkphonenbr" value="" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="hmphonenbr">'+getSeaPhrase("HOME_TELEPHONE","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="hmphonenbr" name="hmphonenbr" value="" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr1">'+getSeaPhrase("ADDR_1","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr1" name="addr1" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr2">'+getSeaPhrase("ADDR_2","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr2" name="addr2" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr3">'+getSeaPhrase("ADDR_3","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr3" name="addr3" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr4">'+getSeaPhrase("ADDR_4","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr4" name="addr4" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="city">'+getSeaPhrase("CITY_OR_ADDR_5","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="city" name="city" value="" size="18" maxlength="18" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="state">'+getSeaPhrase("HOME_ADDR_6","ESS")+'</label></td>'
	if (emssObjInstance.emssObj.filterSelect)
	{
		toolTip = dmeFieldToolTip("state");
		JobReferenceContent += '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="state" name="state" fieldnm="state" value="" size="2" maxlength="2" onfocus="this.select()" onkeyup="parent.dmeFieldOnKeyUpHandler(event,\'state\');">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'state\');" style="margin-left:5px" title="'+toolTip+'" aria-label="'+toolTip+'">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0" alt="'+toolTip+'" title="'+toolTip+'"></a>'
		+ '<span id="stateDesc" style="text-align:left;width:200px" class="fieldlabel"></span></td></tr>'
	}
	else
		JobReferenceContent += '<td class="plaintablecell" nowrap><select class="inputbox" id="state" name="state">'+BuildStateSelect("")+'</select>'+uiRequiredIcon()+'</td></tr>'
	JobReferenceContent += '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="zip">'+getSeaPhrase("HOME_ADDR_7","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="zip" name="zip" value="" size="10" maxlength="10" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldliteunderline" style="width:40%"><label for="country">'+getSeaPhrase("COUNTRY_ONLY","ESS")+'</label></td>'
	if (emssObjInstance.emssObj.filterSelect)
	{
		toolTip = dmeFieldToolTip("country");
		JobReferenceContent += '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="country" name="country" fieldnm="country" value="" size="2" maxlength="2" onfocus="this.select()" onkeyup="parent.dmeFieldOnKeyUpHandler(event,\'country\');">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'country\');" style="margin-left:5px" title="'+toolTip+'" aria-label="'+toolTip+'">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0" alt="'+toolTip+'" title="'+toolTip+'"></a>'
		+ '<span id="countryDesc" style="text-align:left;width:200px" class="fieldlabel"></span></td></tr>'
	}
	else
		JobReferenceContent += '<td class="plaintablecell" nowrap><select class="inputbox" id="country" name="country">'+DrawInstCtryCdSelect("")+'</select></td></tr>'
	JobReferenceContent += '<tr><td>&nbsp;</td><td class="plaintablecell" style="text-align:left">'
	+ uiButton(getSeaPhrase("UPDATE","ESS"),"parent.ProcessJobReference(\'A\');return false","margin-top:10px")
	+ uiButton(getSeaPhrase("CANCEL","ESS"),"parent.ClearDetailScreen();return false","margin-top:10px;margin-left:5px")
	+ '</td></tr></table></form>'
	try 
	{
		self.right.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DETAIL","ESS");
		self.right.document.getElementById("paneBody").innerHTML = JobReferenceContent;
		self.right.stylePage();
	}
	catch(e) {}
	document.getElementById("right").style.visibility = "visible";
	HideListButtons();
	if (searchStr)
		parent.removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.right.getWinTitle()]));	
	fitToScreen();
}

function ProcessJobReference(fc)
{
	var jobForm = self.right.document.jobreferenceform;
	clearRequiredField(jobForm.firstname);
	clearRequiredField(jobForm.lastname);
	if (emssObjInstance.emssObj.filterSelect)
		clearRequiredField(jobForm.state);
	else
		clearRequiredField(self.right.document.getElementById("state"));
   	if (NonSpace(jobForm.firstname.value) == 0)
   	{
   		setRequiredField(jobForm.firstname, getSeaPhrase("FIRST_NAME","ESS"));
       	return;
   	}
  	if (NonSpace(jobForm.lastname.value) == 0)
   	{
   		setRequiredField(jobForm.lastname, getSeaPhrase("LAST_NAME","ESS"));
       	return;
   	}
	if (emssObjInstance.emssObj.filterSelect)
	{
		if (NonSpace(jobForm.state.value) == 0 && NonSpace(jobForm.country.value) == 0)
		{
			setRequiredField(jobForm.state, getSeaPhrase("STATE_PROVINCE","ESS"));
			return;
		}
	}
	else
	{
		if (jobForm.state.selectedIndex == 0 && jobForm.country.selectedIndex == 0)
		{
			setRequiredField(self.right.document.getElementById("state"), getSeaPhrase("STATE_PROVINCE","ESS"), jobForm.state);
			return;
		}
	}
  	if (jobForm.middlename.value == "")
		jobForm.middlename.value = " ";
   	if (jobForm.addr1.value == "")
	  	jobForm.addr1.value = " ";
   	if (jobForm.addr2.value == "")
	  	jobForm.addr2.value = " ";
   	if (jobForm.addr3.value == "")
	   	jobForm.addr3.value = " ";
   	if (jobForm.addr4.value == "")
	  	jobForm.addr4.value = " ";
   	if (jobForm.city.value == "")
	  	jobForm.city.value = " ";
   	if (jobForm.zip.value == "")
	  	jobForm.zip.value = " ";
    if (jobForm.wkphonenbr.value == "")
	  	jobForm.wkphonenbr.value = " ";
   	if (jobForm.hmphonenbr.value == "")
	  	jobForm.hmphonenbr.value = " ";
	jobForm.fc.value = (fc)?fc:jobForm.fc.value;
   	var agsObj = new AGSObject(authUser.prodline,"PA32.1")
   	agsObj.event = (jobForm.fc.value == "A")?"ADD":"CHANGE";
   	agsObj.rtn = "MESSAGE"
   	agsObj.longNames = true
   	agsObj.tds = false
   	agsObj.field = "FC="+jobForm.fc.value
    + "&REF-COMPANY=" + escape(parseInt(authUser.company,10),1)
    + "&REF-APPLICANT=" + escape(parseInt(applicant,10),1)
   	if (jobForm.fc.value != "A")
      	agsObj.field += "&REF-SEQ-NBR=" + escape(parseInt(jobForm.seqnbr.value,10),1)
	if (jobForm.fc.value != "D") 
	{
      	agsObj.field += "&REF-LAST-NAME=" + escape(jobForm.lastname.value,1)
		+ "&REF-FIRST-NAME=" + escape(jobForm.firstname.value,1)
		+ "&REF-MIDDLE-INIT=" + escape(jobForm.middlename.value,1)
       	+ "&REF-ADDR1=" + escape(jobForm.addr1.value,1)
       	+ "&REF-ADDR2=" + escape(jobForm.addr2.value,1)
       	+ "&REF-ADDR3=" + escape(jobForm.addr3.value,1)
       	+ "&REF-ADDR4=" + escape(jobForm.addr4.value,1)
       	+ "&REF-CITY=" + escape(jobForm.city.value,1)
		if (emssObjInstance.emssObj.filterSelect) 
		{
			agsObj.field += "&REF-STATE=" + escape(jobForm.state.value,1)
			+ "&REF-COUNTRY-CODE=" + escape(jobForm.country.value,1)
			+ "&REF-ASSOCIATION=" + escape(jobForm.association.value,1)
		} 
		else 
		{
			agsObj.field += "&REF-STATE=" + escape(jobForm.state[jobForm.state.selectedIndex].value,1)
			+ "&REF-COUNTRY-CODE=" + escape(jobForm.country[jobForm.country.selectedIndex].value,1)
			+ "&REF-ASSOCIATION=" + escape(jobForm.association[jobForm.association.selectedIndex].value,1)
		}
    	agsObj.field += "&REF-ZIP=" + escape(jobForm.zip.value,1)
      	+ "&REF-WK-PHONE-NBR=" + escape(jobForm.wkphonenbr.value,1)
		+ "&REF-HM-PHONE-NBR=" + escape(jobForm.hmphonenbr.value,1)
	}
 	agsObj.func = "parent.DisplayMessage()";
 	if (searchStr)
 		parent.showWaitAlert(getSeaPhrase("UPDATING_APP_INFO","ESS"), function(){AGS(agsObj,"jsreturn");});
 	else	
   		AGS(agsObj,"jsreturn");
}

function FillDetail(Index, rowNbr)
{
	if (searchStr)
		parent.showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), function(){JobReferenceClicked(Index,rowNbr);});
	else
		JobReferenceClicked(Index,rowNbr);
}

function JobReferenceClicked(Index, rowNbr)
{
	activateTableRow("jobreferencesTbl",rowNbr,self.left);
	jobRec = JobReferences[Index];
	var toolTip;
	var JobReferenceContent = '<form name="jobreferenceform">'
	+ '<input class="inputbox" type="hidden" name="seqnbr" value="'+jobRec.seq_nbr+'">'
	+ '<input class="inputbox" type="hidden" name="fc" value="C">'
	+ '<table border="0" cellspacing="0" cellpadding="0" width="100%" role="presentation">'
	+ '<tr style="padding-top:5px"><td class="fieldlabelboldlite" style="width:40%">'+uiRequiredFooter()+'</td><td>&nbsp;</td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="firstname">'+getSeaPhrase("DEP_34","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="firstname" name="firstname" value="'+jobRec.first_name+'" size="15" maxlength="15" onfocus="this.select()">'+uiRequiredIcon()+'</td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="middlename">'+getSeaPhrase("DEP_35","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="middlename" name="middlename" value="'+jobRec.middle_init+'" size="1" maxlength="1" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="lastname">'+getSeaPhrase("DEP_38","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="lastname" name="lastname" value="'+jobRec.last_name+'" size="30" maxlength="30" onfocus="this.select()">'+uiRequiredIcon()+'</td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="association">'+getSeaPhrase("ASSOCIATION","ESS")+'</label></td>'
	if (emssObjInstance.emssObj.filterSelect)
	{
		toolTip = dmeFieldToolTip("association");
		JobReferenceContent += '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="association" name="association" fieldnm="association" value="'+jobRec.association+'" size="10" maxlength="10" onfocus="this.select()" onkeyup="parent.dmeFieldOnKeyUpHandler(event,\'association\');">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'association\');" style="margin-left:5px" title="'+toolTip+'" aria-label="'+toolTip+'">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0" alt="'+toolTip+'" title="'+toolTip+'"></a>'
		+ '<span id="associationDesc" style="text-align:left;width:200px" class="fieldlabel">'+jobRec.association_description+'</span></td></tr>'
	}
	else
		JobReferenceContent += '<td class="plaintablecell" nowrap><select class="inputbox" id="association" name="association">'+BuildAssociationSelect(jobRec.association)+'</select></td></tr>'
	JobReferenceContent += '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="wkphonenbr">'+getSeaPhrase("WORK_TELEPHONE","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="wkphonenbr" name="wkphonenbr" value="'+jobRec.wk_phone_nbr+'" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="hmphonenbr">'+getSeaPhrase("HOME_TELEPHONE","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="hmphonenbr" name="hmphonenbr" value="'+jobRec.hm_phone_nbr+'" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr1">'+getSeaPhrase("ADDR_1","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr1" name="addr1" value="'+jobRec.addr1+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr2">'+getSeaPhrase("ADDR_2","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr2" name="addr2" value="'+jobRec.addr2+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr3">'+getSeaPhrase("ADDR_3","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr3" name="addr3" value="'+jobRec.addr3+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="addr4">'+getSeaPhrase("ADDR_4","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="addr4" name="addr4" value="'+jobRec.addr4+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="city">'+getSeaPhrase("CITY_OR_ADDR_5","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="city" name="city" value="'+jobRec.city+'" size="18" maxlength="18" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="state">'+getSeaPhrase("HOME_ADDR_6","ESS")+'</label></td>'
	if (emssObjInstance.emssObj.filterSelect)
	{
		toolTip = dmeFieldToolTip("state");
		JobReferenceContent += '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="state" name="state" fieldnm="state" value="'+jobRec.state+'" size="2" maxlength="2" onfocus="this.select()" onkeyup="parent.dmeFieldOnKeyUpHandler(event,\'state\');">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'state\');" style="margin-left:5px" title="'+toolTip+'" aria-label="'+toolTip+'">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0" alt="'+toolTip+'" title="'+toolTip+'"></a>'
		+ '<span id="stateDesc" style="text-align:left;width:200px" class="fieldlabel"></span></td></tr>'
	}
	else
		JobReferenceContent += '<td class="plaintablecell" nowrap><select class="inputbox" id="state" name="state">'+BuildStateSelect(jobRec.state)+'</select>'+uiRequiredIcon()+'</td></tr>'
	JobReferenceContent += '<tr><td class="fieldlabelboldlite" style="width:40%"><label for="zip">'+getSeaPhrase("HOME_ADDR_7","ESS")+'</label></td>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="zip" name="zip" value="'+jobRec.zip+'" size="10" maxlength="10" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="fieldlabelboldliteunderline" style="width:40%"><label for="country">'+getSeaPhrase("COUNTRY_ONLY","ESS")+'</label></td>'
	if (emssObjInstance.emssObj.filterSelect)
	{
		toolTip = dmeFieldToolTip("country");
		JobReferenceContent += '<td class="plaintablecell" nowrap><input class="inputbox" type="text" id="country" name="country" fieldnm="country" value="'+jobRec.country_country_code+'" size="2" maxlength="2" onfocus="this.select()" onkeyup="parent.dmeFieldOnKeyUpHandler(event,\'country\');">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'country\');" style="margin-left:5px" title="'+toolTip+'" aria-label="'+toolTip+'">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0" alt="'+toolTip+'" title="'+toolTip+'"></a>'
		+ '<span id="countryDesc" style="text-align:left;width:200px" class="fieldlabel">'+jobRec.country_country_desc+'</span></td></tr>'
	}
	else
		JobReferenceContent += '<td class="plaintablecell" nowrap><select class="inputbox" id="country" name="country">'+DrawInstCtryCdSelect(jobRec.country_country_code)+'</select></td></tr>'
	JobReferenceContent += '<tr><td>&nbsp;</td><td class="plaintablecellleft">'
	+ uiButton(getSeaPhrase("UPDATE","ESS"),"parent.ProcessJobReference(\'C\');return false","margin-top:10px")
	+ uiButton(getSeaPhrase("CANCEL","ESS"),"parent.ClearDetailScreen();return false","margin-top:10px;margin-right:15px;margin-left:5px")
	+ uiButton(getSeaPhrase("DELETE","ESS"),"parent.ProcessJobReference(\'D\');return false","margin-top:10px")
	+ '</td></tr></table></form>'
	try 
	{
		self.right.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DETAIL","ESS");
		self.right.document.getElementById("paneBody").innerHTML = JobReferenceContent;
		self.right.stylePage();
	}
	catch(e) {}
	document.getElementById("right").style.visibility = "visible";
	HideListButtons();
	if (searchStr)
		parent.removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.right.getWinTitle()]));	
	fitToScreen();
}

function CloseJobReferences()
{
	parent.backToLinks();
}

function HideListButtons()
{
	try 
	{
		self.left.document.getElementById("addbtn").style.visibility = "hidden";
		self.left.document.getElementById("closebtn").style.visibility = "hidden";
	}
	catch(e) {}
}

function ShowListButtons()
{
	try 
	{
		self.left.document.getElementById("addbtn").style.visibility = "visible";
		self.left.document.getElementById("closebtn").style.visibility = "visible";
	}
	catch(e) {}
}

function ClearDetailScreen()
{
	deactivateTableRows("jobreferencesTbl",self.left);
	document.getElementById("right").style.visibility = "hidden";
	ShowListButtons();
}

function BuildAssociationSelect(code)
{
	var associationSelect = new Array();
	associationSelect[0] = '<option value=" ">';
	for (var i=0; i<AssociationCodes.length; i++)
	{
        associationSelect[i+1] = '<option value="'+AssociationCodes[i].code+'"';
		associationSelect[i+1] += (code == AssociationCodes[i].code)?' selected>':'>';
		associationSelect[i+1] += AssociationCodes[i].description;
	}
	return associationSelect.join("");
}

function ReturnDate(dte)
{
	self.right.document.forms["jobreferenceform"].elements[date_fld_name].value = dte;
}

function UpdateComplete()
{
	parent.seaPageMessage(getSeaPhrase("UPDATE_COMPLETE","ESS"), null, null, "info", null, true, getSeaPhrase("APPLICATION_ALERT","SEA"), true);
}

function DisplayMessage()
{
   	if (self.lawheader.gmsgnbr == "000")
      	GoToListScreen(true);
   	else
   	{
   		if (searchStr)
   			parent.removeWaitAlert();   		
      	parent.seaAlert(self.lawheader.gmsg, null, null, "error");
   	}      	
}

/* Filter Select logic - start */
function performDmeFieldFilterOnChange(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{
		case "state": // state/province
		case "province":
			var filterForm = dmeFilter.getFilterForm();
			var selObj = filterForm.elements["filterField"];
			var filterField = selObj.options[selObj.selectedIndex].value;
			if ((filterField == "state") || (filterField == "province")) {

				stateProvFilter = filterField;
				filterForm.elements["filterBtn"].onclick();
			}
		break;
	}
}

function performDmeFieldFilterOnLoad(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{
		case "association":
			dmeFilter.addFilterField("code", 10, getSeaPhrase("ASSOCIATION","ESS"), true);
			dmeFilter.addFilterField("description", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);
			filterDmeCall(dmeFilter,
				"jsreturn",
				"pcodes",
				"pcoset1",
				"code;description;",
				"AS",
				"active",
				null,
				dmeFilter.getNbrRecords(),
				null);
		break;
		case "state":
			dmeFilter.addFilterField("state", 2, getSeaPhrase("STATE_ONLY","ESS"), true);
			dmeFilter.addFilterField("province", 2, getSeaPhrase("PROVINCE","ESS"), true);
			dmeFilter.addFilterField("description", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);
			filterDmeCall(dmeFilter,
				"jsreturn",
				"prstate",
				"psaset1",
				"state;description",
				"",
				null,
				null,
				dmeFilter.getNbrRecords(),
				null);
		break;
		case "country":
			dmeFilter.addFilterField("country-code", 2, getSeaPhrase("COUNTRY_ONLY","ESS"), true);
			dmeFilter.addFilterField("country-desc", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);
			filterDmeCall(dmeFilter,
				"jsreturn",
				"instctrycd",
				"intset1",
				"country-code;country-desc",
				"",
				null,
				null,
				dmeFilter.getNbrRecords(),
				null);
		break;
		default: break;
	}
}

function performDmeFieldFilter(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{
		case "association":
		filterDmeCall(dmeFilter,
			"jsreturn",
			"pcodes",
			"pcoset1",
			"code;description;",
			"AS",
			"active",
			dmeFilter.getSelectStr(),
			dmeFilter.getNbrRecords(),
			null);
		break;
		case "state":
		if (stateProvFilter == "state") 
		{
			filterDmeCall(dmeFilter,
				"jsreturn",
				"prstate",
				"psaset1",
				"state;description",
				"",
				null,
				dmeFilter.getSelectStr(),
				dmeFilter.getNbrRecords(),
				null);
		} 
		else 
		{
			filterDmeCall(dmeFilter,
				"jsreturn",
				"prprovince",
				"ppvset1",
				"province;description",
				"",
				null,
				dmeFilter.getSelectStr(),
				dmeFilter.getNbrRecords(),
				null);
		}
		break;
		case "country":
		filterDmeCall(dmeFilter,
			"jsreturn",
			"instctrycd",
			"intset1",
			"country-code;country-desc",
			"",
			null,
			dmeFilter.getSelectStr(),
			dmeFilter.getNbrRecords(),
			null);
		break;
		default: break;
	}
}

function dmeFieldRecordSelected(recIndex, fieldNm)
{
	var selRec = self.jsreturn.record[recIndex];
	var appForm = self.right.document.jobreferenceform;
	var formElm;
	switch (fieldNm.toLowerCase())
	{
		case "association":
			formElm = appForm.association;
			formElm.value = selRec.code;
			try { self.right.document.getElementById("associationDesc").innerHTML = selRec.description; } catch(e) {}
			break;
		case "state":
			formElm = appForm.state;
			if (stateProvFilter == "state")
				formElm.value = selRec.state;
			else
				formElm.value = selRec.province;
			try { self.right.document.getElementById("stateDesc").innerHTML = selRec.description; } catch(e) {}
			break;
		case "country":
			formElm = appForm.country;
			formElm.value = selRec.country_code;
			try { self.right.document.getElementById("countryDesc").innerHTML = selRec.country_desc; } catch(e) {}
			break;
		default: break;
	}
	try { filterWin.close(); } catch(e) {}
	try { formElm.focus(); } catch(e) {}
}

function getDmeFieldElement(fieldNm)
{
	var fld = [null, null, null];
	try
	{
		var appForm = self.right.document.jobreferenceform;
		switch (fieldNm.toLowerCase())
		{
			case "association":
				fld = [self.right, appForm.association, getSeaPhrase("ASSOCIATION","ESS")];
				break;
			case "state":
				fld = [self.right, appForm.state, getSeaPhrase("STATE_ONLY","ESS")];
				break;
			case "country":
				fld = [self.right, appForm.country, getSeaPhrase("COUNTRY_ONLY","ESS")];
				break;
			default: break;
		}
	}
	catch(e) {}
	return fld;
}

function dmeFieldKeyUpHandler(fieldNm)
{
	var appForm = self.right.document.jobreferenceform;
	var formElm;	
	switch (fieldNm.toLowerCase())
	{
		case "association":
			formElm = appForm.association;
			formElm.value = "";
			try { self.right.document.getElementById("associationDesc").innerHTML = ""; } catch(e) {}
			break;
		case "state":
			formElm = appForm.state;
			formElm.value = "";
			try { self.right.document.getElementById("stateDesc").innerHTML = ""; } catch(e) {}
			break;
		case "country":
			formElm = appForm.country;
			formElm.value = "";
			try { self.right.document.getElementById("countryDesc").innerHTML = ""; } catch(e) {}
			break;
		default: break;
	}	
}

function drawDmeFieldFilterContent(dmeFilter)
{
	var selectHtml = new Array();
	var dmeRecs = self.jsreturn.record;
	var nbrDmeRecs = dmeRecs.length;
	var fieldNm = dmeFilter.getFieldNm().toLowerCase();
	var fldObj = getDmeFieldElement(fieldNm);
	var fldDesc = fldObj[2];	
	switch (fieldNm)
	{
		case "association":
			var tmpObj;
			selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list" summary="'+getSeaPhrase("TSUM_11","SEA",[fldDesc])+'">'
			selectHtml[0] += '<caption class="offscreen">'+getSeaPhrase("TCAP_8","SEA",[fldDesc])+'</caption>'
			selectHtml[0] += '<tr><th scope="col" style="width:50%">'+getSeaPhrase("ASSOCIATION","ESS")+'</th>'
			selectHtml[0] += '<th scope="col" style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'
			for (var i=0; i<nbrDmeRecs; i++)
			{
				tmpObj = dmeRecs[i];
				selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false" class="filterTableRow">'
				selectHtml[i+1] += '<td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
				selectHtml[i+1] += (tmpObj.code) ? tmpObj.code : '&nbsp;'
				selectHtml[i+1] += '</a></td><td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
				selectHtml[i+1] += (tmpObj.description) ? tmpObj.description : '&nbsp;'
				selectHtml[i+1] += '</a></td></tr>'
			}
			if (nbrDmeRecs == 0)
			{
				selectHtml[1] = '<tr class="filterTableRow">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'+getSeaPhrase("NORECS","ESS")+'</td></tr>'
			}
			selectHtml[selectHtml.length] = '</table>'
		break;
		case "state":
			if (stateProvFilter == "state") 
			{
				var tmpObj;
				selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list" summary="'+getSeaPhrase("TSUM_11","SEA",[fldDesc])+'">'
				selectHtml[0] += '<caption class="offscreen">'+getSeaPhrase("TCAP_8","SEA",[fldDesc])+'</caption>'
				selectHtml[0] += '<tr><th scope="col" style="width:50%">'+getSeaPhrase("STATE_ONLY","ESS")+'</th>'
				selectHtml[0] += '<th scope="col" style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'
				for (var i=0; i<nbrDmeRecs; i++)
				{
					tmpObj = dmeRecs[i];
					selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false" class="filterTableRow">'
					selectHtml[i+1] += '<td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
					selectHtml[i+1] += (tmpObj.state) ? tmpObj.state : '&nbsp;'
					selectHtml[i+1] += '</a></td><td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
					selectHtml[i+1] += (tmpObj.description) ? tmpObj.description : '&nbsp;'
					selectHtml[i+1] += '</a></td></tr>'
				}
			} 
			else 
			{
				var tmpObj;
				selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list" summary="'+getSeaPhrase("TSUM_11","SEA",[fldDesc])+'">'
				selectHtml[0] += '<caption class="offscreen">'+getSeaPhrase("TCAP_8","SEA",[fldDesc])+'</caption>'
				selectHtml[0] += '<tr><th scope="col" style="width:50%">'+getSeaPhrase("PROVINCE","ESS")+'</th>'
				selectHtml[0] += '<th scope="col" style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'
				for (var i=0; i<nbrDmeRecs; i++)
				{
					tmpObj = dmeRecs[i];
					selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false" class="filterTableRow">'
					selectHtml[i+1] += '<td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
					selectHtml[i+1] += (tmpObj.province) ? tmpObj.province : '&nbsp;'
					selectHtml[i+1] += '</a></td><td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
					selectHtml[i+1] += (tmpObj.description) ? tmpObj.description : '&nbsp;'
					selectHtml[i+1] += '</a></td></tr>'
				}
			}
			if (nbrDmeRecs == 0)
			{
				selectHtml[1] = '<tr class="filterTableRow">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'+getSeaPhrase("NORECS","ESS")+'</td></tr>'
			}
			selectHtml[selectHtml.length] = '</table>'
		break;
		case "country":
			var tmpObj;
			selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list" summary="'+getSeaPhrase("TSUM_11","SEA",[fldDesc])+'">'
			selectHtml[0] += '<caption class="offscreen">'+getSeaPhrase("TCAP_8","SEA",[fldDesc])+'</caption>'
			selectHtml[0] += '<tr><th scope="col" style="width:50%">'+getSeaPhrase("COUNTRY_ONLY","ESS")+'</th>'
			selectHtml[0] += '<th scope="col" style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'
			for (var i=0; i<nbrDmeRecs; i++)
			{
				tmpObj = dmeRecs[i];
				selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false" class="filterTableRow">'
				selectHtml[i+1] += '<td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
				selectHtml[i+1] += (tmpObj.country_code) ? tmpObj.country_code : '&nbsp;'
				selectHtml[i+1] += '</a></td><td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
				selectHtml[i+1] += (tmpObj.country_desc) ? tmpObj.country_desc : '&nbsp;'
				selectHtml[i+1] += '</a></td></tr>'
			}
			if (nbrDmeRecs == 0)
			{
				selectHtml[1] = '<tr class="filterTableRow">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'+getSeaPhrase("NORECS","ESS")+'</td></tr>'
			}
			selectHtml[selectHtml.length] = '</table>'
		break;
		default: break;
	}
	dmeFilter.getRecordElement().innerHTML = selectHtml.join("");
}
/* Filter Select logic - end */

function LoadJobReferences()
{
   	authenticate("frameNm='jsreturn'|funcNm='StartJobReferences()'|desiredEdit='EM'");
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var leftFrame = document.getElementById("left");
	var rightFrame = document.getElementById("right");
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentHeightBorder;
	var contentHeight;	
	var contentLeftWidthBorder;
	var contentLeftWidth;	
	var contentRightWidthBorder;
	var contentRightWidth;
	if (window.styler && window.styler.showInfor)
	{	
		contentLeftWidth = parseInt(winWidth*.50) - 10;
		contentLeftWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentLeftWidth + 5 : contentLeftWidth + 2;
		contentRightWidth = parseInt(winWidth*.50) - 10;
		contentRightWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentRightWidth + 5 : contentRightWidth + 2;						
		contentHeight = winHeight - 65;
		contentHeightBorder = contentHeight + 30;	
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentLeftWidth = parseInt(winWidth*.50) - 20;
		contentLeftWidthBorder = (window.styler.showInfor3) ? contentLeftWidth + 7 : contentLeftWidth + 17;
		contentRightWidth = parseInt(winWidth*.50) - 20;
		contentRightWidthBorder = (window.styler.showInfor3) ? contentRightWidth + 7 : contentRightWidth + 17;				
		contentHeight = winHeight - 75;	
		contentHeightBorder = contentHeight + 30;		
	}
	else
	{
		contentLeftWidth = parseInt(winWidth*.50) - 10;
		contentLeftWidthBorder = contentLeftWidth;	
		contentRightWidth = parseInt(winWidth*.50) - 10;
		contentRightWidthBorder = contentRightWidth;			
		contentHeight = winHeight - 60;
		contentHeightBorder = contentHeight + 24;		
	}
	leftFrame.style.width = parseInt(winWidth*.50) + "px";
	leftFrame.style.height = winHeight + "px";
	try
	{
		if (self.left.onresize && self.left.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.left.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.left.document.getElementById("paneBorder").style.width = contentLeftWidthBorder + "px";
		self.left.document.getElementById("paneBodyBorder").style.width = contentLeftWidth + "px";
		self.left.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.left.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.left.document.getElementById("paneBody").style.width = contentLeftWidth + "px";
		self.left.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e) {}	
	rightFrame.style.left = parseInt(winWidth*.50) + "px";
	rightFrame.style.width = parseInt(winWidth*.50) + "px";
	rightFrame.style.height = winHeight + "px";
	try
	{
		if (self.right.onresize && self.right.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.right.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.right.document.getElementById("paneBorder").style.width = contentRightWidthBorder + "px";
		self.right.document.getElementById("paneBodyBorder").style.width = contentRightWidth + "px";
		self.right.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.right.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.right.document.getElementById("paneBody").style.width = contentRightWidth + "px";
		self.right.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e) {}	
}
</script>
</head>
<body style="overflow:hidden" onload="LoadJobReferences()" onresize="fitToScreen()">
	<iframe id="left" name="left" title="Main Content" level="2" tabindex="0" class="fullcontentframe" src="/lawson/xhrnet/ui/headerpane.htm" style="visibility:hidden;left:0%;position:absolute;top:0px;height:464px;width:375px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="right" name="right" title="Secondary Content" level="3" tabindex="0" class="fullcontentframe" src="/lawson/xhrnet/ui/headerpanelite.htm" style="visibility:hidden;left:375px;position:absolute;top:0px;height:464px;width:397px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/errmsg.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/jobreferences.htm,v 1.10.2.58 2014/02/25 22:49:13 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
