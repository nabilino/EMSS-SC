<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta http-equiv="Pragma" content="No-Cache">
<title>Transaction Library</title>
<script>
var gmsg;
var gfldnbr;
var gmsgnbr;
var reviewRecord;

function reviewRecordObject() 
{
	this.company = "";
	this.employee = "";
	this.code = "";
	this.review_type = "";
	this.description = "";
	this.sched_date = "";
	this.description = "";
	this.actual_date = "";
	this.by_employee = "";
	this.label_name = "";
	this.model_name = "";
	this.percentile = "0";
	this.perf_score = "0";
	this.perf_weighting = "0";
	this.goal_score = "0";
	this.goal_weighting = "0";
	this.total_score = "0";
	this.rating = "0";
	this.rating_description = "";
	this.rev_schedule = "";
	this.next_review = "";
	this.next_rev_code = "";
	this.seq_nbr = "0";
}

reviewRecord = new reviewRecordObject();

// Global variables for storing reports.
var lastIndex = -1;
var fc = '';
var e = new Array();
var l = 0;
var pg = false;
var PTFIELDS = false;
var abort = false;
var supv_job_desc = '';
var supv_pos_desc = '';
var max_detail = 0;
var PT_FC = '';
var PT_PTF_EMPLOYEE = '';
var PT_HSU_CODE	= '';
var PT_HSU_OP_CODE = '';
var HSU_FULL_NAME = '';

function DirRptObj()
{
	this.employee = -1;
	this.full_name = "Position not filled";
	this.super_code	= '';
	this.work_desc = '';
	this.direct_reports	= "N";
	this.supv_job_desc = '';
	this.supv_pos_desc = '';
	this.first_name	= '';
	this.middle_init = '';
	this.last_name = '';
	this.birthdate = '';
	this.date_hired	= '';
	this.adj_hire_date = '';
	this.next_review = '';
	this.work_country = '';
	this.web_type = '';
}

function V(fldnbr,fldval) 
{
	if (parent.updatetype == "RPT") 
	{
		if (fldnbr == "FC") 
		{
			fc = fldval;
			e = new Array();
			l = 0;
			lastIndex = -1;
			supv_job_desc = '';
			supv_pos_desc = '';
			max_detail = 0;
			PT_FC = '';
			PT_PTF_EMPLOYEE = '';
			PT_HSU_CODE	= '';
			PT_HSU_OP_CODE = '';
			PTFIELDS = false;

		} 
		else 
		{
			var i 	= fldnbr.search(/\d/);
			// Check if this field value has a number; if so, it is a detail line record.
			if (i != -1) 
			{
				l = parseInt(Number(fldnbr.substring(i,fldnbr.length)),10) - 1;
				fldnbr = fldnbr.substring(0,i);
				if (lastIndex != l) 
				{
					e[l] = new DirRptObj();
					e[l].supv_job_desc = supv_job_desc;
					e[l].supv_pos_desc = supv_pos_desc;
					lastIndex = l;
				}
			} 
			else 
			{
				// Header fields for HS10.1.
				switch (fldnbr) 
				{
					case "MAX-DETAIL":
						max_detail = fldval;
						break;
					case "S-JBC-DESC":
				    	supv_job_desc = fldval;
						break;
					case "S-POS-DESC":
				    	supv_pos_desc = fldval;
						break;
					case "PT-FC":
				    	PT_FC = fldval;
						break;
					case "PT-PTF-EMPLOYEE":
				    	PT_PTF_EMPLOYEE = fldval
						if ((fldval != "") && (Number(fldval) != 0))
							PTFIELDS = true;
						break;
					case "PT-HSU-CODE":
				    	PT_HSU_CODE = fldval;
						if (fldval != "") PTFIELDS = true;
						break;
					case "PT-HSU-OP-CODE":
				    	PT_HSU_OP_CODE = fldval;
						if (fldval != "") PTFIELDS = true;
						break;
					case "HSU-FULL-NAME" :
						HSU_FULL_NAME = fldval;
						break;
				}
				// This field didn't have a detail line number, so don't continue checking for detail (report) fields that match this field description.
				return;
			}
			// Detail fields (reports)
			switch (fldnbr) 
			{
				case "PTF-EMPLOYEE":
					e[l].employee = parseInt(Number(fldval), 10);
					break;
				case "PTF-FULL-NAME":
					e[l].full_name = fldval;
					e[l].first_name = fldval.substring(0,fldval.indexOf(" "));
					e[l].middle_init = fldval.substring(fldval.indexOf(".")-1,fldval.indexOf("."));
					break;
				case "DIRECT-REPORTS":
					e[l].direct_reports = fldval;
					break;
				case "HSU-CODE":
					e[l].super_code = fldval;
					if (fldval != "")
						e[l].employee = fldval;
					break;
				case "WORK-DESC":
				    e[l].work_desc = fldval;
					break;
				case "EMP-LAST-NAME":
				    e[l].last_name = fldval;
					break;
				case "PEM-BIRTHDATE":
				    e[l].birthdate = fldval;
					break;
				case "EMP-DATE-HIRED":
				    e[l].date_hired = fldval;
					break;
				case "EMP-ADJ-HIRE-DATE":
				    e[l].adj_hire_date = fldval;
					break;
				case "PEM-NEXT-REVIEW":
					e[l].next_review = fldval;
					break;
				case "EMP-WORK-COUNTRY":
				    e[l].work_country = fldval;
					break;
				case "JBC-WEB-TYPE":
					e[l].web_type = fldval;
					break;
				default:
					break;
			}
		}
	} 
	else if (parent.updatetype == "REV") 
	{
		if (fldnbr == "FC")
			reviewRecord = new reviewRecordObject();
		else if (fldnbr == "REV-SEQ-NBR")
			reviewRecord.seq_nbr = fldval;
		else if (fldnbr == "REV-COMPANY")
			reviewRecord.company = fldval;
		else if (fldnbr == "REV-EMPLOYEE")
			reviewRecord.employee = fldval;
		else if (fldnbr == "REV-SCHED-DATE")
			reviewRecord.sched_date = fldval;
		else if (fldnbr == "REV-CODE")
			reviewRecord.code = fldval;
		else if (fldnbr == "PEM-REV-SCHEDULE")
			reviewRecord.rev_schedule = fldval;
	}
}

function DataReturned(fldnbr, msgnbr, msg) 
{
	gmsg = msg;
	gfldnbr = fldnbr;
    gmsgnbr = msgnbr;
	if (Number(msgnbr) != 0) 
	{
		if ((parent.updatetype == "PAC") && (Number(msgnbr) == 12)) 
		{
			// Ignore the delete error if someone deleted the comments manually on HR90
			// (the error will be message number 12, "No More Records To View")--in that case, we
			// can just add new comments. If any other error was returned while deleting comments,
			// alert the message to the user.
		} 
		else 
		{
			parent.seaAlert(msg);
			abort = true;
		}
	} 
	else 
	{
		if (parent.updatetype == "RPT") 
		{
			if (msg.toUpperCase().indexOf("MORE RECORDS EXIST") != -1 && PTFIELDS)
				pg = true;
			else
				pg = false;
		}
	}
}
</script>
</head>
<body></body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/Attic/perflawheader.htm,v 1.1.2.12 2013/11/07 16:22:28 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
