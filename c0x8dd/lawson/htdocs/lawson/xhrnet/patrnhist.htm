<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<meta http-equiv="Pragma" content="No-Cache">
<title>Training History</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/common.js"></script>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var appObj;
var Courses = new Array();
var Proficiencies = new Array();
var SortDirection = new Array();
SortDirection["course_short_crs_desc"] = ">"; // first sort will be by ascending order
SortDirection["date_completed"] = ">"; // first sort will be by ascending order
var sortProperty;

function GetWebuser()
{
	authenticate("frameNm='jsreturn'|funcNm='StartApp()'|desiredEdit='EM'");
}

function StartApp()
{
	stylePage();
	var title = getSeaPhrase("TRAINING_HISTORY","ESS");
	setWinTitle(title);
	setTaskHeader("header",title,"Training");
	showWaitAlert(getSeaPhrase("WAIT","ESS"), GetPatrnhist);	
}

function GetPatrnhist()
{
	if (!appObj)
		appObj = new AppVersionObject(authUser.prodline, "HR");
    // if you call getAppVersion() right away and the IOS object isn't set up yet,
	// then the code will be trying to load the sso.js file, and your call for
	// the appversion will complete before the ios version is set
	if (iosHandler.getIOS() == null || iosHandler.getIOSVersionNumber() == null)
	{
		setTimeout(function(){ GetPatrnhist(); }, 10);
		return;
	}
	Courses = new Array();
	var dmeObj = new DMEObject(authUser.prodline, "patrnhist");
	if (appObj && appObj.getAppVersion() != null && appObj.getAppVersion().toString() >= "09.00.01")
		dmeObj.index = "trhset4";
	else
		dmeObj.index = "trhset1";
	dmeObj.sortdesc = "date-completed";
	dmeObj.exclude = "drill;keys";
	dmeObj.out = "JAVASCRIPT";
	dmeObj.field = "course;date-completed;ceu-awarded;rating;course.short-crs-desc";
	dmeObj.key = parseInt(authUser.company,10) +"="+ parseInt(authUser.employee,10);
	dmeObj.max = "600";
	dmeObj.func = "CheckPatrnhist()";
	DME(dmeObj, "jsreturn");
}

function CheckPatrnhist()
{
	Courses = Courses.concat(self.jsreturn.record);
	if (self.jsreturn.Next != "")
		self.jsreturn.location.replace(self.jsreturn.Next);
	else
	{
		if (Courses.length == 0)
			DspPatrnhist();
		else
			GetProficiencies();
	}
}

function GetProficiencies()
{
	Proficiencies = new Array();
	var dmeObj = new DMEObject(authUser.prodline, "pcodes");
	dmeObj.index = "pcoset1";
	dmeObj.key = "PF";
	dmeObj.exclude = "drill";
	dmeObj.out = "JAVASCRIPT";
	dmeObj.field = "code;description";
	dmeObj.max = "600";
	dmeObj.func = "PairProficiencies()";
	dmeObj.debug = false;
	DME(dmeObj, "jsreturn");
}

function PairProficiencies()
{
	Proficiencies = Proficiencies.concat(self.jsreturn.record);
	if (self.jsreturn.Next != "")
		self.jsreturn.location.replace(self.jsreturn.Next);
	else
	{
		for (var i=0; i<Courses.length; i++)
		{
			for (var j=0; j<Proficiencies.length; j++)
			{
				if (Courses[i].rating == Proficiencies[j].code)
				{
					Courses[i].description = Proficiencies[j].description
					break;
				}
			}
		}
		DspPatrnhist();
	}
}

function DoesItExist(value)
{
	return (typeof(value) == "undefined" ||  value == "undefined" || value == "" || value == "null") ? false : true;
}

function DspPatrnhist(onsort, property)
{
	var strBuffer = new Array();
	var toolTip = getSeaPhrase("SORT_BY_COURSE","ESS");
	var trainHistHtml = '<table id="histTbl" class="plaintableborder" cellspacing="0" cellpadding="0" width="100%" styler="list" summary="'+getSeaPhrase("TSUM_55","SEA")+'">'
	+ '<caption class="offscreen">'+getSeaPhrase("TRAINING_HISTORY","ESS")+'</caption>'
	+ '<tr><th scope="col" class="plaintableheaderborder" style="width:33%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortCourses(\'course_short_crs_desc\');return false" title="'+toolTip+'">'+getSeaPhrase("COURSE","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_BY_COMPLETED","ESS");
	trainHistHtml += '<th scope="col" class="plaintableheaderborder" style="width:17%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortCourses(\'date_completed\');return false" title="'+toolTip+'">'+getSeaPhrase("COMPLETED","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	trainHistHtml += '<th scope="col" class="plaintableheaderborder" style="width:15%;text-align:center">'+getSeaPhrase("CEU_CREDITS","ESS")+'</th>'
	+ '<th scope="col" class="plaintableheaderborder" style="width:33%;text-align:center">'+getSeaPhrase("QUAL_5","ESS")+'</th></tr>';
	strBuffer[0] = trainHistHtml;
	for (var i=0; i<Courses.length; i++)
	{
		trainHistHtml = '<tr><td class="plaintablecellborder" nowrap>'+((Courses[i].course_short_crs_desc)?Courses[i].course_short_crs_desc:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborder" style="text-align:center" nowrap>'+((Courses[i].date_completed)?Courses[i].date_completed:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborder" style="text-align:center" nowrap>'+((Courses[i].ceu_awarded)?Courses[i].ceu_awarded:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborder" style="text-align:center" nowrap>'+((Courses[i].description)?Courses[i].description:'&nbsp;')+'</td></tr>';
		strBuffer[i+1] = trainHistHtml;
	}
	strBuffer[strBuffer.length] = '</table>';
	try 
	{
		self.MAIN.document.getElementById("paneHeader").innerHTML = getSeaPhrase("HISTORY","ESS");
		if (Courses.length > 0)
			self.MAIN.document.getElementById("paneBody").innerHTML = strBuffer.join("");
		else
			self.MAIN.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelboldleft" style="padding-top:5px;padding-left:5px">'+getSeaPhrase("NO_TRAINING_HISTORY","ESS")+'</div>';
	}
	catch(e) {}
	self.MAIN.stylePage();
	if (onsort) 
	{
		var direction = (SortDirection[property] == "<") ? "ascending" : "descending";
		self.MAIN.styleSortArrow("histTbl", property, direction);
	}
	else
		self.MAIN.setLayerSizes(true);
	document.getElementById("MAIN").style.visibility = "visible";
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.MAIN.getWinTitle()]));
	fitToScreen();
}

function sortByAscProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortProperty == "date_completed")
	{
		name1 = formjsDate(formatDME(name1));
		name2 = formjsDate(formatDME(name2));
	}
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function sortByDescProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortProperty == "date_completed")
	{
		name1 = formjsDate(formatDME(name1));
		name2 = formjsDate(formatDME(name2));
	}
	if (name1 > name2)
		return -1;
	else if (name1 < name2)
		return 1;
	else
		return 0;
}

function SortCourses(property)
{
	var nextFunc = function()
	{
		var dir = SortDirection[property];
		sortProperty = property;
		switch (dir)
		{
			case ">": Courses.sort(sortByAscProperty); SortDirection[property] = "<"; break;
			case "<": Courses.sort(sortByDescProperty); SortDirection[property] = ">"; break;
			default: Courses.sort(sortByAscProperty); break;
		}
		// Set all other sort fields so that they will sort by default (ascending order first)
		for (var prop in SortDirection)
		{
			if (prop != property)
				SortDirection[prop] = ">";
		}
		DspPatrnhist(true, property);
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var mainFrame = document.getElementById("MAIN");
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentWidth;
	var contentWidthBorder;
	var contentHeightBorder;
	var contentHeight;
	if (window.styler && window.styler.showInfor)
	{			
		contentWidth = winWidth - 10;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 5 : contentWidth + 2;
		contentHeight = winHeight - 60;
		contentHeightBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentHeight + 30 : contentHeight + 25;
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentWidth = winWidth - 20;
		contentWidthBorder = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;
		contentHeight = winHeight - 75;
		contentHeightBorder = contentHeight + 30;
	}
	else
	{
		contentWidth = winWidth - 10;
		contentWidthBorder = contentWidth;
		contentHeight = winHeight - 60;
		contentHeightBorder = contentHeight + 24;		
	}
	mainFrame.style.width = winWidth + "px";
	mainFrame.style.height = winHeight + "px";
	try
	{
		if (self.MAIN.onresize && self.MAIN.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.MAIN.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.MAIN.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.MAIN.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e) {}
}
</script>
</head>
<body style="overflow:hidden" onload="GetWebuser()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="MAIN" name="MAIN" title="Main Content" level="2" tabindex="0" style="visibility:hidden;position:absolute;height:464px;width:625px;left:0px;top:32px" src="/lawson/xhrnet/ui/headerpane.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/patrnhist.htm,v 1.14.2.45 2014/02/12 23:38:24 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
