<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<meta http-equiv="Pragma" content="No-Cache">
<title>Multiple Jobs/Positions</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var jobRecs = new Array();
var jobsHash = new Array();
var sortProperty;
var sortDirection = "<";
var effectiveDate;

function GetWebuser()
{
	authenticate("frameNm='jsreturn'|funcNm='InitJobList()'|desiredEdit='EM'");
}

function InitJobList()
{	
	stylePage();
	var title = getSeaPhrase("MULTIPLE_JOBS_POSITION","SEA");
	setWinTitle(title);
	setTaskHeader("header",title,"Employment");
	effectiveDate = authUser.date;
	showWaitAlert(getSeaPhrase("WAIT","ESS"), GetJobInfo);
}

function GetJobInfo()
{
	jobRecs = new Array();
	jobsHash = new Array();
	var dmeObj = new DMEObject(authUser.prodline, "PAEMPPOS");
	dmeObj.out = "JAVASCRIPT";
	dmeObj.index = "PEPSET3";
	dmeObj.field = "pos-level;effect-date;end-date;position.description;jobcode.description;process-level.name;department.name";	
	dmeObj.key = parseInt(authUser.company,10)+"="+parseInt(authUser.employee,10);
	dmeObj.max = "600";
	dmeObj.select = "effect-date<="+effectiveDate+"&(end-date=00000000|end-date>="+effectiveDate+")&position.effect-date<="+effectiveDate;
	dmeObj.debug = false;
	dmeObj.otmmax = "1";	
	dmeObj.func = "DspJobInfo()";
	DME(dmeObj, "jsreturn");
}

function DspJobInfo()
{
	jobRecs = jobRecs.concat(self.jsreturn.record);
	if (self.jsreturn.Next)
		self.jsreturn.location.replace(self.jsreturn.Next);
	else 
	{
		sortProperty = "effect_date";	
		sortDirection = ">";
		jobRecs.sort(sortByProperty);		
		DrawJobSummary();		
	}
}

function ReloadJobSummary()
{
	var mainform = self.MAIN.document.forms["mainform"];
	clearRequiredField(mainform.effectivedate);
	if (NonSpace(mainform.effectivedate.value) == 0)
	{
		setRequiredField(mainform.effectivedate, getSeaPhrase("EFFECTIVE_DATE","ESS"));
	   	return;
	}
 	if (ValidDate(mainform.effectivedate) == false)
	   	return;
 	effectiveDate = formjsDate(formatDME(mainform.effectivedate.value));
	document.getElementById("DETAIL").style.visibility = "hidden";
	showWaitAlert(getSeaPhrase("WAIT","ESS"), GetJobInfo);
}

function DrawJobSummary(onsort, property)
{
	var toolTip = getSeaPhrase("SELECT_EFFECTIVE_DATE","ESS");
	var effectiveDateHtml = '<form name="mainform" onsubmit="return false">'
	+ '<table style="padding-left:5px;padding-right:5px;width:100%" border="0" cellspacing="0" cellpadding="0" role="presentation">'
	+ '<tr><td class="fieldlabelboldleft" colspan="4">'+getSeaPhrase("SELECT_EFFECTIVE_DATE","ESS")+'</td></tr>'
	+ '<tr><td class="fieldlabelbold" style="vertical-align:top;padding-top:7px;padding-bottom:5px" nowrap="nowrap"><label id="effectivedateLbl" for="effectivedate">'+getSeaPhrase("HOME_ADDR_1","ESS")+'</label></td>'
	+ '<td class="plaintablecell" style="vertical-align:top;padding-top:5px;padding-bottom:5px" nowrap="nowrap"><input class="inputbox" type="text" id="effectivedate" name="effectivedate" size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this);" value="'+FormatDte4(effectiveDate)+'" aria-labelledby="effectivedateLbl effectivedateFmt">'
	+ '<a href="javascript:parent.DateSelect(\'effectivedate\');" title="'+toolTip+'" aria-label="'+toolTip+'">'+uiCalendarIcon()+'</a><br/>'+uiDateFormatSpan("effectivedateFmt")+'</td>'
	+ '<td class="plaintablecellright" style="vertical-align:top;padding-top:5px;padding-bottom:5px" nowrap="nowrap">'
	+ uiButton(getSeaPhrase("CONTINUE","BEN"), "parent.ReloadJobSummary();return false", "margin-left:5px")
	+ '</td><td class="plaintablecellright" style="vertical-align:top;;padding-top:5px;padding-bottom:5px;width:100%">&nbsp;</td>'
	+ '</tr></table></form>'
	toolTip = getSeaPhrase("SORT_BY_POSITION","ESS");
	// position
	var jobsHtml = '<table id="jobsTbl" class="plaintableborder" cellspacing="0" cellpadding="0" width="100%" styler="list" summary="'+getSeaPhrase("TSUM_46","SEA")+'">'
	+ '<caption class="offscreen">'+getSeaPhrase("MULTIPLE_JOBS_POSITION","SEA")+'</caption>'
	+ '<tr><th scope="col" class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortJobsTable(\'position_description\');return false" title="'+toolTip+'">'+getSeaPhrase("JOB_PROFILE_8","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("JOB_PROFILE_9","ESS")+' - '+getSeaPhrase("SORT_BY_X","SEA");
	// job
	jobsHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortJobsTable(\'jobcode_description\'); return false" title="'+toolTip+'">'+getSeaPhrase("JOB_PROFILE_9","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_BY_EFFECTIVE_DATE","ESS");
	// effect date
	jobsHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortJobsTable(\'effect_date\');return false" title="'+toolTip+'">'+getSeaPhrase("HOME_ADDR_1","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	// end date
	jobsHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center">'+getSeaPhrase("END_DATE","ESS")+'</th>'
	// process level	
	jobsHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center">'+getSeaPhrase("JOB_PROFILE_3","ESS")+'</th>'
	// department
	jobsHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center">'+getSeaPhrase("JOB_PROFILE_4","ESS")+'</th></tr>';
	for (var i=0; i<jobRecs.length; i++)
	{
		var tip = getSeaPhrase("VIEW_DTL_FOR_JOB_2","SEA",[jobRecs[i].position_description+' '+jobRecs[i].jobcode_description,jobRecs[i].effect_date]);
		jobsHtml += '<tr><td class="plaintablecellborderleft" nowrap>';
		if (jobRecs[i].position_description)
			jobsHtml += '<a href="javascript:parent.FillDetail('+i+');" title="'+tip+'">'+jobRecs[i].position_description+'<span class="offscreen"> - '+tip+'</span></a></td>';
		else
			jobsHtml += '&nbsp;</td>';
	    jobsHtml += '<td class="plaintablecellborderleft" nowrap>';
		if (jobRecs[i].jobcode_description)
			jobsHtml += '<a href="javascript:parent.FillDetail('+i+');" title="'+tip+'">'+jobRecs[i].jobcode_description+'<span class="offscreen"> - '+tip+'</span></a></td>';
		else
			jobsHtml += '&nbsp;</td>';
		jobsHtml += '<td class="plaintablecellborder" style="text-align:center" nowrap>';
		if (jobRecs[i].effect_date)
			jobsHtml += '<a href="javascript:parent.FillDetail('+i+');" title="'+tip+'">'+jobRecs[i].effect_date+'<span class="offscreen"> - '+tip+'</span></a></td>';
		else
			jobsHtml += '&nbsp;</td>';
		jobsHtml += '<td class="plaintablecellborder" style="text-align:center" nowrap>'+((jobRecs[i].end_date)?jobRecs[i].end_date:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborderleft" nowrap>'+((jobRecs[i].process_level_name)?jobRecs[i].process_level_name:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborderleft" nowrap>'+((jobRecs[i].department_name)?jobRecs[i].department_name:'&nbsp;')+'</td></tr>';
	}
	jobsHtml += '</table>';
	// upper window
	try 
	{
		self.MAIN.document.getElementById("paneHeader").innerHTML = getSeaPhrase("JOB_PROFILE_19","ESS");
		if (jobRecs.length > 0)
			self.MAIN.document.getElementById("paneBody").innerHTML = effectiveDateHtml+jobsHtml;
		else
			self.MAIN.document.getElementById("paneBody").innerHTML = effectiveDateHtml+'<div class="fieldlabelboldleft" style="padding-top:5px;padding-left:5px">'+getSeaPhrase("NOTHING_TO_DISPLAY","ESS")+'</div>';
		self.MAIN.stylePage();
		self.MAIN.setLayerSizes();
		if (onsort)
			self.MAIN.styleSortArrow("jobsTbl", property, (sortDirection == "<") ? "ascending" : "descending");
	}
	catch(e) {}
	document.getElementById("MAIN").style.visibility = "visible";
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.MAIN.getWinTitle()]));
	fitToScreen();
}
		
function FillDetail(n)
{
	var nextFunc = function()
	{
		activateTableRow("jobsTbl",n,self.MAIN);
		var hashKey = parseInt(jobRecs[n].pos_level,10)+"|"+jobRecs[n].effect_date;
		if (jobsHash[hashKey])
			MoveDetailToScreen(jobsHash[hashKey]);
		else
		{
			showWaitAlert(getSeaPhrase("WAIT","ESS"));
			var dmeObj = new DMEObject(authUser.prodline, "PAEMPPOS");
			dmeObj.out = "JAVASCRIPT";
			dmeObj.index = "PEPSET3";
			dmeObj.field = "user-level.description;supervisor.description;supervisor-ind.description;locat-code.description;"
			+ "bargain-unit.description;fte;annual-hours;pay-rate;pro-rate-a-sal;currency.description;schedule.description;"
			+ "schedule.effect-date;pay-grade;pay-step;work-sched.description;work-sched.effect-date;shift;date-assign;"
			+ "user-amount;exp-company;exp-acct-unit;exp-account;exp-sub-acct;activity.description;acct-cat.description";	
			dmeObj.key = parseInt(authUser.company,10)+"="+parseInt(authUser.employee,10)+"="+parseInt(jobRecs[n].pos_level,10)+"="+formjsDate(formatDME(jobRecs[n].effect_date));
			dmeObj.max = "1";
			dmeObj.debug = false;
			dmeObj.otmmax = "100";	
			dmeObj.func = "StorePosRec("+n+")";
			DME(dmeObj, "jsreturn");
		}
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

function StorePosRec(n)
{
	var hashKey = parseInt(jobRecs[n].pos_level,10) + "|" + jobRecs[n].effect_date;
	var tmpAry = new Array();
	tmpAry = tmpAry.concat(self.jsreturn.record);
	var jobRec = tmpAry[0];
	if (typeof(jobRec.Rel_schedule) != "undefined")
	{
		var j = 0;
		var len = jobRec.Rel_schedule.length;
		while (j < len && formjsDate(formatDME(jobRec.Rel_schedule[j].effect_date)) > authUser.date)
		{
			j++;
		}	
		jobRec.schedule_description = jobRec.Rel_schedule[j].description;	
	}
	if (typeof(jobRec.Rel_work_sched) != "undefined")
	{
		var j = 0;
		var len = jobRec.Rel_work_sched.length;
		while (j < len && formjsDate(formatDME(jobRec.Rel_work_sched[j].effect_date)) > authUser.date)
		{
			j++;
		}	
		jobRec.work_sched_description = jobRec.Rel_work_sched[j].description;	
	}			
	jobsHash[hashKey] = jobRec;	
	MoveDetailToScreen(jobsHash[hashKey]);
}

function MoveDetailToScreen(jobRec)
{
	//labels and data for the bottom window
	var recAry = [jobRec.position_description+' '+jobRec.jobcode_description,jobRec.effect_date];
	var strHtml = '<table border="0" cellspacing="0" cellpadding="0" width="100%" summary="'+getSeaPhrase("TSUM_47","SEA",recAry)+'">';
	strHtml += '<caption class="offscreen">'+getSeaPhrase("TCAP_30","SEA",[recAry])+'</caption>';
	strHtml += '<tr><th scope="col" colspan="4"></th></tr>';
	// user level, work schedule
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("USER_LEVEL","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.user_level_description)?jobRec.user_level_description:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("WORK_SCHEDULE","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.work_sched_description)?jobRec.work_sched_description:'&nbsp;')+'</td></tr>';
	// supervisor, shift
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("JOB_PROFILE_7","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.supervisor_description)?jobRec.supervisor_description:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:30%">'+getSeaPhrase("SHIFT","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.shift)?jobRec.shift:'&nbsp;')+'</td></tr>';
	// indirect supervisor, assignment date
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("IND_SUPERVISOR","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.supervisor_ind_description)?jobRec.supervisor_ind_description:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("ASSIGN_DATE","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.date_assign)?jobRec.date_assign:'&nbsp;')+'</td></tr>';
	//location, user amount
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("JOB_PROFILE_6","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.locat_code_description)?jobRec.locat_code_description:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("USER_AMOUNT","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.user_amount)?jobRec.user_amount:'&nbsp;')+'</td></tr>';
	// bargaining unit, expense company
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("BARGAINING_UNIT","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.bargain_unit_description)?jobRec.bargain_unit_description:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("EXPENSE_COMPANY","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.exp_company)?jobRec.exp_company:'&nbsp;')+'</td></tr>';
	// FTE, expense accounting unit
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("FTE","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.fte)?jobRec.fte:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("EXP_ACCOUNT_UNIT","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.exp_acct_unit)?jobRec.exp_acct_unit:'&nbsp;')+'</td></tr>';
	// annual hours, expense account
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("ANNUAL_HOURS","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.annual_hours)?jobRec.annual_hours:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("EXP_ACCOUNT","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.exp_account)?jobRec.exp_account:'&nbsp;')+'</td></tr>';
	// pay rate, expense sub-account
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("PAY_RATE","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.pay_rate)?jobRec.pay_rate:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("EXP_SUB_ACCOUNT","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.exp_sub_acct)?jobRec.exp_sub_acct:'&nbsp;')+'</td></tr>';
	// prorated salary, activity
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("PRO_SALARY","SEA")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.pro_rate_a_sal)?jobRec.pro_rate_a_sal:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("ACTIVITY","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.activity_description)?jobRec.activity_description:'&nbsp;')+'</td></tr>';
	// currency, account category
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("QUAL_16","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.currency_description)?jobRec.currency_description:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("ACCOUNT_CATEGORY","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.acct_cat_description)?jobRec.acct_cat_description:'&nbsp;')+'</td></tr>';
	// pay schedule
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("PAY_SCHEDULE","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.schedule_description)?jobRec.schedule_description:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">&nbsp;</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>&nbsp;</td></tr>';
	// pay grade
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("PAY_GRADE","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.pay_grade)?jobRec.pay_grade:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">&nbsp;</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>&nbsp;</td></tr>';
	// pay step
	strHtml += '<tr><th scope="row" class="plaintablerowheaderborderlite" style="width:20%">'+getSeaPhrase("PAY_STEP","ESS")+'</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>'+((jobRec.pay_step)?jobRec.pay_step:'&nbsp;')+'</td>';
	strHtml += '<th scope="row" class="plaintablerowheaderborderlite" style="width:20%">&nbsp;</th>';
	strHtml += '<td class="plaintablecellborderdisplay" style="width:30%" nowrap>&nbsp;</td>';	
	strHtml += '</tr></table>';
	try 
	{
		self.DETAIL.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DETAIL","ESS");
		self.DETAIL.document.getElementById("paneBody").innerHTML = strHtml;
	}
	catch(e) {}
	document.getElementById("DETAIL").style.top = (Number(document.getElementById("MAIN").style.height.toString().replace("px",""))+32)+"px";
	document.getElementById("DETAIL").style.visibility = "visible";
	self.DETAIL.stylePage();
	self.DETAIL.setLayerSizes();
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.DETAIL.getWinTitle()]));
	fitToScreen();
}

function sortByProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortProperty == "effect_date" || sortProperty == "end_date")
	{
		name1 = formjsDate(formatDME(name1));
		name2 = formjsDate(formatDME(name2));
	}
	if (sortDirection == "<") // ascending sort
	{
		if (name1 < name2)
			return -1;
		else if (name1 > name2)
			return 1;
		else
			return 0;
	}
	else // descending sort
	{
		if (name1 > name2)
			return -1;
		else if (name1 < name2)
			return 1;
		else
			return 0;
	}
}

function SortJobsTable(property)
{
	var nextFunc = function()
	{
		if (sortProperty != property)
			sortDirection = "<";
		else
			sortDirection = (sortDirection == "<") ? ">" : "<";	
		sortProperty = property;
		jobRecs.sort(sortByProperty);
		DrawJobSummary(true, property);
		MoveDetailToScreen(true, property);
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var mainFrame = document.getElementById("MAIN");
	var detailFrame = document.getElementById("DETAIL");
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentWidth;
	var contentWidthBorder;
	var contentTopHeightBorder;
	var contentTopHeight;
	var contentBottomHeightBorder;
	var contentBottomHeight;
	if (window.styler && window.styler.showInfor)
	{			
		contentWidth = winWidth - 10;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 5 : contentWidth + 2;
		contentTopHeight = parseInt(winHeight*.50,10) - 60;
		contentTopHeightBorder = contentTopHeight + 30;
		contentBottomHeight = parseInt(winHeight*.50,10) - 30;
		contentBottomHeightBorder = contentBottomHeight + 30;		
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentWidth = winWidth - 20;
		contentWidthBorder = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;
		contentTopHeight = parseInt(winHeight*.50,10) - 75;	
		contentTopHeightBorder = contentTopHeight + 30;
		contentBottomHeight = parseInt(winHeight*.50,10) - 45;	
		contentBottomHeightBorder = contentBottomHeight + 30;		
	}
	else
	{
		contentWidth = winWidth - 10;
		contentWidthBorder = contentWidth;
		contentTopHeight = parseInt(winHeight*.50,10) - 65;
		contentTopHeightBorder = contentTopHeight + 24;
		contentBottomHeight = parseInt(winHeight*.50,10) - 35;
		contentBottomHeightBorder = contentBottomHeight + 24;			
	}
	mainFrame.style.width = winWidth + "px";
	mainFrame.style.height = (parseInt(winHeight*.50,10) - 30) + "px";
	try
	{
		if (self.MAIN.onresize && self.MAIN.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.MAIN.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.MAIN.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBorder").style.height = contentTopHeightBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.height = contentTopHeight + "px";
		self.MAIN.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBody").style.height = contentTopHeight + "px";
	}
	catch(e) {}
	detailFrame.style.top = parseInt(winHeight*.50,10) + "px";
	detailFrame.style.width = winWidth + "px";
	detailFrame.style.height = parseInt(winHeight*.50,10) + "px";	
	try
	{
		if (self.DETAIL.onresize && self.DETAIL.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.DETAIL.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.DETAIL.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.DETAIL.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.DETAIL.document.getElementById("paneBorder").style.height = contentBottomHeightBorder + "px";
		self.DETAIL.document.getElementById("paneBodyBorder").style.height = contentBottomHeight + "px";
		self.DETAIL.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.DETAIL.document.getElementById("paneBody").style.height = contentBottomHeight + "px";
	}
	catch(e) {}	
}
</script>
</head>
<body style="overflow:hidden" onload="GetWebuser()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" src="/lawson/xhrnet/ui/header.htm" style="visibility:hidden;position:absolute;top:0px;left:0px;width:803px;height:32px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="MAIN" name="MAIN" title="Main Content" level="2" tabindex="0" src="/lawson/xhrnet/ui/headerpane.htm" style="visibility:hidden;position:absolute;top:32px;left:0px;width:803px;height:369px" marginwidth="0" marginheight="0" frameborder="no" scrolling="no"></iframe>
	<iframe id="DETAIL" name="DETAIL" title="Secondary Content" level="3" tabindex="0" src="/lawson/xhrnet/ui/headerpanelite.htm" style="visibility:hidden;position:absolute;top:401px;left:0px;width:803px;height:100px" marginwidth="0" marginheight="0" frameborder="no" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" src="/lawson/xhrnet/dot.htm" style="visibility:hidden;height:0px;width:0px;" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/Attic/multjobs.htm,v 1.1.2.27 2014/02/13 22:48:37 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2012 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->

