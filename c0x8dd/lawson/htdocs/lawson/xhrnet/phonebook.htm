<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<title>Phone Book</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/common.js"></script>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script type="text/javascript" src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var company;
var employee;
var prodline;
var first_name_str = " ";
var last_name_str = " ";
var process_level_str = " ";
var process_level_index = 0;
var ProcessLevels = new Array();
var SearchRecs = new Array();
var RECS_PER_PAGE = 200;
var LASTNAME = false;
var FIRSTNAME = false;
var PROCLEVEL = false;
var PATHFIND = false;
var sortProperty;
var sortDirection = "<";
var appObj;

function OpenPhoneBook()
{
	clearTimeout(timer);
	authenticate("frameNm='jsreturn'|funcNm='user=authUser;StartApp()'|desiredEdit='EM'");
}

function StartApp()
{
	stylePage();
	var title = getSeaPhrase("PHONE_BOOK","ESS");
	setWinTitle(title);
	setTaskHeader("header",title,"Employment");
	showWaitAlert(getSeaPhrase("WAIT","ESS"), GetProcessLevels);
}

function GetProcessLevels()
{
	if (!appObj)
		appObj = new AppVersionObject(authUser.prodline, "HR");
    // if you call getAppVersion() right away and the IOS object isn't set up yet,
	// then the code will be trying to load the sso.js file, and your call for
	// the appversion will complete before the ios version is set
	if (iosHandler.getIOS() == null || iosHandler.getIOSVersionNumber() == null)
	{
		setTimeout(function(){GetProcessLevels();}, 10);
		return;
	}
	company = user.company;
	employee = user.employee;
	prodline = user.prodline;
	ProcessLevels = new Array();
	if (emssObjInstance.emssObj.filterSelect)
		GetSearchScreen();
	else
	{	
		var dmeObj = new DMEObject(prodline, "prsystem");
		dmeObj.out = "JAVASCRIPT";
		dmeObj.index = "prsset1";
		dmeObj.field = "process-level;name";
		dmeObj.key = parseInt(company,10) + "";
		dmeObj.cond = "active-pl";
		dmeObj.func = "StoreProcessLevels()";
		dmeObj.max = "600";
		dmeObj.debug = false;
		DME(dmeObj, "jsreturn");
	}
}

function StoreProcessLevels()
{
	ProcessLevels = ProcessLevels.concat(self.jsreturn.record);
	if (self.jsreturn.Next != "")
		self.jsreturn.location.replace(self.jsreturn.Next);
	else
		GetSearchScreen();
}

function GetSearchScreen()
{
	var toolTip;
	var SearchForm = '<div style="text-align:center">'
	+ '<table id="criteriaTbl" border="0" cellspacing="0" cellpadding="0" style="width:auto;margin-left:auto;margin-right:auto" role="presentation">'
	+ '<tr><td class="plaintablerowheader" style="width:35%"><label for="FirstName">'+getSeaPhrase("DEP_34","ESS")+'</label></td>'
	+ '<td class="plaintablecell" style="width:65%" nowrap>'
	+ '<input class="inputbox" type="text" id="FirstName" maxlength="15" value="'+first_name_str+'" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="plaintablerowheader" style="width:35%"><label for="LastName">'+getSeaPhrase("DEP_38","ESS")+'</label></td>'
	+ '<td class="plaintablecell" style="width:65%" nowrap>'
	+ '<input class="inputbox" type="text" id="LastName" maxlength="15" value="'+last_name_str+'" onfocus="this.select()"></td></tr>'
	+ '<tr><td class="plaintablerowheaderborderbottom" style="width:35%"><label for="Proc">'+getSeaPhrase("JOB_PROFILE_3","ESS")+'</label></td>'
	if (emssObjInstance.emssObj.filterSelect)
	{
		toolTip = dmeFieldToolTip("processlevel");
		SearchForm += '<td class="plaintablecell" style="width:65%" nowrap><input class="inputbox" type="text" id="Proc" fieldnm="processlevel" value="" size="5" maxlength="5" onfocus="this.select()" onkeyup="parent.dmeFieldOnKeyUpHandler(event,\'processlevel\');">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'processlevel\');" style="margin-left:5px" title="'+toolTip+'" aria-label="'+toolTip+'">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0" alt="'+toolTip+'" title="'+toolTip+'"></a>'
		+ '<span id="ProcDesc" class="plaintablecelldisplay" style="width:200px"></span></td></tr>'
	}
	else
	{
		process_level_str = (process_level_index) ? process_level_str : " ";
		SearchForm += '<td class="plaintablecell" style="width:65%" nowrap><select class="inputbox" id="Proc">'+BuildProcSelect(process_level_str)+'</select></td></tr>'
	}
    SearchForm += '<tr><td>&nbsp;</td><td class="plaintablecell">'
	+ uiButton(getSeaPhrase("SEARCH","ESS"),"parent.PerformSearch();return false")
	+ uiButton(getSeaPhrase("CLEAR","ESS"),"parent.ClearSearch();return false","margin-left:5px")
	+ '</td></tr></table></div><div id="searchResults" style="width:100%"></div>';
	self.searchFrame.document.getElementById("paneHeader").innerHTML = getSeaPhrase("EMPLOYEE_SEARCH","ESS");
	self.searchFrame.document.getElementById("paneBody").innerHTML = SearchForm;
	self.searchFrame.stylePage();
	self.document.getElementById("searchFrame").style.visibility = "visible";
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.searchFrame.getWinTitle()]));
	fitToScreen();
}

function ClearSearch()
{
	var nextFunc = function()
	{
		first_name_str = " ";
		last_name_str = " ";
		process_level_str = " ";
		process_level_index = 0;
		self.searchFrame.document.getElementById("FirstName").value = " ";
		self.searchFrame.document.getElementById("LastName").value = " ";
		if (emssObjInstance.emssObj.filterSelect)
		{	
			self.searchFrame.document.getElementById("Proc").value = " ";
			self.searchFrame.document.getElementById("ProcDesc").innerHTML = "";
		}	
		else
			self.searchFrame.document.getElementById("Proc").selectedIndex = 0;
		self.searchFrame.document.getElementById("searchResults").innerHTML = "";
		removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.searchFrame.getWinTitle()]));
	};
	showWaitAlert(getSeaPhrase("WAIT","ESS"), nextFunc);
}

function PerformSearch()
{
	var obj = self.searchFrame.document.getElementById("Proc");
	if (emssObjInstance.emssObj.filterSelect)
	{	
		process_level_index = 0;
		process_level_str = obj.value;	
	}
	else
	{
		process_level_index = obj.selectedIndex;
		process_level_str = obj.options.item(process_level_index).value;	
	}
	obj = self.searchFrame.document.getElementById("LastName");
	obj.value = stripPadding(obj.value);
	last_name_str = obj.value;
	obj = self.searchFrame.document.getElementById("FirstName");
	obj.value = stripPadding(obj.value);
	first_name_str = obj.value;
	LASTNAME = (NonSpace(last_name_str))?true:false;
	FIRSTNAME = (NonSpace(first_name_str))?true:false;
	PROCLEVEL = (NonSpace(process_level_str) || process_level_index)?true:false;
	PATHFIND = (PROCLEVEL && (LASTNAME || !FIRSTNAME))?true:false;
	clearRequiredField(self.searchFrame.document.getElementById("FirstName"));
	if (!LASTNAME && !FIRSTNAME && !PROCLEVEL) 
	{
		setRequiredField(self.searchFrame.document.getElementById("FirstName"), getSeaPhrase("SEARCH_EMPLOYEE_NEED_INFO","ESS"), self.searchFrame.document.getElementById("FirstName"));
    	return;
	} 
	else
		showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), QueryResults);
}

function QueryResults()
{
	SearchRecs = new Array();
	if (PATHFIND) 
	{
		var dmeObj = new DMEObject(prodline, "pathfind");
		dmeObj.out = "JAVASCRIPT";
		dmeObj.index = "ptfset5";
		dmeObj.field = "employee.label-name-1;employee.last-name;department.name;"
		+ "employee.email-address;location.description;pa-employee.wk-phone-nbr;"
		+ "pa-employee.wk-phone-ext;pa-employee.wk-phone-cntry";
		if (appObj && appObj.getAppVersion() != null && appObj.getAppVersion().toString() >= "10.00.00")
			dmeObj.field += ";employee.email-personal";
		dmeObj.key = parseInt(company,10) + "=" + 14 + "=" + escape(process_level_str,1);
		// perform case insensitive substring match rather than exact match
		if (LASTNAME)
			dmeObj.select = "last-name^~" + last_name_str;
		if (FIRSTNAME) 
		{
			if (LASTNAME)
				dmeObj.select += "&first-name^~" + first_name_str;
			else
				dmeObj.select = "first-name^~" + first_name_str;
		}
		dmeObj.cond = "act-employee";
		dmeObj.max = RECS_PER_PAGE + "";
		dmeObj.debug = false;
		dmeObj.func = "DspPhoneBook(true)";
	} 
	else if (PROCLEVEL && FIRSTNAME) 
	{
		var dmeObj = new DMEObject(prodline, "employee");
		dmeObj.out = "JAVASCRIPT";
		dmeObj.index = "empset7";
		dmeObj.field = "label-name-1;last-name;department.name;"
		+ "email-address;location.description;paemployee.wk-phone-nbr;paemployee.wk-phone-ext;"
		+ "paemployee.wk-phone-cntry";
		if (appObj && appObj.getAppVersion() != null && appObj.getAppVersion().toString() >= "10.00.00")
			dmeObj.field += ";email-personal";
		dmeObj.key = parseInt(company,10) + "=" + escape(process_level_str,1);
		dmeObj.select = "first-name^~" + first_name_str;
		dmeObj.cond = "act-employee";
		dmeObj.max = RECS_PER_PAGE + "";
		dmeObj.debug = false;
		dmeObj.func = "DspPhoneBook(true)";
	} 
	else 
	{
		var dmeObj = new DMEObject(prodline, "employee");
		dmeObj.out = "JAVASCRIPT";
		dmeObj.index = "empset6";
		dmeObj.field = "label-name-1;last-name;department.name;email-address;location.description;"
		+ "paemployee.wk-phone-nbr;paemployee.wk-phone-ext;paemployee.wk-phone-cntry";
		if (appObj && appObj.getAppVersion() != null && appObj.getAppVersion().toString() >= "10.00.00")
			dmeObj.field += ";email-personal";
		dmeObj.key = parseInt(company,10) + "";
		if (FIRSTNAME && !LASTNAME)	
		{
			dmeObj.select = "first-name^~" + first_name_str;
		} 
		else if (LASTNAME) 
		{
			dmeObj.select = "last-name^~" + last_name_str;
			if (FIRSTNAME)
				dmeObj.select += "&first-name^~" + first_name_str;
		}
		dmeObj.cond = "act-employee";
		dmeObj.max = RECS_PER_PAGE + "";
		dmeObj.debug = false;
		dmeObj.func = "DspPhoneBook(true)";
	}
	DME(dmeObj, "jsreturn");
}

function DspPhoneBook(storerecs, onsort, property)
{
	var searchResults = self.searchFrame.document.getElementById("searchResults");
	searchResults.style.visibility = "hidden";
	var html = "";
	if (storerecs)
		SearchRecs = self.jsreturn.record;
	if (SearchRecs.length == 0) 
	{
		html += '<p class="fieldlabelbold" style="text-align:center">'+getSeaPhrase("NO_MATCHES_FOUND","ESS")+'</p>'
		html += '<div align="center" style="padding-top:5px;padding-bottom:5px">'
		html += uiButton(getSeaPhrase("START_OVER","ESS"),"parent.ClearSearch();return false")
		html += '</div>'
	} 
	else 
	{
		var toolTip = getSeaPhrase("SORT_BY_LAST_NAME","ESS");	
		html += '<table id="phoneresultsTbl" class="plaintableborder" cellspacing="0" width="100%" styler="list" summary="'+getSeaPhrase("TSUM_77","SEA")+'">'
		html += '<caption class="offscreen">'+getSeaPhrase("TCAP_57","SEA")+'</caption>'
		html += '<tr><th scope="col" class="plaintableheaderborder" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
		html += '<a class="columnsort" href="javascript:;" '
		if (PATHFIND)
			html += 'onclick="parent.SortEmployee(\'employee_last_name\');return false"'
		else
			html += 'onclick="parent.SortEmployee(\'last_name\');return false" title="'+toolTip+'">'+getSeaPhrase("NAME","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
		toolTip = getSeaPhrase("JOB_OPENINGS_8","ESS");
		html += '<th scope="col" class="plaintableheaderborder" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
		html += '<a class="columnsort" href="javascript:;" onclick="parent.SortEmployee(\'department_name\');return false" title="'+toolTip+'">'+getSeaPhrase("JOB_PROFILE_4","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
		toolTip = getSeaPhrase("JOB_OPENINGS_10","ESS");
		html += '<th scope="col" class="plaintableheaderborder" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
		html += '<a class="columnsort" href="javascript:;" onclick="parent.SortEmployee(\'location_description\');return false" title="'+toolTip+'">'+getSeaPhrase("JOB_PROFILE_6","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
		html += '<th scope="col" class="plaintableheaderborder">'+getSeaPhrase("PHONE","ESS")+'</th>'
		html += '<th scope="col" class="plaintableheaderborder">'+getSeaPhrase("EXTENSION","ESS")+'</th>'
		html += '<th scope="col" class="plaintableheaderborder">'+getSeaPhrase("PHONE_COUNTRY","ESS")+'</th>'
		if (appObj && appObj.getAppVersion() != null && appObj.getAppVersion().toString() >= "10.00.00")
			html += '<th scope="col" class="plaintableheaderborder">'+getSeaPhrase("PERSONAL_EMAIL","SEA")+'</th>'
		html += '</tr>'
		html += GetPhoneTable(SearchRecs,PATHFIND)
		html += '</table><div align="center" style="padding-top:5px;padding-bottom:5px;white-space:nowrap">'
		html += uiButton(getSeaPhrase("START_OVER","ESS"),"parent.ClearSearch();return false");
	  	if (self.jsreturn.Prev != "")
			html += uiButton(getSeaPhrase("PREVIOUS","ESS"),"parent.jsreturn.location.replace(parent.jsreturn.Prev);return false","margin-left:5px");
		if (self.jsreturn.NbrRecs == parseInt(RECS_PER_PAGE,10) && self.jsreturn.Next != "")
			html += uiButton(getSeaPhrase("NEXT","ESS"),"parent.jsreturn.location.replace(parent.jsreturn.Next);return false","margin-left:5px");
		html += '</div>'
	}
	searchResults.innerHTML = uiTable(self.searchFrame, getSeaPhrase("RESULTS","ESS"), html);
	self.searchFrame.stylePage();
	fitToScreen();
	if (onsort)
		self.searchFrame.styleSortArrow("phoneresultsTbl", property, (sortDirection == "<") ? "ascending" : "descending");
	searchResults.style.visibility = "visible";
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.searchFrame.getWinTitle()]));
	fitToScreen();
}

function GetPhoneTable(Records, FromPathfind)
{
	var PhoneTable = '';
	if (FromPathfind) 
	{
		for (var i=0; i<Records.length; i++) 
		{
 			var PhoneRec = Records[i]
    		PhoneTable += '<tr><td class="plaintablecellborder" nowrap>'
			if (NonSpace(PhoneRec.employee_email_address) > 0) 
			{
				var tip = PhoneRec.employee_label_name_1+' '+PhoneRec.employee_email_address+' - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA");
				PhoneTable += '<a href="mailto:'+PhoneRec.employee_email_address+'" title="'+tip+'">'+PhoneRec.employee_label_name_1+'<span class="offscreen"> - '+PhoneRec.employee_email_address+' - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA")+'</span></a>'
   			}
   			else
   				PhoneTable += PhoneRec.employee_label_name_1;
   			PhoneTable += '</td><td class="plaintablecellborder" nowrap>'+PhoneRec.department_name+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.location_description+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.pa_employee_wk_phone_nbr+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.pa_employee_wk_phone_ext+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.pa_employee_wk_phone_cntry+'&nbsp;</td>'
			if (appObj && appObj.getAppVersion() != null && appObj.getAppVersion().toString() >= "10.00.00")
			{
				var tip = PhoneRec.employee_label_name_1+' '+PhoneRec.employee_email_personal+' - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA");
				PhoneTable += '<td class="plaintablecellborder" nowrap>' 
				+ '<a href="mailto:'+PhoneRec.employee_email_personal+'" title="'+tip+'"><span class="offscreen">'+PhoneRec.employee_label_name_1+' - </span>'+PhoneRec.employee_email_personal+'<span class="offscreen"> - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA")+'</span></a>&nbsp;</td>'
			}
			PhoneTable += '</tr>'
  		}
	} 
	else 
	{
		for (var i=0; i<Records.length; i++) 
		{
 			var PhoneRec = Records[i];
    		PhoneTable += '<tr><td class="plaintablecellborder" nowrap>'
   			if (NonSpace(PhoneRec.email_address) > 0) 
   			{
   				var tip = PhoneRec.label_name_1+' '+PhoneRec.email_address+' - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA");
   				PhoneTable += '<a href="mailto:'+PhoneRec.email_address+'" title="'+tip+'">'+PhoneRec.label_name_1+'<span class="offscreen"> - '+PhoneRec.email_address+' - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA")+'</span></a>'
   			}
   			else
   				PhoneTable += PhoneRec.label_name_1
   			PhoneTable += '</td><td class="plaintablecellborder" nowrap>'+PhoneRec.department_name+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.location_description+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.paemployee_wk_phone_nbr+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.paemployee_wk_phone_ext+'&nbsp;</td>'
			+ '<td class="plaintablecellborder" nowrap>'+PhoneRec.paemployee_wk_phone_cntry+'&nbsp;</td>'
			if (appObj && appObj.getAppVersion() != null && appObj.getAppVersion().toString() >= "10.00.00")
			{
				var tip = PhoneRec.label_name_1+' '+PhoneRec.email_personal+' - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA");
				PhoneTable += '<td class="plaintablecellborder" nowrap><a href="mailto:'+PhoneRec.email_personal+'" title="'+tip+'">'+PhoneRec.email_personal+'<span class="offscreen"> - '+PhoneRec.email_personal+' - '+getSeaPhrase("SEND_EMAIL_TO_X","SEA")+'</span></a></td>'
			}
			PhoneTable += '</tr>'
  		}
	}
	return PhoneTable
}

function stripPadding(str)
{
	str = String(str);
	var i = 0;
	while (str.charAt(i) == " ")
	{
		i++;
	}
	var j = str.length-1;
	while (str.charAt(j) == " ")
	{
		j--;
	}
	return (str.substring(i,j+1));
}

function BuildProcSelect(code)
{
	var selectHtml = new Array();
	var tmpObj;
	selectHtml[0] = '<option value=" ">'
	for (var i=0; i<ProcessLevels.length; i++)
	{
		tmpObj = ProcessLevels[i];
		selectHtml[i+1] = '<option value="'+tmpObj.process_level+'"';
		selectHtml[i+1] += (code == tmpObj.process_level)?' selected>':'>';
		selectHtml[i+1] += tmpObj.name;
	}
	return selectHtml.join("");
}

function sortByProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortDirection == "<") // ascending sort
	{
		if (name1 < name2)
			return -1;
		else if (name1 > name2)
			return 1;
		else
			return 0;
	}
	else // descending sort
	{
		if (name1 > name2)
			return -1;
		else if (name1 < name2)
			return 1;
		else
			return 0;
	}
}

function SortEmployee(property)
{
	var nextFunc = function()
	{
		if (sortProperty != property)
			sortDirection = "<";
		else
			sortDirection = (sortDirection == "<") ? ">" : "<";	
		sortProperty = property;
		SearchRecs.sort(sortByProperty);
		DspPhoneBook(true, true, property);
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

/* Filter Select logic */
function performDmeFieldFilterOnLoad(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{		
		case "processlevel":
			dmeFilter.addFilterField("process-level", 5, getSeaPhrase("PROCESS_LEVEL_CODE","ESS"), true);
			dmeFilter.addFilterField("name", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);		
			filterDmeCall(dmeFilter,
				"jsreturn",
				"prsystem",
				"prsset1",
				"process-level;name",
				String(authUser.company),
				"active-pl",
				null,
				dmeFilter.getNbrRecords(),
				null);		
		break;	
		default: break;
	}
}

function performDmeFieldFilter(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{
		case "processlevel":
		filterDmeCall(dmeFilter,
			"jsreturn",
			"prsystem",
			"prsset1",
			"process-level;name",
			String(authUser.company),
			"active-pl",
			dmeFilter.getSelectStr(),
			dmeFilter.getNbrRecords(),
			null);			
		break;						
		default: break;
	}
}

function dmeFieldRecordSelected(recIndex, fieldNm)
{
	var selRec = self.jsreturn.record[recIndex];
	var formElm;
	switch (fieldNm.toLowerCase())
	{
		case "processlevel":
			formElm = self.searchFrame.document.getElementById("Proc"); 
			formElm.value = selRec.process_level;
			self.searchFrame.document.getElementById("ProcDesc").innerHTML = selRec.name;
			break;						
		default: break;
	}
	try { filterWin.close(); } catch(e) {}
	try { formElm.focus(); } catch(e) {}
}

function getDmeFieldElement(fieldNm)
{
	var fld = [null, null, null];
	try
	{
		switch (fieldNm.toLowerCase())
		{	
			case "processlevel":
				fld = [self.searchFrame, self.searchFrame.document.getElementById("Proc"), getSeaPhrase("PROCESS_LEVEL_CODE","ESS")];
				break;										
			default: break;
		}
	}
	catch(e) {}
	return fld;
}

function dmeFieldKeyUpHandler(fieldNm)
{
	var formElm;
	switch (fieldNm.toLowerCase())
	{
		case "processlevel":
			formElm = self.searchFrame.document.getElementById("Proc"); 
			formElm.value = "";
			self.searchFrame.document.getElementById("ProcDesc").innerHTML = "";
			break;						
		default: break;
	}	
}

function drawDmeFieldFilterContent(dmeFilter)
{
	var selectHtml = new Array();
	var dmeRecs = self.jsreturn.record;
	var nbrDmeRecs = dmeRecs.length;
	var fieldNm = dmeFilter.getFieldNm().toLowerCase();
	var fldObj = getDmeFieldElement(fieldNm);
	var fldDesc = fldObj[2];	
	switch (fieldNm)
	{
		case "processlevel":
			var tmpObj;
			selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list" summary="'+getSeaPhrase("TSUM_11","SEA",[fldDesc])+'">'
			selectHtml[0] += '<caption class="offscreen">'+getSeaPhrase("TCAP_8","SEA",[fldDesc])+'</caption>'
			selectHtml[0] += '<tr><th scope="col" style="width:50%">'+getSeaPhrase("PROCESS_LEVEL_CODE","ESS")+'</th>'
			selectHtml[0] += '<th scope="col" style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'
			for (var i=0; i<nbrDmeRecs; i++) 
			{
				tmpObj = dmeRecs[i];		
				selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false" class="filterTableRow">'
				selectHtml[i+1] += '<td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
				selectHtml[i+1] += (tmpObj.process_level) ? tmpObj.process_level : '&nbsp;'
				selectHtml[i+1] += '</a></td><td style="padding-left:5px" nowrap><a href="javascript:;" onclick="dmeFieldRecordSelected(event,'+i+',\''+fieldNm+'\');return false">'
				selectHtml[i+1] += (tmpObj.name) ? tmpObj.name : '&nbsp;'
				selectHtml[i+1] += '</a></td></tr>'
			}
			if (nbrDmeRecs == 0) 
			{
				selectHtml[1] = '<tr class="filterTableRow">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'+getSeaPhrase("NORECS","ESS")+'</td></tr>'
			}
			selectHtml[selectHtml.length] = '</table>'
		break;				
	}	
	dmeFilter.getRecordElement().innerHTML = selectHtml.join("");	
}
/* Filter Select logic - end */

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var searchFrame = document.getElementById("searchFrame");
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentHeightBorder;
	var contentHeight;	
	var contentWidthBorder;
	var contentWidth;
	if (window.styler && window.styler.showInfor)
	{	
		contentWidth = winWidth - 10;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 5 : contentWidth + 2;				
		contentHeight = winHeight - 65;
		contentHeightBorder = contentHeight + 30;	
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentWidth = winWidth - 20;
		contentWidthBorder = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;		
		contentHeight = winHeight - 75;	
		contentHeightBorder = contentHeight + 30;		
	}
	else
	{
		contentWidth = winWidth - 10;
		contentWidthBorder = contentWidth;		
		contentHeight = winHeight - 60;
		contentHeightBorder = contentHeight + 24;		
	}
	searchFrame.style.width = winWidth + "px";
	searchFrame.style.height = winHeight + "px";
	try
	{
		if (self.searchFrame.onresize && self.searchFrame.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.searchFrame.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.searchFrame.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.searchFrame.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.searchFrame.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.searchFrame.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.searchFrame.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.searchFrame.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e) {}	
}
var timer = setTimeout("OpenPhoneBook()",3000)
</script>
</head>
<body style="overflow:hidden" onload="OpenPhoneBook()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="searchFrame" name="searchFrame" title="Main Content" level="2" tabindex="0" style="visibility:hidden;position:absolute;top:32px;left:0px;width:803px;height:464px" marginwidth="0" marginheight="0" frameborder="no" scrolling="no" src="/lawson/xhrnet/ui/headerpane.htm"></iframe>
	<iframe name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/phonebook.htm,v 1.12.2.56 2014/02/25 22:49:13 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
