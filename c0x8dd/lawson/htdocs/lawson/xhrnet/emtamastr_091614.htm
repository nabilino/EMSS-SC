<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<meta http-equiv="Pragma" content="No-Cache">
<title>Leave Balances</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var loadTimer;
var EmployeeName;
var leaveBalances = new Array();
var authUser;
var Employee;
var sortProperty;
var sortDirection = "<";
var sortByNumber = false;

function CallBack()
{
	authUser = null;
	try
	{
		if (opener && typeof(opener.authUser) != "undefined" && opener.authUser != null)
			authUser = opener.authUser;	
	}
	catch(e)
	{
		authUser = null;
	}
	if (authUser)
	{
		stylePage();
		setLayerSizes();		
		authUser = opener.authUser;
		var title = getSeaPhrase("LEAVE_BALANCES","ESS");
		setWinTitle(title);		
		setTaskHeader("header",title,"TimeEntry");
		var nextFunc;
		try
		{
			if (typeof(opener.Employee) != "undefined")
			{
				EmployeeName = opener.Employee.EmployeeName;
				Employee = opener.Employee.EmployeeNbr;
				nextFunc = GetEmtamastr;
			}
			else
			{
				Employee = authUser.employee;
				nextFunc = InitPage;
			}
		}
		catch(e)
		{
			Employee = authUser.employee;
			nextFunc = InitPage;
		}
		showWaitAlert(getSeaPhrase("WAIT","ESS"), nextFunc);
	}
	else
		authenticate("frameNm='jsreturn'|funcNm='InitPage(true)'|desiredEdit='EM'");
}

function InitPage(setHeader)
{
	stylePage();
	setLayerSizes();
	var title = getSeaPhrase("LEAVE_BALANCES","ESS");
	setWinTitle(title);
	if (setHeader)
		setTaskHeader("header",title,"TimeEntry");
	StoreDateRoutines();	
	showWaitAlert(getSeaPhrase("WAIT","ESS"), GetEmployee);
}

function GetEmployee()
{
	var obj = new DMEObject(authUser.prodline, "employee")
	obj.out = "JAVASCRIPT";
	obj.field = "first-name;last-name;middle-name;label-name-1";
	obj.key = parseFloat(authUser.company) +"="+ parseFloat(authUser.employee);
	obj.max = "1";
	DME(obj,"jsreturn");
}

function DspEmployee()
{
	EmployeeName = self.jsreturn.record[0].label_name_1;
	Employee = authUser.employee;
	GetEmtamastr();
}

function GetEmtamastr()
{
	leaveBalances = new Array();
	var obj = new DMEObject(authUser.prodline, "emtamastr");
	obj.out = "JAVASCRIPT";
	obj.index = "etmset1";
	obj.field = "plan.description;elig-balance;pl-end-date;run-date";
	obj.key = authUser.company+"="+Employee;
	obj.debug = false;
	obj.max	= "600";
  	DME(obj,"jsreturn");
}

function DspEmtamastr()
{
	leaveBalances = leaveBalances.concat(self.jsreturn.record);
	if (self.jsreturn.Next != "")
		self.jsreturn.location.replace(self.jsreturn.Next);
	else
		MakeForm();
}

function MakeForm(onsort, property)
{
	var toolTip = getSeaPhrase("SORT_PLAN_NAME","ESS");
	var leaveBalancesHtml = '<table id="balanceTbl" class="plaintableborder" cellspacing="0" cellpadding="0" width="100%" styler="list" summary="'+getSeaPhrase("LEAVE_BALANCES_SUMMARY","ESS")+'">'
	+ '<caption class="offscreen">'+getSeaPhrase("LEAVE_BALANCES","ESS")+'</caption>'
	+ '<tr><th scope="col" class="plaintableheaderborder" style="width:38%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortEmtamastr(\'plan_description\');return false" title="'+toolTip+'">'+getSeaPhrase("PLAN_NAME","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_RUN_DATE","ESS");
	leaveBalancesHtml += '<th scope="col" class="plaintableheaderborder" style="width:17%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortEmtamastr(\'run_date\');return false" title="'+toolTip+'">'+getSeaPhrase("AS_OF_DATE","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_AVAILABLE_HOURS","ESS");
	leaveBalancesHtml += '<th scope="col" class="plaintableheaderborder" style="width:23%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortEmtamastr(\'elig_balance\');return false" title="'+toolTip+'">'+getSeaPhrase("AVAILABLE_HOURS","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_AVAILABLE_DAYS","ESS");
	leaveBalancesHtml += '<th scope="col" class="plaintableheaderborder" style="width:22%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:;" onclick="parent.SortEmtamastr(\'avail_days\');return false" title="'+toolTip+'">'+getSeaPhrase("AVAILABLE_DAYS","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th></tr>';
	var tableHtml = '';
	for (var i=0; i<leaveBalances.length; i++)
	{
		var sysdate	= parseFloat(ymdtoday);
		var enddate = parseFloat(formjsDate(formatDME(leaveBalances[i].pl_end_date)));
		if (enddate > sysdate || isNaN(enddate))
		{
			leaveBalances[i].elig_balance = EvaluateBCD(leaveBalances[i].elig_balance);
			leaveBalances[i].avail_days = leaveBalances[i].elig_balance/8;
			tableHtml += '<tr><td class="plaintablecellborder">'+leaveBalances[i].plan_description+'</td>'
			+ '<td class="plaintablecellborder" style="text-align:center">'+((leaveBalances[i].run_date)?leaveBalances[i].run_date:'&nbsp;')+'</td>'
			+ '<td class="plaintablecellborder" style="text-align:center">'+((NonSpace(roundToDecimal(leaveBalances[i].elig_balance,2))>0)?roundToDecimal(leaveBalances[i].elig_balance,2):'&nbsp;')+'</td>'
			+ '<td class="plaintablecellborder" style="text-align:center">'+((NonSpace(roundToDecimal(leaveBalances[i].avail_days,2))>0)?roundToDecimal(leaveBalances[i].avail_days,2):'&nbsp;')+'</td></tr>'
		}
	}
	leaveBalancesHtml += tableHtml + '</table>';
	if (opener)
	{
		leaveBalancesHtml += '<form><table cellspacing="0" cellpadding="0" width="100%" role="presentation"><tr><td class="plaintablecell">'
		+ uiButton(getSeaPhrase("QUIT","ESS"),"parent.DoneClicked();return false")
		+ '</td></tr></table></form>'
	}
	try 
	{
		self.MAIN.document.getElementById("paneHeader").innerHTML = getSeaPhrase("BALANCES","ESS");
		if (leaveBalances.length > 0)
			self.MAIN.document.getElementById("paneBody").innerHTML = leaveBalancesHtml;
		else
			self.MAIN.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelboldleft" style="padding-top:5px;padding-left:5px">'+getSeaPhrase("NO_LEAVE_BALANCE","ESS")+'</div>';
	}
	catch(e) {}
	if (!onsort) 
	{
		self.MAIN.stylePage();
		self.MAIN.setLayerSizes();
		document.getElementById("MAIN").style.visibility = "visible";
	} 
	else
	{
		self.MAIN.stylePage();
		self.MAIN.styleSortArrow("balanceTbl", property, (sortDirection == "<") ? "ascending" : "descending");
	}
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.MAIN.getWinTitle()]));
	fitToScreen();
}

function DoneClicked()
{
	if (opener)
		self.close();
}

function sortByProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortProperty == "run_date")
	{
		name1 = formjsDate(formatDME(name1));
		name2 = formjsDate(formatDME(name2));
	}
	if (sortByNumber)
	{
		name1 = Number(name1);
		name2 = Number(name2);
	}
	if (sortDirection == "<") // ascending sort
	{
		if (name1 < name2)
			return -1;
		else if (name1 > name2)
			return 1;
		else
			return 0;
	}
	else // descending sort
	{
		if (name1 > name2)
			return -1;
		else if (name1 < name2)
			return 1;
		else
			return 0;
	}
}

function SortEmtamastr(property)
{
	var nextFunc = function()
	{
	   	sortByNumber = (property == "elig_balance" || property == "avail_days") ? true : false;
		if (sortProperty != property)
			sortDirection = "<";
		else
			sortDirection = (sortDirection == "<") ? ">" : "<";	
	   	sortProperty = property;
		leaveBalances.sort(sortByProperty);
		MakeForm(true, property);
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var mainFrame = document.getElementById("MAIN");
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentLeftWidth;
	var contentLeftWidthBorder;
	var contentRightWidth;
	var contentRightWidthBorder;
	var contentHeightBorder;
	var contentHeight;	
	var contentWidthBorder;
	var contentWidth;
	if (window.styler && window.styler.showInfor)
	{	
		contentWidth = winWidth - 10;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 5 : contentWidth + 2;				
		contentHeight = winHeight - 65;
		contentHeightBorder = contentHeight + 30;	
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentWidth = winWidth - 20;
		contentWidthBorder = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;		
		contentHeight = winHeight - 75;	
		contentHeightBorder = contentHeight + 30;		
	}
	else
	{
		contentWidth = winWidth - 10;
		contentWidthBorder = contentWidth;		
		contentHeight = winHeight - 60;
		contentHeightBorder = contentHeight + 24;		
	}
	mainFrame.style.width = winWidth + "px";
	mainFrame.style.height = winHeight + "px";
	try
	{
		if (self.MAIN.onresize && self.MAIN.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.MAIN.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.MAIN.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.MAIN.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e) {}	
}
</script>
</head>
<body style="overflow:hidden" onload="CallBack()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="MAIN" name="MAIN" title="Main Content" level="2" tabindex="0" style="visibility:hidden;position:absolute;height:464px;width:575px;left:0px;top:32px" src="/lawson/xhrnet/ui/headerpane.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/emtamastr.htm,v 1.22.2.51 2014/02/17 16:30:21 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
