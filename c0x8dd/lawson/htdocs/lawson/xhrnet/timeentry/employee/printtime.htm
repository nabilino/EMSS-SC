<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<title>Print Time Entry</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/xhrnet/timeentry/lib/timeentrylib.js"></script>
<script src="/lawson/xhrnet/timeentry/Skins/Ocean/Template.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/StringBuffer.js"></script>
<script language="JavaScript">
var entry;
var HS36;
var printFlag = false;
var FrameNm, WindowNm
var ExceptionFlag = false;

function CallBack()
{
	// Exit if lawheader is not defined
	if (typeof(self.lawheader.gmsgnbr) == "undefined")
		return;
	authenticate("frameNm='jsreturn'|funcNm='InitPrintTime()'|desiredEdit='EM'");
}

///////////////////////////////////////////////////////////////////////////////////////////
//
// Open and draw the date selection window
//
function InitPrintTime()
{
	stylePage();
	var title = getSeaPhrase("PRINT_TE_CARD","TE");
	setWinTitle(title);
	setTaskHeader("header", title, "TimeEntry");
	startProcessing(getSeaPhrase("LOADING_TE","TE"), writeTimeRange);
}

function writeTimeRange()
{
	var toolTip;
	var html = '<form name="day" onsubmit="return false;">'
	html += '<p class="plaintablecell">'+getSeaPhrase("ENTER_DATES_FOR_PRINT_CARD","TE")+'</p>'
	html += '<table border="0" cellspacing="0" cellpadding="0" role="presentation">'
	html += '<tr><td class="fieldlabelbold">'+uiRequiredFooter()+'</td><td>&nbsp;</td></tr>'
	toolTip = uiDateToolTip(getSeaPhrase("START_DATE","TE"));
	html += '<tr><td class="fieldlabelbold"><label id="startdateLbl" for="startdate">'+getSeaPhrase("START_DATE","TE")+'</label></td>'
	html += '<td class="plaintablecell"><input class="inputbox" type="text" id="startdate" name="startdate" value="" size="10" maxlength="10" aria-labelledby="startdateLbl startdateFmt">'
	html += '<a href="javascript:;" onclick="parent.DateSelect(\'startdate\');return false;" title="'+toolTip+'" aria-label="'+toolTip+'">'+uiCalendarIcon()+'</a>'+uiDateFormatSpan("startdateFmt")+uiRequiredIcon()+'</td></tr>'
	toolTip = uiDateToolTip(getSeaPhrase("END_DATE","TE"));
	html += '<tr><td class="fieldlabelbold"><label id="lastdateLbl" for="lastdate">'+getSeaPhrase("END_DATE","TE")+'</label></td>'
	html += '<td class="plaintablecell"><input class="inputbox" type="text" id="lastdate" name="lastdate" value="" size="10" maxlength="10" aria-labelledby="lastdateLbl lastdateFmt">'
	html += '<a href="javascript:;" onclick="parent.DateSelect(\'lastdate\');return false;" title="'+toolTip+'" aria-label="'+toolTip+'">'+uiCalendarIcon()+'</a>'+uiDateFormatSpan("lastdateFmt")+uiRequiredIcon()+'</td></tr>'
	html += '<tr><td class="fieldlabelbold">&nbsp;</td>'
	html += '<td class="plaintablecell" style="padding-top:5px">'+uiButton(getSeaPhrase("CONTINUE","TE"),"parent.ProcessDates();return false")+'</center>'
	html += '</td></tr></table></form>'
	self.INPUTDATES.document.getElementById("paneHeader").innerHTML = getSeaPhrase("ENTER_DATES","TE");
	self.INPUTDATES.document.getElementById("paneBody").innerHTML = html;
	self.INPUTDATES.stylePage();
	self.INPUTDATES.setLayerSizes();
	document.getElementById("INPUTDATES").style.visibility = "visible";
	stopProcessing(getSeaPhrase("CNT_UPD_FRM","SEA",[getWinTitle(self.INPUTDATES)]));
	fitToScreen();
}

function ReturnDate(date)
{
   	self.INPUTDATES.document.forms["day"].elements[date_fld_name].value = date;
}

///////////////////////////////////////////////////////////////////////////////////////////
//
// Process the information given and verify that there are no errors. If none then send the
// call to HS36 and process.
//
function ProcessDates()
{
	var obj = self.INPUTDATES.document.day;
	clearRequiredField(obj.startdate);
	clearRequiredField(obj.lastdate);
	var dteParams = dateIsValid(obj.startdate.value, defaultDateSep);
	var dte = dteParams[0];
	var errMsg = dteParams[1];
	if (NonSpace(obj.startdate.value) == 0) 
	{
		setRequiredField(obj.startdate, getSeaPhrase("START_DATE_REQ","TE"));
		return;
	}	
	else if (!dte)
	{
		setRequiredField(obj.startdate, getSeaPhrase("INVALID_START_DATE","TE"));
		return;
	}
	else
		obj.startdate.value = dte;
	dteParams = dateIsValid(obj.lastdate.value, defaultDateSep);
	dte = dteParams[0];
	errMsg = dteParams[1];
	if (NonSpace(obj.lastdate.value) == 0) 
	{
		setRequiredField(obj.lastdate, getSeaPhrase("END_DATE_REQ","TE"));
		return;
	}	
	else if (!dte) 
	{
		setRequiredField(obj.lastdate, getSeaPhrase("INVALID_END_DATE","TE"));
		return;
	}
	else
		obj.lastdate.value = dte;
	if (getDteDifference(formjsDate(formatDME(obj.startdate.value)),formjsDate(formatDME(obj.lastdate.value)))<0)
		setRequiredField(obj.startdate, getSeaPhrase("START_MUST_BEFORE_END","TE"));
	else
	{
		var nextFunc = function()
		{
			StartPrintTime(formjsDate(formatDME(obj.startdate.value)),formjsDate(formatDME(obj.lastdate.value)));
		}
		startProcessing(getSeaPhrase("RETRIEVE_REC_IN_PERIOD","TE"), nextFunc);
		document.getElementById("INPUTDATES").style.visibility = "hidden";
	}
}

function StartPrintTime(StartDate, EndDate)
{
	HS36 = new HS36Object(StartDate, EndDate, authUser.employee, false)
	HS36.printtime();
}

///////////////////////////////////////////////////////////////////////////////////////////
//
// Print the buttons and then call the common function in timeentryclass to paint the
// information returned in HS36.
//
function PrintScreen()
{
	if (!TimeCard.Records.length)
	{
		stopProcessing();
		var closeFunc = function()
		{
			writeTimeRange();		
		}
		var alertResponse = seaAlert(getSeaPhrase("NO_REC_DISP","TE"), "", null, "error", closeFunc);
		if (typeof(alertResponse) == "undefined" || alertResponse == null)
		{	
			if (seaAlert == window.alert)
				closeFunc();
			return;
		}
		closeFunc();
	}
	else
	{
		var html = '<table style="text-align:center;width:100%;height:100%" role="presentation"><tr><td>'
		html += uiButton(getSeaPhrase("PRINT","TE"),"parent.OnPrintClicked_PrintTime();return false")
		try
		{
			if (opener)
				html += uiButton(getSeaPhrase("QUIT","TE"),"parent.close();return false","margin-left:5px")
		}
		catch(e) {}
		html += '</td></tr></table>'
		PrintTimeCard("TABLE", "self");
		document.getElementById("TABLE").style.visibility = "visible";
		stopProcessing(getSeaPhrase("CNT_UPD_FRM","SEA",[getWinTitle(self.TABLE)]));
	}
}

///////////////////////////////////////////////////////////////////////////////////////////
//
// Return function for the calendar
//
function ReturnCalendarDate(dte, TextField)
{
	self.INPUTDATES.document.forms["day"].elements[TextField].value = FormatDte4(dte);
}

///////////////////////////////////////////////////////////////////////////////////////////
//
// Event handler if the user clicks the print button
//
function OnPrintClicked_PrintTime()
{
	printFlag = true;
	startProcessing(getSeaPhrase("PROCESSING_WAIT","ESS"), function(){PrintTimeCard_Finished(FrameNm,WindowNm);});
}

///////////////////////////////////////////////////////////////////////////////////////////
//
// function called when the standard print function in timeentryclass is finished. We can use
// this function as well if the user presses the print button. However since we have already
// called the print routine for HS36 we have the information except we have not set the focus
// or called the print routine which is done in the timeentryclass routine. So we must do that
// here in a conditional statement.
//
function PrintTimeCard_Finished(FrameName, WindowName)
{
	FrameNm = FrameName;
	WindowNm = WindowName;
	var frameWnd = window[WindowNm][FrameNm];
	if (printFlag)
	{
		stopProcessing();
		frameWnd.focus();
		frameWnd.print();
	}
	else
		stopProcessing(getSeaPhrase("CNT_UPD_FRM","SEA",[getWinTitle(frameWnd)]));
	printFlag = false;
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var tableHeight = 500;
	var tableWidth = 800;
	var titleBarHeight = (styler && styler.showInfor3) ? 40 : 32;
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	// resize the table frame to the screen dimensions
	// position the button frame immediately below the table frame
	tableWidth = winWidth;
	tableHeight = winHeight - titleBarHeight;
	var datesFrame = document.getElementById("INPUTDATES");
	var tblFrame = document.getElementById("TABLE");
	try
	{
		if (self.INPUTDATES.onresize && self.INPUTDATES.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.INPUTDATES.onresize = null;		
	}
	catch(e) {}
	tblFrame.style.top = titleBarHeight + "px";
	tblFrame.style.height = tableHeight + "px";
	tblFrame.style.width = tableWidth + "px";	
	self.TABLE.document.body.style.overflow = "auto";
	try
	{
		if (self.TABLE.onresize && self.TABLE.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.TABLE.onresize = null;
	}
	catch(e) {}
	datesFrame.style.top = titleBarHeight + "px";
	datesFrame.style.height = tableHeight + "px";
	datesFrame.style.width = tableWidth + "px";
	if (navigator.appName.indexOf("Microsoft") >= 0 && (tableWidth > 25))
	{
		var paneBody1 = self.TABLE.document.getElementById("paneBody1");
		paneBody1.style.width = (tableWidth - 25) + "px";
	}
	if (window.styler && window.styler.textDir == "rtl")
	{
		datesFrame.style.left = "";
		datesFrame.style.right = "0px";
	}
	else
		datesFrame.style.left = "0px";
}
</script>
</head>
<body style="overflow:hidden" onload="CallBack()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="INPUTDATES" name="INPUTDATES" title="Content" level="2" tabindex="0" style="visibility:hidden;position:absolute;height:350px;width:350px;left:0px;top:32px;z-index:2" src="/lawson/xhrnet/ui/headerpane.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="TABLE" name="TABLE" title="Main Content" level="2" tabindex="0" style="visibility:hidden;position:absolute;height:575px;width:803px;left:0px;top:32px" src="/lawson/xhrnet/ui/plain.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="auto"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/timeentry/employee/timeentrylaw.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/timeentry/employee/printtime.htm,v 1.12.2.55 2014/02/19 23:04:11 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
