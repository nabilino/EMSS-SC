<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<meta http-equiv="Pragma" content="No-Cache">
<title>Employee Dates</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var directReports = new Array();
var sortProperty;
var sortDirection = "<";
var sortByNumber = false;

function InitEmployeeDates()
{
	stylePage();
	var title = getSeaPhrase("EMPLOYEE_DATES","ESS");
	setWinTitle(title);
	setTaskHeader("header",title,"Manager");
	StoreDateRoutines();	
	showWaitAlert(getSeaPhrase("WAIT","ESS"), GetDirectReports);
}

function GetDirectReports()
{
	var agsObj = new AGSObject(authUser.prodline, "HS10.1");
   	agsObj.event = "ADD";
    agsObj.rtn = "DATA";
	agsObj.longNames = "ALL";
	agsObj.tds = false;
   	agsObj.field = "FC=I"
	+ "&HSU-COMPANY=" + escape(parseInt(authUser.company,10))
	+ "&HSU-EMPLOYEE=" + escape(parseInt(authUser.employee,10))
	if (self.lawheader.pg)
  	{
  	  	agsObj.field += "&PT-FC=" + escape(self.lawheader.PT_FC)
  	  	+ "&PT-PTF-EMPLOYEE=" + escape(parseInt(self.lawheader.PT_PTF_EMPLOYEE,10))
	  	if (NonSpace(self.lawheader.PT_HSU_CODE))
			agsObj.field += "&PT-HSU-CODE=" + escape(self.lawheader.PT_HSU_CODE)
	  	if (NonSpace(self.lawheader.PT_HSU_OP_CODE))
			agsObj.field += "&PT-HSU-OP-CODE=" + escape(self.lawheader.PT_HSU_OP_CODE)
  	}
	agsObj.func = "parent.DateInquiry()";
  	AGS(agsObj, "jsreturn");
}

function DateInquiry()
{
 	directReports = directReports.concat(self.lawheader.e); // Save off this page of reports.
	// Get more reports, if they exist.  This ensures that we will have all reports before we display.
   	if (self.lawheader.pg)
   		GetDirectReports();
   	else
   	{
   		if (!directReports.length)
   		{
   			removeWaitAlert();
      		seaAlert(getSeaPhrase("NO_DIRECT_REPORTS","ESS"), null, null, "error");
   	  		return;
   		}
   		FmtBirthDates(directReports);
   		DrawDateTable();
	}
}

function GetDateTable()
{
	var date = "";
	var date_diff = 0;
	var months_served = 0;
    var years_served = 0;
    var length_served = 0;
    var toolTip = getSeaPhrase("SORT_BY_LASTNAME","ESS");
	var empDatesTblHtml = '<table id="datesTbl" class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list" summary="'+getSeaPhrase("TSUM_36","SEA")+'">'
    + '<caption class="offscreen">'+getSeaPhrase("EMPLOYEE_DATES","ESS")+'</caption>'
	+ '<tr><th scope="col" class="plaintableheaderborder" style="text-align:center;width:42%" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn"><a class="columnsort" href="javascript:;" onclick="parent.SortArray(\'last_name\');return false" title="'+toolTip+'">'+getSeaPhrase("EMPLOYEE_NAME","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_BY_BIRTHDAY","ESS");
	empDatesTblHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center;width:10%" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn"><a class="columnsort" href="javascript:;" onclick="parent.SortArray(\'short_birthdate\');return false" title="'+toolTip+'">'+getSeaPhrase("DEP_20","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_BY_HIREDATE","ESS");
	empDatesTblHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center;width:12%" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn"><a class="columnsort" href="javascript:;" onclick="parent.SortArray(\'date_hired\');return false" title="'+toolTip+'">'+getSeaPhrase("JOB_PROFILE_14","ESS")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_BY_SERVICE_DATE","SEA");
	empDatesTblHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center;width:12%" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn"><a class="columnsort" href="javascript:;" onclick="parent.SortArray(\'service_date\');return false" title="'+toolTip+'">'+getSeaPhrase("SERVICE_DATE","SEA")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th>'
	toolTip = getSeaPhrase("SORT_BY_SERVICE","ESS");
	empDatesTblHtml += '<th scope="col" class="plaintableheaderborder" style="text-align:center;width:24%" colspan="2" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn"><a class="columnsort" href="javascript:;" onclick="parent.SortArray(\'length_served\',true);return false" title="'+toolTip+'">'+getSeaPhrase("LENGTH_OF_SERVICE","ESS")
	+ '<br/>&nbsp;('+getSeaPhrase("YEARS","ESS")+'/'+getSeaPhrase("MONTHS","ESS")+')<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></a></th></tr>'
   	for (var i=0; i<directReports.length; i++)
    {
    	directReports[i].service_date = ((directReports[i].service_date != "") ? directReports[i].service_date : directReports[i].adj_hire_date);
    	if (directReports[i].service_date > ymdtoday)
    	{
    		years_served = "";
    		months_served = "";
    	}
    	else
    	{
	   		var yyyy1 = parseInt(directReports[i].service_date.substring(0,4),10);
	   		var mm1 = parseInt(directReports[i].service_date.substring(4,6),10);
	   		var dd1 = parseInt(directReports[i].service_date.substring(6, 8),10);
	   		var yyyy2 = parseInt(ymdtoday.substring(0,4),10);
	   		var mm2 = parseInt(ymdtoday.substring(4,6),10);
	   		var dd2 = parseInt(ymdtoday.substring(6, 8),10);

    		var mths1 = (yyyy1 * 12) + mm1; // total number of full months in first date
    		var mths2 = (yyyy2 * 12) + mm2; // total number of full months in second date
    		var total_mths = mths2 - mths1; // total number of full months between the two dates

			// if the second date falls earlier in its month than the first date, we counted a partial month so we need to subtract it out of the total.
    		if (dd2 < dd1)
    			total_mths--;
    		years_served = parseInt(total_mths / 12, 10);
    		months_served = total_mths - (years_served * 12);
		}
	   	if (isNaN(years_served)) years_served = 0;
	   	if (isNaN(months_served)) months_served = 0;
	   	directReports[i].years_served = years_served;
	   	directReports[i].months_served = months_served;
	   	directReports[i].length_served = total_mths;
	   	empDatesTblHtml += '<tr><td class="plaintablecellborder" style="width:48%" nowrap>'
	   	+ directReports[i].full_name
	   	+ '</td><td class="plaintablecellborder" style="text-align:center;width:10%" nowrap>'
		if (directReports[i].birthdate)
			empDatesTblHtml += FormatDte4(directReports[i].birthdate).substring(0,5)
	   	else
	   		empDatesTblHtml += '&nbsp;'
	   	empDatesTblHtml += '</td><td class="plaintablecellborder" style="text-align:center;width:12%" nowrap>'
	   	if (directReports[i].date_hired)
		   	empDatesTblHtml += FormatDte4(directReports[i].date_hired)
	   	else
			empDatesTblHtml += '&nbsp;'
	   	empDatesTblHtml += '</td><td class="plaintablecellborder" style="text-align:center;width:12%" nowrap>'
		if (directReports[i].service_date)
		   	empDatesTblHtml += FormatDte4(directReports[i].service_date)
	   	else
			empDatesTblHtml += '&nbsp;'
	   	empDatesTblHtml += '</td><td class="plaintablecellborder" style="text-align:center;width:12%" nowrap>'
	   	if (directReports[i].years_served)
		   	empDatesTblHtml += directReports[i].years_served
	   	else
			empDatesTblHtml += '&nbsp;'
	   	empDatesTblHtml += '</td><td class="plaintablecellborder" style="text-align:center;width:12%" nowrap>'
       	if (directReports[i].months_served)
		   	empDatesTblHtml +=  directReports[i].months_served
		else
			empDatesTblHtml += '&nbsp;'
		empDatesTblHtml += '</td></tr>'
   	}
   	empDatesTblHtml += '</table>'
   	return empDatesTblHtml;
}

function DrawDateTable(onsort, property)
{
	try 
	{
		self.MAIN.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DATES","ESS");
		if (directReports.length == 0)
			self.MAIN.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold">'+getSeaPhrase("NO_DIRECT_REPORTS","ESS")+'</div>';
		else
			self.MAIN.document.getElementById("paneBody").innerHTML = GetDateTable();
	}
	catch(e) {}
	self.MAIN.stylePage();
	if (onsort)
		self.MAIN.styleSortArrow("datesTbl", property, (sortDirection == "<") ? "ascending" : "descending");
	else
	{
		self.MAIN.setLayerSizes(true);
		document.getElementById("MAIN").style.visibility = "visible";
	}
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.MAIN.getWinTitle()]));
	fitToScreen();
}

function sortByProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortByNumber)
	{
		name1 = Number(name1);
		name2 = Number(name2);
	}
	if (sortDirection == "<") // ascending sort
	{
		if (name1 < name2)
			return -1;
		else if (name1 > name2)
			return 1;
		else
			return 0;
	}
	else // descending sort
	{
		if (name1 > name2)
			return -1;
		else if (name1 < name2)
			return 1;
		else
			return 0;
	}
}

function SortArray(property, sortbynumber)
{
	var nextFunc = function()
	{
	   	sortByNumber = (sortbynumber) ? true : false;
		sortProperty = property;
		if (sortProperty != property)
			sortDirection = "<";
		else
			sortDirection = (sortDirection == "<") ? ">" : "<";	
		directReports.sort(sortByProperty);
	   	DrawDateTable(true, property);
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

function FmtBirthDates(reports)
{
	var len = reports.length;
	for (var i=0; i<len; i++)
		reports[i].short_birthdate = reports[i].birthdate.substring(4,8);
}

function OpenHelpDialog()
{
	openHelpDialogWindow("/lawson/xhrnet/dateinquirytips.htm");
}

function callBack()
{
   	authenticate("frameNm='jsreturn'|funcNm='InitEmployeeDates()'|desiredEdit='EM'");
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentWidth;
	var contentBorderWidth;
	var contentHeight;
	var contentBorderHeight;
	if (window.styler && window.styler.showInfor)
	{
		contentWidth = winWidth - 10;
		contentBorderWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 5 : contentWidth + 2;
		contentHeight = winHeight - 60;
		contentBorderHeight = (navigator.appName.indexOf("Microsoft") >= 0) ? contentHeight + 30 : contentHeight + 25;
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentWidth = winWidth - 20;
		contentBorderWidth = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;
		contentHeight = winHeight - 75;
		contentBorderHeight = contentHeight + 30;
	}
	else
	{
		contentWidth = winWidth - 10;
		contentBorderWidth = contentWidth;
		contentHeight = winHeight - 60;
		contentBorderHeight = contentHeight + 24;				
	}	
	if (self.MAIN.onresize && self.MAIN.onresize.toString().indexOf("setLayerSizes") >= 0)
		self.MAIN.onresize = null;
	try
	{
		document.getElementById("MAIN").style.width = winWidth + "px";
		document.getElementById("MAIN").style.height = winHeight + "px";
		self.MAIN.document.getElementById("paneBorder").style.width = contentBorderWidth + "px";
		self.MAIN.document.getElementById("paneBorder").style.height = contentBorderHeight + "px";		
		self.MAIN.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.MAIN.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBody").style.height = contentHeight + "px";
		self.MAIN.document.getElementById("paneBody").style.overflow = "auto";		
	}
	catch(e) {}
}
</script>
</head>
<body style="width:100%;height:100%;overflow:hidden" onload="callBack()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="MAIN" name="MAIN" title="Main Content" level="2" tabindex="0" style="visibility:hidden;position:absolute;left:0%;height:464px;width:700px;top:32px" src="/lawson/xhrnet/ui/headerpanehelp.htm" marginwidth="0" marginheight="0" frameborder="no" scrolling="auto"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" marginwidth="0" marginheight="0" frameborder="no" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/orglawheader.htm" marginwidth="0" marginheight="0" frameborder="no" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/dateinquiry.htm,v 1.14.2.45 2014/02/17 21:29:54 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
