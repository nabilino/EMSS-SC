<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<title>Pay Rate History</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script type="text/javascript" src="/lawson/xhrnet/esscommon80.js"></script>
<script type="text/javascript" src="/lawson/webappjs/user.js"></script>
<script type="text/javascript" src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script type="text/javascript" src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script type="text/javascript" src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
// starting point of this program
function startProgram()
{
	// do authentication
	authenticate("frameNm='jsreturn'|funcNm='initProgram()'|desiredEdit='EM'");
}

function initProgram()
{
	stylePage();
	// set the task title.
	var title = getSeaPhrase("PAY_RATE_HISTORY","ESS");
	setWinTitle(title);
	setTaskHeader("header",title,"Pay");	
	// to initialize fmttoday
	StoreDateRoutines();
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), main);
}

// main function of this program
function main()
{
	// draw the date select for only one time
	drawDateSelect();
}

// draw date select frame
function drawDateSelect()
{
	var htmlStr = uiRequiredFooter();
	htmlStr += '<form onsubmit="parent.validateChange(1);return false;">';
	htmlStr += '<table style="padding-left:5px" border="0" cellspacing="0" cellpadding="0" role="presentation">';
	htmlStr += '<tr><td class="fieldlabelboldleft"><label id="ThroughDateLbl" for="ThroughDate">'+getSeaPhrase("SELECT_THROUGH_DATE","ESS")+'</label><br/>';
	htmlStr += '<span class="plaintablecell"><input class="inputbox" id="ThroughDate" name="ThroughDate" type="text" value="'+fmttoday+'" size="12" maxlength="10" onchange="parent.validateChange(3)" aria-labelledby="ThroughDateLbl ThroughDateFmt">';
	htmlStr += '<a href="javascript:parent.DateSelect(\'ThroughDate\');" title="'+getSeaPhrase("SELECT_THROUGH_DATE","ESS")+'" aria-label="'+getSeaPhrase("SELECT_THROUGH_DATE","ESS")+'">';
    htmlStr += uiCalendarIcon()+'</a>'+uiRequiredIcon()+'</span><br/>'+uiDateFormatSpan("ThroughDateFmt")+'</td><td class="plaintablecellright">';
	htmlStr += uiButton(getSeaPhrase("CONTINUE","ESS"),"parent.validateChange(2);return false","margin-left:15px");
	htmlStr += '</td></tr></table></form>';
	htmlStr += '<div id="payHistDtl" style="margin-top:5px;width:100%;height:auto;padding-bottom:5px">&nbsp;</div>';
	try 
	{
		self.DateSelectFrm.document.getElementById("paneHeader").innerHTML = getSeaPhrase("HISTORY","ESS");
		self.DateSelectFrm.document.getElementById("paneBody").innerHTML = htmlStr;
	}
	catch(e) {}
	self.DateSelectFrm.stylePage();
	self.DateSelectFrm.setLayerSizes();
	document.getElementById("DateSelectFrm").style.visibility = "visible";
	removeWaitAlert();
	fitToScreen();
}

// validate through date if changed
function validateChange(source)
{
	var inputObj = window.DateSelectFrm.document.forms[0].elements["ThroughDate"];
	clearRequiredField(inputObj);
	if (NonSpace(inputObj.value) == 0) 
	{
		// date is empty
		setRequiredField(inputObj, getSeaPhrase("MUST_ENTER_DATE","ESS"));
		return;
	} 
	else if (!ValidateDate(inputObj)) 
	{
		// date is invalid
		return;
	} 
	else 
	{
		// format the date if valid
		var dteParams = dateIsValid(inputObj.value);
		var dte = dteParams[0];
		var errMsg = dteParams[1];
		if (dte)	
			inputObj.value = dte;
		else if (errMsg)
		{
			setRequiredField(inputObj, getSeaPhrase("CAL_1","ESS"));
			return;
		}	
	}
	if (source != 3) 
	{
		// redraw pay rate history upon a valid though date
		showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), function(){drawHistory(inputObj.value);});
	}
}

// set the selected date in calendar window to date input object
function ReturnDate(throughDate)
{
	try { window.DateSelectFrm.document.forms[0].elements["ThroughDate"].value = throughDate; } catch(e) {}
}

// remove any old history records in the frame if the user changes a key value
function clearHistoryTableInFrame()
{
	try { self.DateSelectFrm.document.getElementById("payHistDtl").innerHTML = '&nbsp;'; } catch(e) {}
}

// draw pay rate history frame given a through date
function drawHistory(throughDate)
{
	// first we need to get corresponding history data
	getHistoryTableData(throughDate);
}

// draw history table in frame
function drawHistoryTableInFrame(throughDate)
{
	var htmlStr = '';
	if (historyArray.length == 0) 
	{
		// no pay rate history with this through date
		htmlStr += '<div class="fieldlabelboldleft" style="padding-left:5px">'+getSeaPhrase("NO_PAY_RATE_HISTORY_FOR_THIS_DATE","ESS")+'</div>';
	} 
	else 
	{
		// got some data
		htmlStr += '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list" summary="'+getSeaPhrase("TSUM_61","SEA",[throughDate])+'">'
		htmlStr += '<caption class="offscreen">'+getSeaPhrase("TCAP_39","SEA",[throughDate])+'</caption>'
		htmlStr += '<tr><th scope="col" class="plaintableheaderborder" style="width:20%;text-align:center">'+getSeaPhrase("EFFECTIVE","ESS")+'</th>';
		htmlStr += '<th scope="col" class="plaintableheaderborder" style="width:20%;text-align:center">'+getSeaPhrase("PAY_RATE_2","ESS")+'</th>';
		htmlStr += '<th scope="col" class="plaintableheaderborder" style="width:20%;text-align:center">'+getSeaPhrase("ANNUAL_SALARY","ESS")+'</th>';
		htmlStr += '<th scope="col" class="plaintableheaderborder" style="width:20%;text-align:center">'+getSeaPhrase("PERCENT_CHANGE","ESS")+'</th>';
		htmlStr += '<th scope="col" class="plaintableheaderborder" style="width:20%;text-align:center">'+getSeaPhrase("QUAL_16","ESS")+'</th></tr>';
		for (var i=0; i<historyArray.length; i++) 
		{
			htmlStr += '<tr><td class="plaintablecellborder" style="text-align:center" nowrap>'+FormatDte4(historyArray[i].effective)+'</td>';
			htmlStr += '<td class="plaintablecellborderright" nowrap>'
			if (historyArray[i].rate == null || historyArray[i].rate == 0 || historyArray[i].rate == "undefined")
				 htmlStr += '0.00</td>';
			else
				htmlStr += roundToDecimal(deleteLeadingZeros(historyArray[i].rate),2)+'</td>';
			htmlStr += '<td class="plaintablecellborderright" nowrap>'
			if (historyArray[i].annualSalary == 0)
				htmlStr += '0.00</td>';
			else
				htmlStr += roundToDecimal(deleteLeadingZeros(historyArray[i].annualSalary),2)+'</td>';
			htmlStr += '<td class="plaintablecellborderright" nowrap>'
			if (historyArray[i].percentChange == null || historyArray[i].percentChange == 0 || historyArray[i].percentChange == "undefined")
				 htmlStr += '0.00</td>';
			else
				htmlStr += historyArray[i].percentChange+'</td>';
			htmlStr += '<td class="plaintablecellborder" style="padding-left:35px" nowrap>'
			if (historyArray[i].currency == null || historyArray[i].currency == "undefined")
				htmlStr += '&nbsp;</td>';
			else
				htmlStr += historyArray[i].currency+'</td>';
			htmlStr += '</tr>';
		}
		htmlStr += '</table>';
	}
	try
	{
		self.DateSelectFrm.document.getElementById("payHistDtl").innerHTML = htmlStr;
	}
	catch(e) {}
	self.DateSelectFrm.stylePage();
	self.DateSelectFrm.setLayerSizes();
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.DateSelectFrm.getWinTitle()]));
	fitToScreen();
}

// storage of pay rate history
var historyArray = new Array();

// get pay rate history for selected through date
function getHistoryTableData(throughDate)
{
	// need to empty this global variable
	historyArray = new Array();
	callPA671(throughDate, "", "");
}

var UpdateType = "";
// ags call for pay rate history
function callPA671(throughDate, seqNbr, begnDate)
{
	UpdateType = "PA67";
	self.lawheader.seqNbr = "";
	self.lawheader.begnDate = "";
	var agsObj = new AGSObject(authUser.prodline, "PA67.1");
	agsObj.event = "ADD";
	agsObj.rtn = "DATA";
	agsObj.out = "JAVASCRIPT";
	agsObj.longNames = "ALL";
	agsObj.tds = false;
	if (seqNbr == "" || begnDate == "")
	{	
		// first ags call
		agsObj.field = "FC=I";
	}	
	else 
	{
		// subsequent ags call
		agsObj.field = "FC=%2B" +
		"&PT-PRH-SEQ-NBR=" + seqNbr +
		"&PT-PRH-BEG-DATE=" + begnDate;
	}
	agsObj.field += "&PRH-COMPANY=" + parseInt(authUser.company,10) +
	"&PRH-EMPLOYEE=" + parseInt(authUser.employee,10) +
	"&THRU-DATE=" + formjsDate(formatDME(throughDate)) +
	"&HISTORY-ERRORS=1" +
	"&PRH-POS-LEVEL=01";
	// we will be getting XML formatted data back
	agsObj.rtnScript = false;
	agsObj.debug = false;
	agsObj.func = "parent.getCallReturnData('"+throughDate+"')";
	AGS(agsObj, "jsreturn");
}

function getCallReturnData(throughDate)
{
	if (self.lawheader.seqNbr != "" && self.lawheader.begnDate != "")
		callPA671(throughDate, self.lawheader.seqNbr, self.lawheader.begnDate);
	else
		drawHistoryTableInFrame(throughDate);
}

// history object having only interested fields
function HistoryObject()
{
	this.effective = null;
	this.rate = null;
	this.annualSalary = null;
	this.percentChange = null;
	this.currency = null;
	this.fldHash = new Array();
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var mainFrame = document.getElementById("DateSelectFrm");
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentWidth;
	var contentWidthBorder;
	var contentHeightBorder;
	var contentHeight;
	if (window.styler && window.styler.showInfor)
	{			
		contentWidth = winWidth - 10;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 5 : contentWidth + 2;
		contentHeight = winHeight - 65;
		contentHeightBorder = contentHeight + 30;
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentWidth = winWidth - 20;
		contentWidthBorder = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;
		contentHeight = winHeight - 75;
		contentHeightBorder = contentHeight + 30;
	}
	else
	{
		contentWidth = winWidth - 10;
		contentWidthBorder = contentWidth;
		contentHeight = winHeight - 60;
		contentHeightBorder = contentHeight + 24;
	}
	mainFrame.style.width = winWidth + "px";
	mainFrame.style.height = (winHeight - 30) + "px";
	try
	{
		if (self.DateSelectFrm.onresize && self.DateSelectFrm.onresize.toString().indexOf("setLayerSizes") >= 0)
			self.DateSelectFrm.onresize = null;		
	}
	catch(e) {}
	try
	{
		self.DateSelectFrm.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.DateSelectFrm.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.DateSelectFrm.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.DateSelectFrm.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.DateSelectFrm.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.DateSelectFrm.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e) {}
}
</script>
</head>
<body style="overflow:hidden" onload="startProgram()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="DateSelectFrm" name="DateSelectFrm" title="Main Content" level="2" tabindex="0" style="visiblity:hidden;position:absolute;left:0px;width:640px;height:464px;top:32px" src="/lawson/xhrnet/ui/headerpane.htm" marginwidth="0" marginheight="0" frameborder="no" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/payratelawheader.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.27 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/payratehistory.htm,v 1.17.2.57.2.1 2014/08/05 04:38:26 kevinct Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
