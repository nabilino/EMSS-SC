<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width" />
<meta http-equiv="Pragma" content="No-Cache">
<meta http-equiv="Expires" content="Mon, 01 Jan 1990 00:00:01 GMT">
<title>Compliance Report</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/statesuscan.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/credentials/ecl.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var CalculationDate;
var CCR = new Object();
var PassVariable = new Object();
var lastCmpSortField = null;
var lastExpSortField = null;

function OpenProgram()
{
   	authenticate("frameNm='jsreturn'|funcNm='Init()'|desiredEdit='EM'");
}

function Init()
{
	stylePage();
	self.printframe.stylePage();
	var title = getSeaPhrase("COMPLIANCE_REPORT","CR");
	setWinTitle(title);	
	setTaskHeader("header",title,"Credentials");
	// initialize fmttoday
	StoreDateRoutines();
	showWaitAlert(getSeaPhrase("WAIT","CR"), StartComplianceReport);
}

function StartComplianceReport()
{
	var toolTip;
	var htmlStr = uiRequiredFooter();
	htmlStr += '<div style="padding-right:15px"><form onsubmit="return false;"><table border="0" cellspacing="0" cellpadding="0" role="presentation">';
	htmlStr += '<tr><td class="fieldlabelbold" style="padding-bottom:0px"><label for="deftype">'+getSeaPhrase("SELECT_DEFICIENCY_TYPE","CR")+'</label></td>';
	htmlStr += '<td class="plaintablecell" style="padding-bottom:0px;white-space:nowrap" nowrap="nowrap">'+createDeficiencySelect()+'</td>'
	htmlStr += '<td class="fieldlabelbold" style="padding-bottom:0px"><label id="throughdateLbl" for="throughdate">'+getSeaPhrase("SELECT_THROUGH_DATE","CR")+'</label></td>';
	toolTip = getSeaPhrase("SELECT_THROUGH_DATE","CR");
	htmlStr += '<td class="plaintablecell" style="padding-bottom:0px;width:auto;white-space:nowrap" nowrap="nowrap"><span style="white-space:nowrap">';
	htmlStr += '<input class="inputbox" id="throughdate" name="throughdate" type="text" size="12" maxlength="10" onchange="parent.validateDate()" value="'+fmttoday+'" aria-labelledby="throughdateLbl throughdateFmt">';
	htmlStr += '<a href="javascript:parent.DateSelect(\'throughdate\');" title="'+toolTip+'" aria-label="'+toolTip+'">'+uiCalendarIcon()+'</a></span><br/>'+uiDateFormatSpan("throughdateFmt")+'</td>';
	htmlStr += '<td class="plaintablecell" style="padding-bottom:0px;text-align:center;white-space:nowrap" nowrap="nowrap">';
	htmlStr += uiButton(getSeaPhrase("CALCULATE","CR"),"parent.drawComplianceDetail();return false","margin-left:5px");
	htmlStr += '</td></tr></table></form></div>';
	htmlStr += '<div id="complianceDtl" style="width:100%;height:auto;padding-bottom:5px">&nbsp;</div>';
	try 
	{
		self.main.document.getElementById("paneHeader").innerHTML = getSeaPhrase("REPORT_OPTIONS","CR");
		self.main.document.getElementById("paneBody").style.overflow = "hidden";
		self.main.document.getElementById("paneBody").innerHTML = htmlStr;
	}
	catch(e) {}
	self.main.stylePage();
	self.main.setLayerSizes();
	document.getElementById("main").style.visibility = "visible";
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.main.getWinTitle()]));
	fitToScreen();
}

function createDeficiencySelect()
{
	var valueList = new Array(getSeaPhrase("DEFICIENCY_TYPE_0","CR"),
		getSeaPhrase("DEFICIENCY_TYPE_1","CR"),getSeaPhrase("DEFICIENCY_TYPE_2","CR"));
	var tmpStr = '<span id="deficiencytype" style="white-space:nowrap">';
	tmpStr += '<select class="inputbox" id="deftype" name="deficiencytype" onchange="parent.clearDetailScreen()">';
	tmpStr += '<option value="" selected="selected"></option>';
	for (var i=0; i<valueList.length; i++) 
	{
		tmpStr += '<option value="';
		tmpStr += (i==0)?' ':(i+1);
		tmpStr += '">'+valueList[i]+'</option>';
	}
	tmpStr += '</select>'+uiRequiredIcon()+'</span>';
	return tmpStr;
}

function clearDetailScreen()
{
	self.main.document.getElementById("complianceDtl").innerHTML = "&nbsp;";
	self.main.setLayerSizes();
	document.getElementById("detail").style.visibility = "hidden";
}

// validate date change
function validateDate()
{
	var inputObj = self.main.document.forms[0].elements["throughdate"];
	clearRequiredField(inputObj);
	if (NonSpace(inputObj.value) == 0) 
	{
		inputObj.value = "";
		return true;
	}
	else if (!ValidateDate(inputObj)) 
	{
		// date is invalid
		return false;
	} 
	else if (isNaN(Number(formjsDate(formatDME(inputObj.value))))) 
	{
		// date is invalid
		setRequiredField(inputObj, getSeaPhrase("INVALID_DATE","CR"));
		return false;
	} 
	else 
	{
		// format the date
		var dteParams = dateIsValid(inputObj.value);
		var dte = dteParams[0];
		var errMsg = dteParams[1];
		if (dte)
		{	
			inputObj.value = dte;
			return true;
		}	
		else if (errMsg)
		{	
			setRequiredField(inputObj, errMsg);
			return false;
		}
		return true;
	}
}

function drawComplianceDetail()
{
	var effectDate = fmttoday;
	var defType = self.main.document.forms[0].elements["deficiencytype"];
	var throughDate = self.main.document.forms[0].elements["throughdate"];
	// hide detail frame
	closeComplianceDetail();
	clearRequiredField(self.main.document.getElementById("deficiencytype"));
	clearRequiredField(throughDate);
	if (defType.selectedIndex == 0) 
	{
		setRequiredField(self.main.document.getElementById("deficiencytype"), getSeaPhrase("DEFICIENCY_TYPE_REQUIRED","CR"), defType);
		return;
	}
	if (NonSpace(throughDate.value) > 0) 
	{
		if (validateDate() == false)
			return;
		else
			effectDate = throughDate.value;
	}
	else
		throughDate.value = fmttoday;
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","CR"), function(){EmployeeComplianceReport(effectDate);});
}

function ReturnDate(dateStr)
{
   	self.main.document.forms[0].elements[date_fld_name].value = dateStr;
}

function EmployeeComplianceReport(effectDate)
{
	var defType = self.main.document.forms[0].elements["deficiencytype"];
	self.lawheader.UpdateType = "CCR";
	CCR = null;
	CCR = new self.lawheader.Object();
	CCR.Manager = true;
	var agsCall = new AGSObject(authUser.prodline,"HS13.1");
	agsCall.event = "ADD";
	agsCall.rtn	= "DATA";
	agsCall.longNames = true;
	agsCall.tds	= false;
	agsCall.field = "FC=I"
	+ "&COMPANY="+escape(authUser.company)
	+ "&HSU-EMPLOYEE="+escape(authUser.employee);
	if (effectDate)
		agsCall.field += "&EXPIRATION-DATE="+escape(formjsDate(formatDME(effectDate)));
	agsCall.field += "&EXPIRE-TYPE="+escape(defType.options[defType.selectedIndex].value,1);
	agsCall.func = "parent.ReturnAgsCall()";
	agsCall.out	= "JAVASCRIPT";
	agsCall.debug = false;
	AGS(agsCall,"jsreturn");
}

function ReturnAgsCall()
{
	if (self.lawheader.gmsgnbr != "000") 
	{
		removeWaitAlert();
		seaAlert(self.lawheader.gmsg, null, null, "error");
	}
	else 
	{
		if (typeof(CCR.CompCompliances) == "undefined")
			CCR.CompCompliances = new Array();
		else
			CCR.CompCompliances.sort(sortByDscPercentage);
		PaintCCR();
	}
}

function PaintCCR(onsort, sortField, sortDir)
{
	sortDir = sortDir || "ascending";
	var nextSortDir = (sortDir == "ascending") ? "descending" : "ascending";	
	var htmlStr = '';
	if (CCR.CompCompliances.length == 0) 
	{
		// no compliance report data for the selected criteria
		htmlStr += '<div class="fieldlabelboldleft" style="padding:10px">'+getSeaPhrase("NO_EXPIRED_COMPS","CR")+'</div>';
	} 
	else 
	{
		// data found
		var toolTip = getSeaPhrase("SORT_BY_COMPETENCY","CR");
		htmlStr += '<table id="complianceTbl" class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list" summary="'+getSeaPhrase("TSUM_1","CR")+'">';
		htmlStr += '<caption class="offscreen">'+getSeaPhrase("TCAP_1","CR")+'</caption>';
		htmlStr += '<tr><th scope="col" class="plaintableheaderborderdarkgreybluetop" style="padding-left:78px" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">';
		htmlStr += '<a class="columnsort" href="javascript:;" onclick="parent.SortComplianceRpt(\'Description\',\''+nextSortDir+'\');return false;" title="'+toolTip+'">'+getSeaPhrase("COMPETENCY","CR")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></th>';
		htmlStr += '<th scope="col" class="plaintableheaderborderdarkgreybluetop" style="text-align:center">'+getSeaPhrase("CR_29","CR")+'</th>';
		toolTip = getSeaPhrase("SORT_BY_COMPLIANCE","CR");		
		htmlStr += '<th scope="col" class="plaintableheaderborderdarkgreybluetop" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">';
		htmlStr += '<a class="columnsort" href="javascript:;" onclick="parent.SortComplianceRpt(\'CompPercentage\',\''+nextSortDir+'\');return false;" title="'+toolTip+'">'+getSeaPhrase("COMPLIANCE","CR")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></th>';
		htmlStr += '</tr>';
		for (var i=0; i<CCR.CompCompliances.length; i++) 
		{
			htmlStr += '<tr><td class="plaintablecellborder" style="padding-left:78px" nowrap>';
			htmlStr += ((CCR.CompCompliances[i].Description && NonSpace(CCR.CompCompliances[i].Description)>0)?CCR.CompCompliances[i].Description:'&nbsp;')+'</td>';
			htmlStr += '<td class="plaintablecellborder" style="text-align:center" nowrap>';
			if (Number(CCR.CompCompliances[i].NumExpired) == 0)
				htmlStr += Number(CCR.CompCompliances[i].NumExpired)+'</td>';
			else 
			{
				toolTip = CCR.CompCompliances[i].Description+' - '+getSeaPhrase("VIEW_EXP_DTL_FOR","CR",[Number(CCR.CompCompliances[i].NumExpired)]);
				htmlStr += '<a href="javascript:parent.GetExpirationDetail('+i+');" title="'+toolTip+'">';
				htmlStr += ((NonSpace(CCR.CompCompliances[i].NumExpired)>0 && !isNaN(parseFloat(CCR.CompCompliances[i].NumExpired)))?Number(CCR.CompCompliances[i].NumExpired):'&nbsp;')+'<span class="offscreen">&nbsp;'+toolTip+'</span></a></td>';
			}
			htmlStr += '<td class="plaintablecellborder" style="text-align:center" nowrap>';
			htmlStr += ((NonSpace(CCR.CompCompliances[i].CompPercentage)>0 && !isNaN(parseFloat(CCR.CompCompliances[i].CompPercentage)))?Number(CCR.CompCompliances[i].CompPercentage):'&nbsp;')
			htmlStr += getSeaPhrase("PERCENT_SYMBOL","CR")+'</a></td></tr>';
		}
		htmlStr += '</table>';
	}
	try
	{
		self.main.document.getElementById("complianceDtl").innerHTML = htmlStr;
	}
	catch(e) {}
	self.main.stylePage();
	if (onsort)
		self.main.styleSortArrow("complianceTbl", sortField, sortDir);
	self.main.document.getElementById("complianceDtl").style.visibility = "visible";
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.main.getWinTitle()]));
	fitToScreen();
}

function sortByAscDesc(obj1, obj2)
{
	var name1 = obj1.Description;
	var name2 = obj2.Description;
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function sortByDscDesc(obj1, obj2)
{
	var name1 = obj1.Description;
	var name2 = obj2.Description;
	if (name1 > name2)
		return -1;
	else if (name1 < name2)
		return 1;
	else
		return 0;
}

function sortByAscPercentage(obj1, obj2)
{
	var name1 = parseFloat(obj1.CompPercentage, 10);
	var name2 = parseFloat(obj2.CompPercentage, 10);
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function sortByDscPercentage(obj1, obj2)
{
	var name1 = obj1.CompPercentage;
	var name2 = obj2.CompPercentage;
	if (name1 > name2)
		return -1;
	else if (name1 < name2)
		return 1;
	else
		return 0;
}

function sortByAscName(obj1, obj2)
{
	var name1 = obj1.LabelName;
	var name2 = obj2.LabelName;
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function sortByDscName(obj1, obj2)
{
	var name1 = obj1.LabelName;
	var name2 = obj2.LabelName;
	if (name1 > name2)
		return -1;
	else if (name1 < name2)
		return 1;
	else
		return 0;
}

function sortByAscExpireDate(obj1, obj2)
{
	var name1 = obj1.RenewDate;
	var name2 = obj2.RenewDate;
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function sortByDscExpireDate(obj1, obj2)
{
	var name1 = obj1.RenewDate;
	var name2 = obj2.RenewDate;
	if (name1 > name2)
		return -1;
	else if (name1 < name2)
		return 1;
	else
		return 0;
}

function SortComplianceRpt(property, dir)
{
	var nextFunc = function()
	{
		if (property != lastCmpSortField)
			dir = "ascending";
		lastCmpSortField = property;	
		switch (property) 
		{
			case "Description": 
				var sortFunc = (dir == "ascending") ? sortByAscDesc : sortByDscDesc;
				CCR.CompCompliances.sort(sortFunc); 
				break;
			case "CompPercentage": 
				var sortFunc = (dir == "ascending") ? sortByAscPercentage : sortByDscPercentage;
				CCR.CompCompliances.sort(sortFunc); 
				break;
		}
		PaintCCR(true, property, dir);
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

function SortExpiredDetail(property, dir)
{
	var nextFunc = function()
	{
		if (property != lastExpSortField)
			dir = "ascending";
		lastExpSortField = property;	
		switch (property) 
		{
			case "LabelName": 
				var sortFunc = (dir == "ascending") ? sortByAscName : sortByDscName;
				EEC.ExpCompetencies.sort(sortFunc); 
				break;
			case "RenewDate": 
				var sortFunc = (dir == "ascending") ? sortByAscExpireDate : sortByDscExpireDate;
				EEC.ExpCompetencies.sort(sortFunc); 
				break;
		}
		PaintComplianceExpirationDetail(true, property, dir);
	};
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"), nextFunc);
}

function GetExpirationDetail(Index)
{
	activateTableRow("complianceTbl",Index,self.main);
	deactivateTableRows("expiredDetailTbl",self.detail);
	var throughDate = self.main.document.forms[0].elements["throughdate"];
	var effectDate;
	if (NonSpace(throughDate.value) > 0)
		effectDate = throughDate.value;
	else if (NonSpace(CCR.SystemDate) > 0) 
	{
		throughDate.value = FormatDte4(CCR.SystemDate);
		effectDate = FormatDte4(CCR.SystemDate);
	}
	else 
	{
		throughDate.value = fmttoday;
		effectDate = fmttoday;
	}
	CCR.CompCompliances.CurrentIndex = Index;
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","CR"), function(){EmployeeExpiredCompetency(effectDate,false,true);});
}

function PaintComplianceExpirationDetail(onsort, sortField, sortDir)
{
	try 
	{
		self.detail.document.getElementById("paneHeader").innerHTML = getSeaPhrase("EXPIRATION_DETAIL","CR");
		self.detail.document.getElementById("paneBody").innerHTML = createExpiredCompTbl(onsort, sortField, sortDir, false);
	}
	catch(e) {}
	self.detail.stylePage();
	if (!onsort)
	{
		self.detail.setLayerSizes();
		document.getElementById("detail").style.visibility = "visible";
	}
	else
	    self.detail.styleSortArrow("expiredDetailTbl", sortField, sortDir);
	removeWaitAlert(getSeaPhrase("CNT_UPD_FRM","SEA",[self.detail.getWinTitle()]));
	if (EEC.TransactionLimit == "Y")
		seaAlert(getSeaPhrase("CR_69","CR"), null, null, "alert");	
	fitToScreen();
}

function createExpiredCompTbl(onsort, sortField, sortDir, onprint)
{
	sortDir = sortDir || "ascending";
	var nextSortDir = (sortDir == "ascending") ? "descending" : "ascending";	
	var htmlStr = '';
	if (EEC.ExpCompetencies.length == 0) 
	{
		// no expired competencies for the selected criteria
		htmlStr += '<div class="fieldlabelboldleft" style="padding:10px">'+getSeaPhrase("NO_EXPIRED_COMPS","CR")+'</div>';
	} 
	else 
	{
		// got some data
		var toolTip = getSeaPhrase("SORT_BY_NAME","CR");
		if (onprint)
			htmlStr += '<div style="width:100%;height:auto;padding-bottom:5px;overflow:visible">';
		else
			htmlStr += '<div style="width:100%;height:auto;padding-bottom:5px">';
		htmlStr += '<table id="expiredDetailTbl" class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list" summary="'+getSeaPhrase("TSUM_2","CR",[CCR.CompCompliances[CCR.CompCompliances.CurrentIndex].Description])+'">';
		htmlStr += '<caption class="offscreen">'+getSeaPhrase("TCAP_2","CR",[CCR.CompCompliances[CCR.CompCompliances.CurrentIndex].Description])+'</caption>';
		htmlStr += '<tr>';
		if (onprint)
			htmlStr += '<th scope="col" class="plaintableheaderborderlite">';
		else
			htmlStr += '<th scope="col" class="plaintableheaderborderlite" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">';
		htmlStr += '<a class="columnsort" href="javascript:;" onclick="parent.SortExpiredDetail(\'LabelName\',\''+nextSortDir+'\');return false;" title="'+toolTip+'">'+getSeaPhrase("EMPLOYEE","CR")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></th>';
		if (onprint) 
		{
			htmlStr += '<th scope="col" class="plaintableheaderborderlite">'+getSeaPhrase("JOB","CR")+'</th>';
			htmlStr += '<th scope="col" class="plaintableheaderborderlite" style="text-align:center">';
		}
		else 
		{
			htmlStr += '<th scope="col" class="plaintableheaderborderlite">'+getSeaPhrase("JOB","CR")+'</th>';
			htmlStr += '<th scope="col" class="plaintableheaderborderlite" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">';
		}
		toolTip = getSeaPhrase("SORT_BY_EXPIRATION_DATE","CR");
		htmlStr += '<a class="columnsort" href="javascript:;" onclick="parent.SortExpiredDetail(\'RenewDate\',\''+nextSortDir+'\');return false;" title="'+toolTip+'">'+getSeaPhrase("EXPIRATION_DATE","CR")+'<span class="offscreen"> - '+getSeaPhrase("SORT_BY_X","SEA")+'</span></th></tr>';
		var rowNbr = 0;
		for (var i=0; i<EEC.ExpCompetencies.length; i++) 
		{
			// Ensure that we only see records that match the selected competency
			if (EEC.ExpCompetencies[i].Code == CCR.CompCompliances[CCR.CompCompliances.CurrentIndex].Code
			&& EEC.ExpCompetencies[i].Type == CCR.CompCompliances[CCR.CompCompliances.CurrentIndex].Type)
			{
				toolTip = EEC.ExpCompetencies[i].LabelName+' - '+getSeaPhrase("CR_67","CR");
				htmlStr += '<tr>';
				if (onprint)
					htmlStr += '<td class="plaintablecellborder" nowrap>';
				else
					htmlStr += '<td class="plaintablecellborder" nowrap>';
				htmlStr += '<a href="javascript:parent.LinkECPFromComplianceRpt('+i+','+rowNbr+');" title="'+toolTip+'">';
				htmlStr += ((EEC.ExpCompetencies[i].LabelName && NonSpace(EEC.ExpCompetencies[i].LabelName)>0)?EEC.ExpCompetencies[i].LabelName:'&nbsp;')+'<span class="offscreen"> - '+getSeaPhrase("CR_67","CR")+'</span></a></td>';
				if (onprint)
					htmlStr += '<td class="plaintablecellborder" nowrap>';
				else
					htmlStr += '<td class="plaintablecellborder" nowrap>';
				htmlStr += ((EEC.ExpCompetencies[i].Description && NonSpace(EEC.ExpCompetencies[i].Description)>0)?EEC.ExpCompetencies[i].Description:'&nbsp;')+'</td>';
				if (onprint)
					htmlStr += '<td class="plaintablecellborder" style="text-align:center" nowrap>';
				else
					htmlStr += '<td class="plaintablecellborder" style="text-align:center" nowrap>';
				htmlStr += ((EEC.ExpCompetencies[i].RenewDate && NonSpace(EEC.ExpCompetencies[i].RenewDate)>0)?FormatDte4(EEC.ExpCompetencies[i].RenewDate):getSeaPhrase("CR_45","CR"))+'</td>';
				htmlStr += '</tr>';
				rowNbr++;
			}
		}
		htmlStr += '</table></div>';
		if (!onprint)
		{
			htmlStr += '<table id="expiredDetailBtns" class="plaintable" border="0" cellspacing="0" cellpadding="0" width="100%" role="presentation">';
			htmlStr += '<tr><td class="plaintablecellright" nowrap>';
			htmlStr += uiButton(getSeaPhrase("CLOSE","CR"),"parent.closeComplianceDetail();return false",false,"closebtn");
			htmlStr += uiButton(getSeaPhrase("PRINT","CR"),"parent.printComplianceDetail();return false","margin-left:5px;margin-right:15px","printbtn");
			htmlStr += '</td></tr></table>';
		}
	}
	return htmlStr;
}

function LinkECPFromComplianceRpt(Index,rowNbr)
{
   	var nextFunc = function()
   	{
   		activateTableRow("expiredDetailTbl",rowNbr,self.detail);
	   	if (self.subtask.location.href.indexOf("ecp.htm") == -1)
	   		self.subtask.location.replace("/lawson/xhrnet/credentials/ecp.htm?employee="+escape(EEC.ExpCompetencies[Index].Employee,1));
		else 
		{
			self.subtask.employeeNbr = EEC.ExpCompetencies[Index].Employee;
			self.subtask.Drive();
		}
		document.getElementById("main").style.visibility = "hidden";
		document.getElementById("subtask").style.visibility = "visible";
   	};
   	showWaitAlert(getSeaPhrase("GATHERING_INFO","CR"), nextFunc);  	
}

function closeComplianceDetail()
{
	try 
	{
		document.getElementById("detail").style.visibility = "hidden";
		self.detail.document.getElementById("paneBody").innerHTML = "";
	}
	catch(e) {}
}

function printComplianceDetail()
{
	var strHtml = self.header.document.body.innerHTML
	+ '<p/><div class="paneheader" style="background-color:#ffffff;color:#000000">'+getSeaPhrase("CR_41","CR")+' '+FormatDte4(CCR.SystemDate)+'.</div>'
	+ '<br/><div id="paneBorder" class="paneborder">'
	+ '<table id="paneTable" border="0" width="100%" cellpadding="0" cellspacing="0" role="presentation">'
	+ '<tr><td style="height:16px;vertical-align:top">'
	+ '<div id="paneHeader" class="paneheader" role="heading" aria-level="1">'+getSeaPhrase("EXPIRATION_DETAIL","CR")+' - '+CCR.CompCompliances[CCR.CompCompliances.CurrentIndex].Description+'</div></td></tr>'
	+ '<tr><td style="vertical-align:top">'+createExpiredCompTbl(false,null,null,true)+'</td></tr></table></div>'
	self.printframe.document.title = getSeaPhrase("COMPLIANCE_REPORT","CR");
	self.printframe.document.getElementById("paneBody1").innerHTML = strHtml;
	try
	{
		self.printframe.document.getElementById("taskName").innerHTML += ' - '+CCR.EmployeeName;
	}
	catch(e) {}
	self.printframe.stylePage();
	self.printframe.document.body.style.overflow = "visible";
	self.printframe.document.getElementById("paneBody1").style.overflow = "visible";
	self.printframe.focus();
	self.printframe.print();
}

// Override help dialog function
function OpenHelpDialog()
{
	openHelpDialogWindow("/lawson/xhrnet/credentials/crhelp.htm");
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
		window.stylerWnd = findStyler(true);
	if (!window.stylerWnd)
		return;
	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
		window.styler = new window.stylerWnd.StylerEMSS();
	else
		window.styler = window.stylerWnd.styler;
	var mainFrame = document.getElementById("main");
	var detailFrame = document.getElementById("detail");
	var subtaskFrame = document.getElementById("subtask");
	var winObj = getWinSize();
	var winWidth = winObj[0];	
	var winHeight = winObj[1];
	var contentWidth;
	var contentBorderWidth;
	var contentTopHeight;
	var contentTopBorderHeight;
	var contentBottomHeight;
	var contentBottomBorderHeight;
	var contentHeight;
	var contentBorderHeight;
	if (window.styler && window.styler.showInfor)
	{			
		contentWidth = winWidth - 10;
		contentBorderWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 5 : contentWidth + 2;
		contentTopHeight = parseInt(winHeight*.50,10) - 60;
		contentTopBorderHeight = contentTopHeight + 30;
		contentBottomHeight = parseInt(winHeight*.50,10) - 35;
		contentBottomBorderHeight = contentBottomHeight + 30;
		contentHeight = winHeight - 60;
		contentBorderHeight = (navigator.appName.indexOf("Microsoft") >= 0) ? contentHeight + 30 : contentHeight + 25;		
	}
	else if (window.styler && (window.styler.showLDS || window.styler.showInfor3))
	{
		contentWidth = winWidth - 20;
		contentBorderWidth = (window.styler.showInfor3) ? contentWidth + 7 : contentWidth + 17;
		contentTopHeight = parseInt(winHeight*.50,10) - 60;
		contentTopBorderHeight = contentTopHeight + 30;
		contentBottomHeight = parseInt(winHeight*.50,10) - 45;
		contentBottomBorderHeight = contentBottomHeight + 30;
		contentHeight = winHeight - 60;
		contentBorderHeight = contentHeight + 30;
		if (window.styler.showInfor3)	
			subtaskFrame.style.backgroundColor = "#ffffff";		
	}
	else
	{
		contentWidth = winWidth - 10;
		contentBorderWidth = contentWidth;
		contentTopHeight = parseInt(winHeight*.50,10) - 60;
		contentTopBorderHeight = contentTopHeight + 24;
		contentBottomHeight = parseInt(winHeight*.50,10) - 40;
		contentBottomBorderHeight = contentBottomHeight + 24;
		contentHeight = winHeight - 60;
		contentBorderHeight = contentHeight + 24;		
	}
	if (self.main.onresize && self.main.onresize.toString().indexOf("setLayerSizes") >= 0)
		self.main.onresize = null;
	try
	{
		mainFrame.style.width = winWidth + "px";
		mainFrame.style.height = parseInt(winHeight*.50,10) + "px";
		self.main.document.getElementById("paneBorder").style.width = contentBorderWidth + "px";
		self.main.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.main.document.getElementById("paneBorder").style.height = contentTopBorderHeight + "px";
		self.main.document.getElementById("paneBodyBorder").style.height = contentTopHeight + "px";
		self.main.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.main.document.getElementById("paneBody").style.height = contentTopHeight + "px";
		self.main.document.getElementById("paneBody").style.overflow = "auto";
	}
	catch(e) {}
	if (self.detail.onresize && self.detail.onresize.toString().indexOf("setLayerSizes") >= 0)
		self.detail.onresize = null;
	try
	{
		detailFrame.style.width = winWidth + "px";	
		detailFrame.style.height = parseInt(winHeight*.50,10) + "px";
		detailFrame.style.top = parseInt(winHeight*.50,10) + "px";
		self.detail.document.getElementById("paneBorder").style.width = contentBorderWidth + "px";
		self.detail.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.detail.document.getElementById("paneBorder").style.height = contentBottomBorderHeight + "px";
		self.detail.document.getElementById("paneBodyBorder").style.height = contentBottomHeight + "px";
		self.detail.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.detail.document.getElementById("paneBody").style.height = contentBottomHeight + "px";
		self.detail.document.getElementById("paneBody").style.overflow = "auto";
	}
	catch(e) {}	
	if (self.subtask.onresize && self.subtask.onresize.toString().indexOf("setLayerSizes") >= 0)
		self.subtask.onresize = null;
	try
	{
		subtaskFrame.style.width = winWidth + "px";
		subtaskFrame.style.height = winHeight + "px";	
		self.subtask.document.getElementById("paneBorder").style.width = contentBorderWidth + "px";
		self.subtask.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.subtask.document.getElementById("paneBorder").style.height = contentBorderHeight + "px";
		self.subtask.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.subtask.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.subtask.document.getElementById("paneBody").style.height = contentHeight + "px";
		self.subtask.document.getElementById("paneBody").style.overflow = "auto";
	}
	catch(e) {}
}
</script>
</head>
<body style="width:100%;height:100%;overflow:hidden" onload="OpenProgram()" onresize="fitToScreen()">
	<iframe id="header" name="header" title="Header" level="1" tabindex="0" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="main" name="main" title="Main Content" level="2" tabindex="0" src="/lawson/xhrnet/ui/headerpanehelp.htm" style="visibility:hidden;position:absolute;left:0px;width:790px;top:32px;height:300px;z-index:1" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="detail" name="detail" title="Secondary Content" level="3" tabindex="0" src="/lawson/xhrnet/ui/headerpanelite.htm" style="visibility:hidden;position:absolute;left:0px;width:790px;top:332px;height:212px;z-index:0" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="subtask" name="subtask" title="Secondary Content" level="2" tabindex="0" src="/lawson/xhrnet/dot.htm" style="visibility:hidden;position:absolute;left:0px;width:803px;top:32px;height:544px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="printframe" name="printframe" title="Empty" src="/lawson/xhrnet/ui/plain.htm" style="visibility:hidden;height:0px;width:0px;" frameborder="no" marginwidth="0" marginheight="0" scrolling="auto"></iframe>
	<iframe id="jsreturn" name="jsreturn" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" title="Empty" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/credentials/complawheader.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/credentials/cr.htm,v 1.13.2.68 2014/02/21 22:52:17 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->

