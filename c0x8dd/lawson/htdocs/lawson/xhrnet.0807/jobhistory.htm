<html>
<head>
<title>Job History</title>
<META HTTP-EQUIV="Pragma" CONTENT="No-Cache">
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/instctrycdselect.js"></script>
<script src="/lawson/xhrnet/statesuscan.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script>
var searchStr = (window.location.search)?unescape(window.location.search):"";
var applicant = "0";
var stateProvFilter = "state";
var Currencies = new Array();
var Jobcodes = new Array();
var JobHistory = new Array();

if (searchStr)
{
	applicant = getVarFromString("number",searchStr);
}

function StartJobHistory()
{
	stylePage();
	if (searchStr) {
		parent.showWaitAlert(getSeaPhrase("WAIT","ESS"));
	}
	document.title = getSeaPhrase("APP_JOB_HISTORY","ESS");
	if (emssObjInstance.emssObj.filterSelect) {
		GoToListScreen();
	} else {
		GetInstCtryCdSelect(authUser.prodline,"GetStates()");
	}
}

function GetStates()
{
	GrabStates("GetCurrencyCodes()");
}

function GetCurrencyCodes()
{
	Currencies = new Array();

	var dmeObj = new DMEObject(authUser.prodline, "cucodes");
    dmeObj.out = "JAVASCRIPT";
    dmeObj.index = "cucset1";
    dmeObj.field = "currency-code;description";
	dmeObj.max = "600";
	dmeObj.key = "";
    dmeObj.func = "ProcessCurrencyCodes()";
    dmeObj.exclude  = "drill;keys;sorts";
   	DME(dmeObj, "jsreturn");
}

function ProcessCurrencyCodes()
{
	Currencies = Currencies.concat(self.jsreturn.record);

	if (self.jsreturn.Next != "") {
		self.jsreturn.location.replace(self.jsreturn.Next);
	}
	else {
		Currencies.sort(sortByDescription);
		GetJobCodes();
	}
}

function sortByDescription(obj1, obj2)
{
	var name1 = obj1.description;
	var name2 = obj2.description;
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function GetJobCodes()
{
	Jobcodes = new Array();

 	var dmeObj    	= new DMEObject(authUser.prodline,"jobcode");
    dmeObj.out      = "JAVASCRIPT";
    dmeObj.index    = "jbcset1";
    dmeObj.field    = "job-code;description";
	dmeObj.cond     = "active";
    dmeObj.key      = parseFloat(authUser.company)+"=";
    dmeObj.max      = "600";
    dmeObj.exclude  = "drill;keys;sorts";
   	DME(dmeObj,"jsreturn");
}

function DspJobcode()
{
	Jobcodes = Jobcodes.concat(self.jsreturn.record);

   	if (self.jsreturn.Next != "") {
    	self.jsreturn.location.replace(self.jsreturn.Next);
 	}
 	else {
 		Jobcodes.sort(sortByDescription);
    	GoToListScreen();
   	}
}

function sortByDescStartDate(obj1, obj2)
{
	var name1 = formjsDate(obj1.beg_date);
	var name2 = formjsDate(obj2.beg_date);
	if (name1 > name2)
		return -1;
	else if (name1 < name2)
		return 1;
	else
		return 0;
}

function GoToListScreen(Refresh)
{
	JobHistory = new Array();

   	var dmeObj   = new DMEObject(authUser.prodline,"appjobhist")
  	dmeObj.out   = "JAVASCRIPT"
  	dmeObj.index = "ajhset1"
	dmeObj.field = "addr1;addr2;addr3;addr4;city;state;zip;title;sup-name;currency-code;"
		+ "beg-date;end-date;job-code;cur-empr-flag;contact-flag;can-call-flag;"
	  	+ "beg-pay;end-pay;job-code.description;seq-nbr;employer-name;wk-phone-nbr;"
	  	+ "country.country-code;country.country-desc;currency.description"
	dmeObj.key   = parseInt(authUser.company,10)+"="+parseInt(applicant,10)+"=";
	dmeObj.max   = "600";
	dmeObj.func  = (Refresh)?"JobHistory_Finished(true)":"JobHistory_Finished(false)";
    DME(dmeObj,"jsreturn");
}

function JobHistory_Finished(Refresh)
{
	JobHistory = JobHistory.concat(self.jsreturn.record);

   	if (self.jsreturn.Next != "") {
    	self.jsreturn.location.replace(self.jsreturn.Next);
 	}
 	else {
 		JobHistory.sort(sortByDescStartDate);
    	JobHistoryListScreen(Refresh);
   	}
}

function JobHistoryListScreen(Refresh)
{
	// Clear the right-hand-side detail frame.
	ClearDetailScreen();

	var jobRec;
	var jobTitle;
	var bodyHtml = ''

	if (JobHistory.length > 0)
	{
		bodyHtml += '<table id="jobhistoryTbl" class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%">'

		for (var i=0; i<JobHistory.length; i++)
		{
		   	jobRec = JobHistory[i];
			jobTitle = (jobRec.job_code_description)?jobRec.job_code_description:((jobRec.title)?jobRec.title:'&nbsp;');

		   	//if (i%2 == 0)
		   		var tblRow = '<tr>'
		   	//else
		   	//	var tblRow = '<tr class="tablerowhighlight">'
			bodyHtml += tblRow+'<th class="plaintablerowheaderborder" style="width:50%;border-bottom:0px;padding-top:5px;text-align:right">'+getSeaPhrase("EMPLOYER_NAME","ESS")+'</th>'
			+ '<td class="plaintablecellborder" style="border-bottom:0px;padding-top:5px;text-align:left"><a href="" onclick="parent.JobHistoryClicked('+i+','+((i*4)-1)+');return false" nowrap>'+jobRec.employer_name+'</a></td>'
			+ '</tr>'+tblRow+'<th class="plaintablerowheaderborder" style="width:50%;border-bottom:0px;text-align:right">'+getSeaPhrase("START_DATE","ESS")+'</th>'
			+ '<td class="plaintablecellborder" style="border-bottom:0px;text-align:left" nowrap>'+((formatDME(jobRec.beg_date))?formatDME(jobRec.beg_date):'&nbsp;')+'</td>'
			+ '</tr>'+tblRow+'<th class="plaintableheaderborder" style="width:50%;border-bottom:0px;text-align:right">'+getSeaPhrase("END_DATE","ESS")+'</th>'
			+ '<td class="plaintablecellborder" style="border-bottom:0px;text-align:left" nowrap>'+((formatDME(jobRec.end_date))?formatDME(jobRec.end_date)+'&nbsp;':'')+'</td>'
			+ '</tr>'+tblRow+'<th class="plaintableheaderborder" style="width:50%;padding-bottom:5px;text-align:right">'+getSeaPhrase("JOB_TITLE","ESS")+'</th>'
			+ '<td class="plaintablecellborder" style="padding-bottom:5px;text-align:left" nowrap>'+jobTitle+'</td>'
			+ '</tr>'
		}
	    bodyHtml += '</table>'
	}

	bodyHtml += '<div style="width:100%;text-align:center">'
	if (searchStr)
	{
		bodyHtml += uiButton(getSeaPhrase("ADD","ESS"),"parent.DrawAddDetailContent();return false",false,"addbtn");
		bodyHtml += uiButton(getSeaPhrase("BACK","ESS"),"parent.CloseJobHistory();return false",false,"closebtn");
	}
	else
	{
		bodyHtml += uiButton(getSeaPhrase("ADD","ESS"),"parent.DrawAddDetailContent();return false",false,"addbtn");
	}
	bodyHtml += '</div>'

	self.left.document.getElementById("paneHeader").innerHTML = getSeaPhrase("JOB_HISTORY","ESS");
	if (!document.all) {
		self.left.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold" style="text-align:left;padding-bottom:40px;padding-left:20px;padding-right:20px;padding-top:10px">'
		+getSeaPhrase("ADD_JOBHISTORY","ESS")
		+'<p/>'
		+((JobHistory.length)?getSeaPhrase("CHG_JOBHISTORY","ESS"):'')
		+'</div><p/>'+bodyHtml;
	}
	else {
		self.left.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold" style="text-align:left;padding-left:20px;padding-right:20px;padding-top:10px">'
		+getSeaPhrase("ADD_JOBHISTORY","ESS")
		+'<p/>'
		+((JobHistory.length)?getSeaPhrase("CHG_JOBHISTORY","ESS"):'')
		+'</div><p/>'+bodyHtml;
	}
	self.left.stylePage();
	document.getElementById("left").style.visibility = "visible";
	// if this task has been launched as a related link, remove any processing message
	if (searchStr && typeof(parent.removeWaitAlert) == "function")
		parent.removeWaitAlert();
	if (Refresh)
		UpdateComplete();
	fitToScreen();
}

function DrawAddDetailContent()
{
	JobHistoryContent = '<form name="jobhistoryform">'
	+ '<input class="inputbox" type="hidden" name="seqnbr" value="0">'
	+ '<input class="inputbox" type="hidden" name="fc" value="A">'
	+ '<table border="0" cellspacing="0" cellpadding="0" width="100%">'
	+ '<tr style="padding-top:5px"><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("EMPLOYER_NAME","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="employer" value="" size="30" maxlength="30" onfocus="this.select()">'+uiRequiredIcon()+'</td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("START_DATE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="begdate" value="" size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
	+ '<a href="" onclick="parent.DateSelect(\'begdate\');return false" onmouseover="window.status=\''+getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'+uiCalendarIcon()+'</a>'+uiDateFormatSpan()+'</td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("END_DATE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="enddate" value="" size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
	+ '<a href="" onclick="parent.DateSelect(\'enddate\');return false" onmouseover="window.status=\''+getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'+uiCalendarIcon()+'</a>'+uiDateFormatSpan()+'</td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("JOB_TITLE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="title" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("RELATED_JOB_CODE","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="jobcode" value="" size="9" maxlength="9" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'jobcodeDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'jobcode\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="jobcodeDesc" style="text-align:left;width:200px" class="fieldlabel"></span>'
		+ '</td></tr>'
	}
	else
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap><select class="inputbox" name="jobcode">'+BuildJobCodeSelect("")+'</select></td></tr>'
	}

	JobHistoryContent += '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ANNUAL_PAY_START","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="begpay" value="" size="12" maxlength="12" onfocus="this.select()" onchange="parent.ValidatePay(this,12,2)"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ANNUAL_PAY_END","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="endpay" value="" size="12" maxlength="12" onfocus="this.select()" onchange="parent.ValidatePay(this,12,2)"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("CURRENCY_TYPE","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="currency" value="" size="5" maxlength="5" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'currencyDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'currency\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="currencyDesc" style="text-align:left;width:200px" class="fieldlabel"></span>'
		+ '</td></tr>'
	}
	else
	{
		JobHistoryContent += '<td class="plaintablecell" id="currency" nowrap><select class="inputbox" name="currency">'+BuildCurrencySelect("")+'</select></td></tr>'
	}

	JobHistoryContent += '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("JOB_PROFILE_7","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="supname" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("WORK_TELEPHONE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="wkphonenbr" value="" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("CURRENT_EMPLOYER","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><select class="inputbox" name="curemprflag">'+BuildYesNo("")+'</select></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("MAY_WE_CONTACT","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><select class="inputbox" name="cancallflag">'+BuildYesNo("")+'</select></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_1","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr1" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_2","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr2" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_3","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr3" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_4","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr4" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("CITY_OR_ADDR_5","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="city" value="" size="18" maxlength="18" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("HOME_ADDR_6","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="state" value="" size="2" maxlength="2" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'stateDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'state\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="stateDesc" style="text-align:left;width:200px" class="fieldlabel"></span>'
		+ '</td></tr>'
	}
	else
	{
		// PT 124510
		// + '<td class="plaintablecell" id="state" nowrap><select class="inputbox" name="state">'+BuildStateSelect("")+'</select></td></tr>'
		JobHistoryContent += '<td class="plaintablecell" id="state" nowrap><select class="inputbox" name="state">'+BuildStateSelect("")+'</select>'+uiRequiredIcon()+'</td></tr>'
	}

	JobHistoryContent += '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("HOME_ADDR_7","ESS")
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="zip" value="" size="10" maxlength="10" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldliteunderline" style="width:40%">'+getSeaPhrase("COUNTRY_ONLY","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="country" value="" size="2" maxlength="2" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'countryDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'country\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="countryDesc" style="text-align:left;width:200px" class="fieldlabel"></span>'
		+ '</td></tr>'
	}
	else
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap><select class="inputbox" name="country">'+DrawInstCtryCdSelect("")+'</select></td></tr>'
	}

	JobHistoryContent += '<tr><th>&nbsp;</th><td class="plaintablecell" style="text-align:left">'
	+ uiButton(getSeaPhrase("UPDATE","ESS"),"parent.ProcessJobHistory(\'A\');return false","margin-top:10px")
	+ uiButton(getSeaPhrase("CANCEL","ESS"),"parent.ClearDetailScreen();return false","margin-top:10px;margin-right:15px")
	+ '</td></tr></table>'
	+ '</form>'
	+ uiRequiredFooter()

	try {
		self.right.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DETAIL","ESS");
		self.right.document.getElementById("paneBody").innerHTML = JobHistoryContent;
		self.right.stylePage();
    	self.right.document.jobhistoryform.employer.focus();
	}
	catch(e) {}

	document.getElementById("right").style.visibility = "visible";

	// if this task has been launched as a related link, remove any processing message
	if (searchStr && typeof(parent.removeWaitAlert) == "function")
		parent.removeWaitAlert();

	HideListButtons();
	fitToScreen();
}

function JobHistoryClicked(Index, rowNbr)
{
	activateTableRow("jobhistoryTbl",rowNbr,self.left);

	jobRec = JobHistory[Index];

	JobHistoryContent = '<form name="jobhistoryform">'
	+ '<input class="inputbox" type="hidden" name="seqnbr" value="'+jobRec.seq_nbr+'">'
	+ '<input class="inputbox" type="hidden" name="fc" value="C">'
	+ '<table border="0" cellspacing="0" cellpadding="0" width="100%">'
	+ '<tr style="padding-top:5px"><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("EMPLOYER_NAME","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="employer" value="'+jobRec.employer_name+'" size="30" maxlength="30" onfocus="this.select()">'+uiRequiredIcon()+'</td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("START_DATE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="begdate" value="'+formatDME(jobRec.beg_date)+'" size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
	+ '<a href="" onclick="parent.DateSelect(\'begdate\');return false" onmouseover="window.status=\''+getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'+uiCalendarIcon()+'</a>'+uiDateFormatSpan()+'</td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("END_DATE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="enddate" value="'+formatDME(jobRec.end_date)+'" size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
	+ '<a href="" onclick="parent.DateSelect(\'enddate\');return false" onmouseover="window.status=\''+getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'+uiCalendarIcon()+'</a>'+uiDateFormatSpan()+'</td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("JOB_TITLE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="title" value="'+jobRec.title+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("RELATED_JOB_CODE","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="jobcode" value="'+jobRec.job_code+'" size="9" maxlength="9" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'jobcodeDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'jobcode\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="jobcodeDesc" style="text-align:left;width:200px" class="fieldlabel">'+jobRec.job_code_description+'</span>'
		+ '</td></tr>'
	}
	else
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap><select class="inputbox" name="jobcode">'+BuildJobCodeSelect(jobRec.job_code)+'</select></td></tr>'
	}

	JobHistoryContent += '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ANNUAL_PAY_START","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="begpay" value="'+((jobRec.beg_pay!=0)?jobRec.beg_pay:'')+'" size="12" maxlength="12" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ANNUAL_PAY_END","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="endpay" value="'+((jobRec.end_pay!=0)?jobRec.end_pay:'')+'" size="12" maxlength="12" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("CURRENCY_TYPE","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="currency" value="'+jobRec.currency_code+'" size="5" maxlength="5" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'currencyDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'currency\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="currencyDesc" style="text-align:left;width:200px" class="fieldlabel">'+jobRec.currency_description+'</span>'
		+ '</td></tr>'
	}
	else
	{
		JobHistoryContent += '<td class="plaintablecell" id="currency" nowrap><select class="inputbox" name="currency">'+BuildCurrencySelect(jobRec.currency_code)+'</select></td></tr>'
	}

	JobHistoryContent += '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("JOB_PROFILE_7","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="supname" value="'+jobRec.sup_name+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("WORK_TELEPHONE","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="wkphonenbr" value="'+jobRec.wk_phone_nbr+'" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("CURRENT_EMPLOYER","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><select class="inputbox" name="curemprflag">'+BuildYesNo(jobRec.cur_empr_flag)+'</select></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("MAY_WE_CONTACT","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><select class="inputbox" name="cancallflag">'+BuildYesNo(jobRec.can_call_flag)+'</select></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_1","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr1" value="'+jobRec.addr1+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_2","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr2" value="'+jobRec.addr2+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_3","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr3" value="'+jobRec.addr3+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("ADDR_4","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr4" value="'+jobRec.addr4+'" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("CITY_OR_ADDR_5","ESS")+'</th>'
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="city" value="'+jobRec.city+'" size="18" maxlength="18" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("HOME_ADDR_6","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="state" value="'+jobRec.state+'" size="2" maxlength="2" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'stateDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'state\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="stateDesc" style="text-align:left;width:200px" class="fieldlabel"></span>'
		+ '</td></tr>'
	}
	else
	{
		// PT 124510
		// + '<td class="plaintablecell" id="state" nowrap><select class="inputbox" name="state">'+BuildStateSelect(jobRec.state)+'</select></td></tr>'
		JobHistoryContent += '<td class="plaintablecell" id="state" nowrap><select class="inputbox" name="state">'+BuildStateSelect(jobRec.state)+'</select>'+uiRequiredIcon()+'</td></tr>'
	}

	JobHistoryContent += '<tr><th class="fieldlabelboldlite" style="width:40%">'+getSeaPhrase("HOME_ADDR_7","ESS")
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="zip" value="'+jobRec.zip+'" size="10" maxlength="10" onfocus="this.select()"></td></tr>'
	+ '<tr><th class="fieldlabelboldliteunderline" style="width:40%">'+getSeaPhrase("COUNTRY_ONLY","ESS")+'</th>'

	if (emssObjInstance.emssObj.filterSelect)
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="country" value="'+jobRec.country_country_code+'" size="2" maxlength="2" onfocus="this.select()" onkeyup="this.value=\'\';document.getElementById(\'countryDesc\').innerHTML=\'\';">'
		+ '<a href="javascript:parent.openDmeFieldFilter(\'country\')" style="margin-left:5px">'
		+ '<img align="top" src="/lawson/xhrnet/ui/images/ico_form_dropmenu.gif" border="0"></a>'
		+ '<span id="countryDesc" style="text-align:left;width:200px" class="fieldlabel">'+jobRec.country_country_desc+'</span>'
		+ '</td></tr>'
	}
	else
	{
		JobHistoryContent += '<td class="plaintablecell" nowrap><select class="inputbox" name="country">'+DrawInstCtryCdSelect(jobRec.country_country_code)+'</select></td></tr>'
	}

	JobHistoryContent += '<tr><th>&nbsp;</th><td class="plaintablecell" style="text-align:left">'
	+ uiButton(getSeaPhrase("UPDATE","ESS"),"parent.ProcessJobHistory(\'C\');return false","margin-top:10px")
	+ uiButton(getSeaPhrase("CANCEL","ESS"),"parent.ClearDetailScreen();return false","margin-top:10px;margin-right:15px")
	+ uiButton(getSeaPhrase("DELETE","ESS"),"parent.ProcessJobHistory(\'D\');return false","margin-top:10px")
	+ '</td></tr></table>'
	+ '</form>'
	+ uiRequiredFooter()

	try {
		self.right.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DETAIL","ESS");
		self.right.document.getElementById("paneBody").innerHTML = JobHistoryContent;
		self.right.stylePage();
    	self.right.document.jobhistoryform.employer.focus();
	}
	catch(e) {}

	document.getElementById("right").style.visibility = "visible";

	// if this task has been launched as a related link, remove any processing message
	if (searchStr && typeof(parent.removeWaitAlert) == "function")
		parent.removeWaitAlert();

	HideListButtons();
	fitToScreen();
}

function CloseJobHistory()
{
	parent.backToLinks();
}

function HideListButtons()
{
	try {
		self.left.document.getElementById("addbtn").style.visibility = "hidden";
		self.left.document.getElementById("closebtn").style.visibility = "hidden";
	}
	catch(e) {}
}

function ShowListButtons()
{
	try {
		self.left.document.getElementById("addbtn").style.visibility = "visible";
		self.left.document.getElementById("closebtn").style.visibility = "visible";
	}
	catch(e) {}
}

function ProcessJobHistory(fc)
{
	var jobForm = self.right.document.jobhistoryform;

	clearRequiredField(jobForm.employer);
	clearRequiredField(jobForm.begdate);
	clearRequiredField(jobForm.enddate);
	clearRequiredField(jobForm.begpay);
	clearRequiredField(jobForm.endpay);

	if (emssObjInstance.emssObj.filterSelect)
	{
		clearRequiredField(jobForm.currency);
		clearRequiredField(jobForm.state);
	}
	else
	{
		clearRequiredField(self.right.document.getElementById("currency"));
		clearRequiredField(self.right.document.getElementById("state"));
	}

   	if (NonSpace(jobForm.employer.value) == 0)
   	{
   		setRequiredField(jobForm.employer);
    	parent.seaAlert(getSeaPhrase("EMPLOYER_REQUIRED","ESS"));
	   	jobForm.employer.focus();
	   	jobForm.employer.select();
	   	return;
   	}

  	if ((NonSpace(jobForm.begdate.value) != 0) && (ValidDate(jobForm.begdate) == false))
   	{
   		setRequiredField(jobForm.begdate);
      	jobForm.begdate.focus();
       	jobForm.begdate.select();
      	return;
  	}

  	if ((NonSpace(jobForm.enddate.value) != 0) && (ValidDate(jobForm.enddate) == false))
   	{
   		setRequiredField(jobForm.enddate);
       	jobForm.enddate.focus();
       	jobForm.enddate.select();
       	return;
   	}

	if (NonSpace(jobForm.begpay.value) > 0)
	{
		if (ValidNumber(jobForm.begpay,12,2,true) == false)
		{
			setRequiredField(jobForm.begpay);
			parent.seaAlert(getSeaPhrase("INVALID_NO","ESS"));
       		jobForm.begpay.focus();
       		jobForm.begpay.select();
			return;
		}
		else if (Number(jobForm.begpay.value) < 0)
		{
			setRequiredField(jobForm.begpay);
			parent.seaAlert(getSeaPhrase("INIT_APP_3","ESS"));
       		jobForm.begpay.focus();
       		jobForm.begpay.select();
			return;
		}
	}

	if (NonSpace(jobForm.endpay.value) > 0)
	{
		if (ValidNumber(jobForm.endpay,12,2,true) == false)
		{
			setRequiredField(jobForm.endpay);
			parent.seaAlert(getSeaPhrase("INVALID_NO","ESS"));
       		jobForm.endpay.focus();
       		jobForm.endpay.select();
			return;
		}
		else if (Number(jobForm.endpay.value) < 0)
		{
			setRequiredField(jobForm.endpay);
			parent.seaAlert(getSeaPhrase("INIT_APP_3","ESS"));
       		jobForm.endpay.focus();
       		jobForm.endpay.select();
			return;
		}

	}

	if ((NonSpace(jobForm.begpay.value) > 0) && (NonSpace(jobForm.endpay.value) > 0) && (Number(jobForm.endpay.value) < Number(jobForm.begpay.value)))
	{
		setRequiredField(jobForm.begpay);
		parent.seaAlert(getSeaPhrase("INIT_APP_4","ESS"));
       	jobForm.endpay.focus();
       	jobForm.endpay.select();
       	return;
	}

	if (emssObjInstance.emssObj.filterSelect)
	{
		if ((NonSpace(jobForm.begpay.value) > 0 || NonSpace(jobForm.endpay.value) > 0)
		&& NonSpace(jobForm.currency.value) == 0)
		{
			setRequiredField(jobForm.currency);
		 	parent.seaAlert(getSeaPhrase("INIT_APP_5","ESS"));
			jobForm.currency.focus();
			return;
		}
	}
	else
	{
		if ((NonSpace(jobForm.begpay.value) > 0 || NonSpace(jobForm.endpay.value) > 0)
		&& jobForm.currency.selectedIndex == 0)
		{
			setRequiredField(self.right.document.getElementById("currency"));
		 	parent.seaAlert(getSeaPhrase("INIT_APP_5","ESS"));
			jobForm.currency.focus();
			return;
		}
	}

	if (emssObjInstance.emssObj.filterSelect)
	{
		if (NonSpace(jobForm.state.value) == 0 && NonSpace(jobForm.country.value) == 0)
		{
			setRequiredField(jobForm.state);
		 	parent.seaAlert(getSeaPhrase("STATE_PROVINCE","ESS"));
			jobForm.state.focus();
			return;
		}
	}
	else
	{
		if (jobForm.state.selectedIndex == 0 && jobForm.country.selectedIndex == 0)
		{
			setRequiredField(self.right.document.getElementById("state"));
		 	parent.seaAlert(getSeaPhrase("STATE_PROVINCE","ESS"));
			jobForm.state.focus();
			return;
		}
	}

  	if (jobForm.addr1.value == "")
		jobForm.addr1.value = " ";
   	if (jobForm.addr2.value == "")
	 	jobForm.addr2.value = " ";
   	if (jobForm.addr3.value == "")
	  	jobForm.addr3.value = " ";
    if (jobForm.addr4.value == "")
	  	jobForm.addr4.value = " ";
   	if (jobForm.city.value == "")
	 	jobForm.city.value = " ";
   	if (jobForm.zip.value == "")
	  	jobForm.zip.value = " ";
   	if (jobForm.title.value == "")
	  	jobForm.title.value = " ";
   	if (jobForm.supname.value == "")
	  	jobForm.supname.value = " ";
  	if (jobForm.begdate.value == "")
	  	jobForm.begdate.value = " ";
   	if (jobForm.enddate.value == "")
	  	jobForm.enddate.value = " ";
   	if (jobForm.begpay.value == "")
	  	jobForm.begpay.value = " ";
   	if (jobForm.endpay.value == "")
	   	jobForm.endpay.value = " ";
  	if (jobForm.wkphonenbr.value == "")
	  	jobForm.wkphonenbr.value = " ";

	jobForm.fc.value = (fc)?fc:jobForm.fc.value;

	if (searchStr) {
		parent.showWaitAlert(getSeaPhrase("UPDATING_APP_INFO","ESS"));
	}

   	var agsObj       = new AGSObject(authUser.prodline,"PA33.1");
    agsObj.event     = (jobForm.fc.value == "A")?"ADD":"CHANGE";
    agsObj.rtn       = "MESSAGE";
    agsObj.longNames = true;
    agsObj.tds       = false;
    agsObj.field     = "FC="+jobForm.fc.value
   		+ "&AJH-COMPANY=" + escape(parseInt(authUser.company,10),1)
       	+ "&AJH-APPLICANT=" + escape(parseInt(applicant,10),1)

   	if (jobForm.fc.value != "A") {
      	agsObj.field += "&AJH-SEQ-NBR=" + escape(parseInt(jobForm.seqnbr.value,10),1)
   	}

	if (jobForm.fc.value != "D") {
		agsObj.field += "&AJH-EMPLOYER-NAME=" + escape(jobForm.employer.value,1)
    		+ "&AJH-ADDR1=" + escape(jobForm.addr1.value,1)
    		+ "&AJH-ADDR2=" + escape(jobForm.addr2.value,1)
     		+ "&AJH-ADDR3=" + escape(jobForm.addr3.value,1)
           	+ "&AJH-ADDR4=" + escape(jobForm.addr4.value,1)
           	+ "&AJH-CITY=" + escape(jobForm.city.value,1)
	if (emssObjInstance.emssObj.filterSelect) {
		agsObj.field += "&AJH-STATE=" + escape(jobForm.state.value,1)
		+ "&AJH-COUNTRY-CODE=" + escape(jobForm.country.value,1)
		+ "&AJH-CURRENCY-CODE=" + escape(jobForm.currency.value,1)
		+ "&AJH-JOB-CODE=" + escape(jobForm.jobcode.value,1)
	} else {
    	agsObj.field += "&AJH-STATE=" + escape(jobForm.state[jobForm.state.selectedIndex].value,1)
    	+ "&AJH-COUNTRY-CODE=" + escape(jobForm.country[jobForm.country.selectedIndex].value,1)
    	+ "&AJH-CURRENCY-CODE=" + escape(jobForm.currency[jobForm.currency.selectedIndex].value,1)
    	+ "&AJH-JOB-CODE=" + escape(jobForm.jobcode[jobForm.jobcode.selectedIndex].value,1)
    }
    	agsObj.field += "&AJH-ZIP=" + escape(jobForm.zip.value,1)
    		+ "&AJH-BEG-DATE=" + ((NonSpace(jobForm.begdate.value) == 0) ? "00000000" : escape(formjsDate(jobForm.begdate.value),1))
            + "&AJH-END-DATE=" + ((NonSpace(jobForm.enddate.value) == 0) ? "00000000" : escape(formjsDate(jobForm.enddate.value),1))
            + "&AJH-TITLE=" + escape(jobForm.title.value,1)
            + "&AJH-BEG-PAY=" + ((isNaN(parseFloat(jobForm.begpay.value)) == true) ? escape(" ",1) : parseFloat(jobForm.begpay.value))
            + "&AJH-END-PAY=" + ((isNaN(parseFloat(jobForm.endpay.value)) == true) ? escape(" ",1) : parseFloat(jobForm.endpay.value))
            + "&AJH-SUP-NAME=" + escape(jobForm.supname.value,1)
            + "&AJH-WK-PHONE-NBR=" + escape(jobForm.wkphonenbr.value,1)
            + "&AJH-CUR-EMPR-FLAG=" + escape(jobForm.curemprflag[jobForm.curemprflag.selectedIndex].value,1)
            + "&AJH-CAN-CALL-FLAG=" + escape(jobForm.cancallflag[jobForm.cancallflag.selectedIndex].value,1)
	}

  	agsObj.func = "parent.DisplayMessage()";
   	AGS(agsObj,"jsreturn");
}

function ValidatePay(formObj, size, decimal)
{
	if (NonSpace(formObj.value) == 0)
	{
		formObj.value = "0";
	}

	if (ValidNumber(formObj, size, decimal, true) == false)
	{
		setRequiredField(formObj);
		parent.seaAlert(getSeaPhrase("INVALID_NO","ESS"));
		formObj.focus();
		formObj.select();
	}
	else
	{
		clearRequiredField(formObj);
	}
}

function ClearDetailScreen()
{
	deactivateTableRows("jobhistoryTbl",self.left);
	document.getElementById("right").style.visibility = "hidden";
	ShowListButtons();
}

function BuildJobCodeSelect(code)
{
	var jobcodeSelect = new Array();
	jobcodeSelect[0] = '<option value=" ">';

	for (var i=0; i<Jobcodes.length; i++)
	{
        jobcodeSelect[i+1] = '<option value="'+Jobcodes[i].job_code+'"';
		jobcodeSelect[i+1] += (code == Jobcodes[i].job_code)?' selected>':'>';
		jobcodeSelect[i+1] += Jobcodes[i].description;
	}
	return jobcodeSelect.join("");
}

function BuildCurrencySelect(code)
{
	var currencySelect = new Array();
	currencySelect[0] = '<option value=" ">';

	for (var i=0; i<Currencies.length; i++)
	{
        currencySelect[i+1] = '<option value="'+Currencies[i].currency_code+'"';
		currencySelect[i+1] += (code == Currencies[i].currency_code)?' selected>':'>';
		currencySelect[i+1] += Currencies[i].description;
	}
	return currencySelect.join("");
}

function BuildYesNo(value)
{
	var selectStr = '<option value="N" '
	selectStr += (value == "N")? 'selected>':'>';
	selectStr += getSeaPhrase("NO","ESS")
	selectStr += '<option value="Y" '
	selectStr += (value == "Y")? 'selected>':'>';
	selectStr += getSeaPhrase("YES","ESS")
	return selectStr;
}

function ReturnDate(dte)
{
	self.right.document.forms["jobhistoryform"].elements[date_fld_name].value = dte;
}

function UpdateComplete()
{
	parent.seaAlert(getSeaPhrase("UPDATE_COMPLETE","ESS"));
}

function DisplayMessage()
{
	// if this task has been launched as a related link, remove any processing message
	if (searchStr && typeof(parent.removeWaitAlert) == "function")
		parent.removeWaitAlert();

   	if (lawheader.gmsgnbr == "000") {
      	GoToListScreen(true);
   	}
   	else {
     	parent.seaAlert(self.lawheader.gmsg);
	}
}

/* Filter Select logic - start */
function performDmeFieldFilterOnChange(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{
		case "state": // state/province
		case "province":
			var filterForm = dmeFilter.getFilterForm();
			var selObj = filterForm.elements["filterField"];
			var filterField = selObj.options[selObj.selectedIndex].value;
			if ((filterField == "state") || (filterField == "province")) {

				stateProvFilter = filterField;
				filterForm.elements["filterBtn"].onclick();
			}
		break;
	}
}

function performDmeFieldFilterOnLoad(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{
		case "jobcode":
			dmeFilter.addFilterField("job-code", 9, getSeaPhrase("JOB_OPENINGS_6","ESS"), true);
			dmeFilter.addFilterField("description", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);
			filterDmeCall(dmeFilter,
				"jsreturn",
				"jobcode",
				"jbcset1",
				"job-code;description;",
				String(authUser.company),
				"active",
				null,
				dmeFilter.getNbrRecords(),
				null);
		break;
		case "currency":
			dmeFilter.addFilterField("currency-code", 5, getSeaPhrase("QUAL_16","ESS"), true);
			dmeFilter.addFilterField("description", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);
			filterDmeCall(dmeFilter,
				"jsreturn",
				"cucodes",
				"cucset1",
				"currency-code;description",
				"",
				null,
				null,
				dmeFilter.getNbrRecords(),
				null);
		break;
		case "state":
			dmeFilter.addFilterField("state", 2, getSeaPhrase("STATE_ONLY","ESS"), true);
			dmeFilter.addFilterField("province", 2, getSeaPhrase("PROVINCE","ESS"), true);
			dmeFilter.addFilterField("description", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);
			filterDmeCall(dmeFilter,
				"jsreturn",
				"prstate",
				"psaset1",
				"state;description",
				"",
				null,
				null,
				dmeFilter.getNbrRecords(),
				null);
		break;
		case "country":
			dmeFilter.addFilterField("country-code", 2, getSeaPhrase("COUNTRY_ONLY","ESS"), true);
			dmeFilter.addFilterField("country-desc", 30, getSeaPhrase("JOB_OPENINGS_2","ESS"), false);
			filterDmeCall(dmeFilter,
				"jsreturn",
				"instctrycd",
				"intset1",
				"country-code;country-desc",
				"",
				null,
				null,
				dmeFilter.getNbrRecords(),
				null);
		break;
		default: break;
	}
}

function performDmeFieldFilter(dmeFilter)
{
	switch (dmeFilter.getFieldNm().toLowerCase())
	{
		case "jobcode":
		filterDmeCall(dmeFilter,
			"jsreturn",
			"jobcode",
			"jbcset1",
			"job-code;description;",
			String(authUser.company),
			"active",
			dmeFilter.getSelectStr(),
			dmeFilter.getNbrRecords(),
			null);
		break;
		case "currency":
		filterDmeCall(dmeFilter,
			"jsreturn",
			"cucodes",
			"cucset1",
			"currency-code;description",
			"",
			null,
			dmeFilter.getSelectStr(),
			dmeFilter.getNbrRecords(),
			null);
		break;
		case "state":
		if (stateProvFilter == "state") {
			filterDmeCall(dmeFilter,
				"jsreturn",
				"prstate",
				"psaset1",
				"state;description",
				"",
				null,
				dmeFilter.getSelectStr(),
				dmeFilter.getNbrRecords(),
				null);
		} else {
			filterDmeCall(dmeFilter,
				"jsreturn",
				"prprovince",
				"ppvset1",
				"province;description",
				"",
				null,
				dmeFilter.getSelectStr(),
				dmeFilter.getNbrRecords(),
				null);
		}
		break;
		case "country":
		filterDmeCall(dmeFilter,
			"jsreturn",
			"instctrycd",
			"intset1",
			"country-code;country-desc",
			"",
			null,
			dmeFilter.getSelectStr(),
			dmeFilter.getNbrRecords(),
			null);
		break;
		default: break;
	}
}

function dmeFieldRecordSelected(recIndex, fieldNm)
{
	var selRec = self.jsreturn.record[recIndex];
	var appForm = self.right.document.jobhistoryform;

	switch(fieldNm.toLowerCase())
	{
		case "jobcode":
			appForm.jobcode.value = selRec.job_code;
			try { self.right.document.getElementById("jobcodeDesc").innerHTML = selRec.description; } catch(e) {}
			appForm.jobcode.focus();
			break;
		case "currency":
			appForm.currency.value = selRec.currency_code;
			try { self.right.document.getElementById("currencyDesc").innerHTML = selRec.description; } catch(e) {}
			appForm.currency.focus();
			break;
		case "state":
			if (stateProvFilter == "state") {
				appForm.state.value = selRec.state;
			} else {
				appForm.state.value = selRec.province;
			}
			try { self.right.document.getElementById("stateDesc").innerHTML = selRec.description; } catch(e) {}
			appForm.state.focus();
			break;
		case "country":
			appForm.country.value = selRec.country_code;
			try { self.right.document.getElementById("countryDesc").innerHTML = selRec.country_desc; } catch(e) {}
			appForm.country.focus();
			break;
		default:
			break;
	}
	try
	{
		filterWin.close();
	} catch(e) {}
}

function getDmeFieldElement(fieldNm)
{
	var appForm = self.right.document.jobhistoryform;
	var fld = [null, null];
	switch(fieldNm.toLowerCase())
	{
		case "jobcode":
			fld = [self.right, appForm.jobcode];
			break;
		case "currency":
			fld = [self.right, appForm.currency];
			break;
		case "state":
			fld = [self.right, appForm.state];
			break;
		case "country":
			fld = [self.right, appForm.country];
			break;
		default:
			break;
	}
	return fld;
}

function drawDmeFieldFilterContent(dmeFilter)
{
	var selectHtml = new Array();
	var dmeRecs = self.jsreturn.record;
	var nbrDmeRecs = dmeRecs.length;
	var fieldNm = dmeFilter.getFieldNm().toLowerCase();

	switch(fieldNm)
	{
		case "jobcode":
			var tmpObj;
			selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list">'
			selectHtml[0] += '<tr><th style="width:50%">'+getSeaPhrase("JOB_OPENINGS_6","ESS")+'</th>'
			selectHtml[0] += '<th style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'

			for (var i=0; i<nbrDmeRecs; i++)
			{
				tmpObj = dmeRecs[i];
				selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected('+i+',\''+fieldNm+'\');return false" class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
				selectHtml[i+1] += '<td style="padding-left:5px" nowrap>'
				selectHtml[i+1] += (tmpObj.job_code) ? tmpObj.job_code : '&nbsp;'
				selectHtml[i+1] += '</td><td style="padding-left:5px" nowrap>'
				selectHtml[i+1] += (tmpObj.description) ? tmpObj.description : '&nbsp;'
				selectHtml[i+1] += '</td></tr>'
			}

			if (nbrDmeRecs == 0)
			{
				selectHtml[1] = '<tr class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'
				selectHtml[1] += getSeaPhrase("NORECS","ESS");
				selectHtml[1] += '</td></tr>'
			}

			selectHtml[selectHtml.length] = '</table>'
		break;
		case "currency":
			var tmpObj;
			selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list">'
			selectHtml[0] += '<tr><th style="width:50%">'+getSeaPhrase("QUAL_16","ESS")+'</th>'
			selectHtml[0] += '<th style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'

			for (var i=0; i<nbrDmeRecs; i++)
			{
				tmpObj = dmeRecs[i];
				selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected('+i+',\''+fieldNm+'\');return false" class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
				selectHtml[i+1] += '<td style="padding-left:5px" nowrap>'
				selectHtml[i+1] += (tmpObj.currency_code) ? tmpObj.currency_code : '&nbsp;'
				selectHtml[i+1] += '</td><td style="padding-left:5px" nowrap>'
				selectHtml[i+1] += (tmpObj.description) ? tmpObj.description : '&nbsp;'
				selectHtml[i+1] += '</td></tr>'
			}

			if (nbrDmeRecs == 0)
			{
				selectHtml[1] = '<tr class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'
				selectHtml[1] += getSeaPhrase("NORECS","ESS");
				selectHtml[1] += '</td></tr>'
			}

			selectHtml[selectHtml.length] = '</table>'
		break;
		case "state":
			if (stateProvFilter == "state") {
				var tmpObj;
				selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list">'
				selectHtml[0] += '<tr><th style="width:50%">'+getSeaPhrase("STATE_ONLY","ESS")+'</th>'
				selectHtml[0] += '<th style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'

				for (var i=0; i<nbrDmeRecs; i++)
				{
					tmpObj = dmeRecs[i];
					selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected('+i+',\''+fieldNm+'\');return false" class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
					selectHtml[i+1] += '<td style="padding-left:5px" nowrap>'
					selectHtml[i+1] += (tmpObj.state) ? tmpObj.state : '&nbsp;'
					selectHtml[i+1] += '</td><td style="padding-left:5px" nowrap>'
					selectHtml[i+1] += (tmpObj.description) ? tmpObj.description : '&nbsp;'
					selectHtml[i+1] += '</td></tr>'
				}
			} else {
				var tmpObj;
				selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px">'
				selectHtml[0] += '<tr><th style="width:50%">'+getSeaPhrase("PROVINCE","ESS")+'</th>'
				selectHtml[0] += '<th style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'

				for (var i=0; i<nbrDmeRecs; i++)
				{
					tmpObj = dmeRecs[i];
					selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected('+i+',\''+fieldNm+'\');return false" class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
					selectHtml[i+1] += '<td style="padding-left:5px" nowrap>'
					selectHtml[i+1] += (tmpObj.province) ? tmpObj.province : '&nbsp;'
					selectHtml[i+1] += '</td><td style="padding-left:5px" nowrap>'
					selectHtml[i+1] += (tmpObj.description) ? tmpObj.description : '&nbsp;'
					selectHtml[i+1] += '</td></tr>'
				}
			}

			if (nbrDmeRecs == 0)
			{
				selectHtml[1] = '<tr class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'
				selectHtml[1] += getSeaPhrase("NORECS","ESS");
				selectHtml[1] += '</td></tr>'
			}

			selectHtml[selectHtml.length] = '</table>'
			break;
		case "country":
			var tmpObj;
			selectHtml[0] = '<table class="filterTable" border="0" cellspacing="0" cellpadding="0" width="100%;padding-left:5px;padding-right:5px" styler="list">'
			selectHtml[0] += '<tr><th style="width:50%">'+getSeaPhrase("COUNTRY_ONLY","ESS")+'</th>'
			selectHtml[0] += '<th style="width:50%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th></tr>'

			for (var i=0; i<nbrDmeRecs; i++)
			{
				tmpObj = dmeRecs[i];
				selectHtml[i+1] = '<tr onclick="dmeFieldRecordSelected('+i+',\''+fieldNm+'\');return false" class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
				selectHtml[i+1] += '<td style="padding-left:5px" nowrap>'
				selectHtml[i+1] += (tmpObj.country_code) ? tmpObj.country_code : '&nbsp;'
				selectHtml[i+1] += '</td><td style="padding-left:5px" nowrap>'
				selectHtml[i+1] += (tmpObj.country_desc) ? tmpObj.country_desc : '&nbsp;'
				selectHtml[i+1] += '</td></tr>'
			}

			if (nbrDmeRecs == 0)
			{
				selectHtml[1] = '<tr class="filterTableRow" onmouseover="filterTableRowMouseOver(this);" onmouseout="filterTableRowMouseOut(this);">'
				selectHtml[1] += '<td style="padding-left:5px" colspan="2" nowrap>'
				selectHtml[1] += getSeaPhrase("NORECS","ESS");
				selectHtml[1] += '</td></tr>'
			}

			selectHtml[selectHtml.length] = '</table>'
			break;
		default: break;
	}
	dmeFilter.getRecordElement().innerHTML = selectHtml.join("");
	try
	{
		if (typeof(parent.removeWaitAlert) != "undefined")
			parent.removeWaitAlert();
	} catch(e) {}
}

/* Filter Select logic - end */

function LoadJobHistory()
{
   	authenticate("frameNm='jsreturn'|funcNm='StartJobHistory()'|desiredEdit='EM'");
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
	{
		window.stylerWnd = findStyler(true);
	}

	if (!window.stylerWnd)
	{
		return;
	}

	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
	{
		window.styler = new window.stylerWnd.StylerEMSS();
	}
	else
	{
		window.styler = window.stylerWnd.styler;
	}

	var leftFrame = document.getElementById("left");
	var rightFrame = document.getElementById("right");
	var winHeight = 768;
	var winWidth = 1024;

	// resize the table frame to the screen dimensions
	if (document.body.clientHeight)
	{
		winHeight = document.body.clientHeight;
		winWidth = document.body.clientWidth;
	}
	else if (window.innerHeight)
	{
		winHeight = window.innerHeight;
		winWidth = window.innerWidth;
	}

	var contentHeightBorder;
	var contentHeight;	
	var contentLeftWidthBorder;
	var contentLeftWidth;	
	var contentRightWidthBorder;
	var contentRightWidth;		

	if (window.styler && window.styler.showInfor)
	{	
		contentLeftWidth = parseInt(winWidth*.50) - 12;
		contentLeftWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentLeftWidth + 7 : contentLeftWidth + 2;
		contentRightWidth = parseInt(winWidth*.50) - 12;
		contentRightWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentRightWidth + 7 : contentRightWidth + 2;						
		contentHeight = winHeight - 65;
		contentHeightBorder = contentHeight + 30;	
	}
	else if (window.styler && window.styler.showLDS)
	{
		contentLeftWidth = parseInt(winWidth*.50) - 23;
		contentLeftWidthBorder = parseInt(winWidth*.50) - 2;
		contentRightWidth = parseInt(winWidth*.50) - 23;
		contentRightWidthBorder = parseInt(winWidth*.50) - 2;				
		contentHeight = winHeight - 60;	
		contentHeightBorder = winHeight - 30;		
	}
	else
	{
		contentLeftWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winWidth*.50) - 17 : parseInt(winWidth*.50) - 12;
		contentLeftWidthBorder = contentLeftWidth;	
		contentRightWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winWidth*.50) - 17 : parseInt(winWidth*.50) - 12;
		contentRightWidthBorder = contentRightWidth;			
		contentHeight = winHeight - 65;
		contentHeightBorder = winHeight - 41;		
	}

	leftFrame.style.width = parseInt(winWidth*.50) + "px";
	leftFrame.style.height = winHeight + "px";
	try
	{
		if (self.left.onresize && self.left.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.left.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.left.document.getElementById("paneBorder").style.width = contentLeftWidthBorder + "px";
		self.left.document.getElementById("paneBodyBorder").style.width = contentLeftWidth + "px";
		self.left.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.left.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.left.document.getElementById("paneBody").style.width = contentLeftWidth + "px";
		self.left.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e)
	{}	
	rightFrame.style.left = parseInt(winWidth*.50) + "px";
	rightFrame.style.width = parseInt(winWidth*.50) + "px";
	rightFrame.style.height = winHeight + "px";
	try
	{
		if (self.right.onresize && self.right.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.right.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.right.document.getElementById("paneBorder").style.width = contentRightWidthBorder + "px";
		self.right.document.getElementById("paneBodyBorder").style.width = contentRightWidth + "px";
		self.right.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.right.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.right.document.getElementById("paneBody").style.width = contentRightWidth + "px";
		self.right.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e)
	{}	
}
</script>
</head>
<body style="overflow:hidden" onload="LoadJobHistory()" onresize="fitToScreen()">
	<iframe id="left" name="left" class="fullcontentframe" src="/lawson/xhrnet/ui/headerpane.htm" style="visibility:hidden;left:0%;position:absolute;top:0px;height:464px;width:375px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="right" name="right" class="fullcontentframe" src="/lawson/xhrnet/ui/headerpanelite.htm" style="visibility:hidden;left:375px;position:absolute;top:0px;height:464px;width:397px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/errmsg.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.02.00.29 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/jobhistory.htm,v 1.18.2.23 2012/06/29 17:12:02 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2012 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
