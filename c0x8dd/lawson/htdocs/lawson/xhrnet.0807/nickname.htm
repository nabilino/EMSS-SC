<html>
<head>
<title>Nickname</title>
<meta name="viewport" content="width=device-width" />
<META HTTP-EQUIV="Pragma" CONTENT="No-Cache">
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/empinfo.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var updatetype = "";
var EmpInfo = new Object();

function OpenNickName()
{
	authenticate("frameNm='jsreturn'|funcNm='GetEmployee()'|desiredEdit='EM'");
}

function GetEmployee()
{
	stylePage();
	showWaitAlert(getSeaPhrase("WAIT","ESS"));
	document.title = getSeaPhrase("NICKNAME","ESS");
	setTaskHeader("header",getSeaPhrase("NICKNAME","ESS"),"Personal");

	StoreDateRoutines();
	GetNickName();
}

function GetNickName()
{
	GetEmpInfo(authUser.prodline,authUser.company,authUser.employee,"employee",
		"nick-name","DrawNickNameScreen()");
}

function DrawNickNameScreen()
{
	var NickNameContent = '<form name="nicknameform">'
	+ '<table border="0" cellspacing="0" cellpadding="0" style="width:100%">'
	+ '<tr><td class="plaintablerowheaderborderbottom" style="width:40%;padding-top:5px">'+getSeaPhrase("NICKNAME","ESS")
	+ '<td class="plaintablecell" nowrap><input class="inputbox" type=text name="nickname" value="'
	+ fixQuote(EmpInfo.nick_name)
	+ '" size="30" maxlength="30" onfocus=this.select()></td></tr>'
	+ '<tr><td>&nbsp;</td><td class="plaintablecell">'
	+ uiButton(getSeaPhrase("UPDATE","ESS"),"parent.ProcessNickName();return false","margin-top:10px")
	+ uiButton(getSeaPhrase("CANCEL","ESS"),"parent.CancelNickName();return false","margin-top:10px;margin-left:5px")
	+ '</td></tr>'
	+ '</table>'
	+ '</form>'

	try
	{
		self.MAIN.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DETAILS","ESS");
		self.MAIN.document.getElementById("paneBody").innerHTML = NickNameContent;
		self.MAIN.stylePage();
		self.MAIN.setLayerSizes();
		document.getElementById("MAIN").style.visibility = "visible";
		self.MAIN.document.workphoneform.wkphonenbr.focus();
	}
	catch(e) {}
	removeWaitAlert();
	fitToScreen();
}

function CancelNickName()
{
	self.location = "/lawson/xhrnet/ui/logo.htm";
}

function ProcessNickName()
{
	var formObj = self.MAIN.document.nicknameform;
	
	for (var i=0; i<formObj.elements.length; i++)
	{
		if (NonSpace(formObj.elements[i].value) == 0)
		{
			formObj.elements[i].value = " ";
		}	
	}
	
	var agsObj 			= new AGSObject(authUser.prodline, "HR11.1");
	agsObj.event		= "CHANGE";
	agsObj.rtn 			= "MESSAGE";
	agsObj.longNames	= "ALL";
	agsObj.tds 			= false;
	agsObj.field 		= "FC=C"
		  				+ "&EFFECT-DATE=" + formjsDate(fmttoday)
	      				+ "&EMP-COMPANY=" + parseInt(authUser.company,10)
		  				+ "&EMP-EMPLOYEE=" + parseInt(authUser.employee,10)
		  				+ "&EMP-NICK-NAME=" + escape(formObj.elements["nickname"].value,1)
		  				+ "&XMIT-HREMP-BLOCK=1000000000"
		  				+ "&XMIT-REQDED=1"
	agsObj.func = "parent.DisplayMessage()";
	agsObj.debug = false;
	updatetype = "NCK";

	showWaitAlert(getSeaPhrase("HOME_ADDR_42","ESS"));

	for (var i=0; i<formObj.elements.length; i++)
	{
		if (NonSpace(formObj.elements[i].value) == 0)
		{
			formObj.elements[i].value = "";
		}	
	}

	AGS(agsObj,"jsreturn");
}

function DisplayMessage()
{
	removeWaitAlert();
	var msg = self.lawheader.gmsg;
	var msgnbr = parseInt(self.lawheader.gmsgnbr,10);

	if (msgnbr != 0)
	{
		if (msgnbr == 50 || msgnbr == 141)
		{
			msg = getSeaPhrase("REQUIRE_ADDITIONAL_INFO_CONTACT_HR","ESS");
		}
		seaAlert(msg);
	}
	else
	{
		msg = getSeaPhrase("CHANGE_COMPLETE_NO_CONTINUE","ESS");
		seaAlert(msg);

		showWaitAlert(getSeaPhrase("WAIT","ESS"));
		GetNickName();
	}
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
	{
		window.stylerWnd = findStyler(true);
	}

	if (!window.stylerWnd)
	{
		return;
	}

	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
	{
		window.styler = new window.stylerWnd.StylerEMSS();
	}
	else
	{
		window.styler = window.stylerWnd.styler;
	}

	var mainFrame = document.getElementById("MAIN");
	var winHeight = 768;
	var winWidth = 1024;

	// resize the table frame to the screen dimensions
	if (document.body.clientHeight)
	{
		winHeight = document.body.clientHeight;
		winWidth = document.body.clientWidth;
	}
	else if (window.innerHeight)
	{
		winHeight = window.innerHeight;
		winWidth = window.innerWidth;
	}

	var contentHeightBorder;
	var contentHeight;	
	var contentWidthBorder;
	var contentWidth;		

	if (window.styler && window.styler.showInfor)
	{	
		contentWidth = winWidth - 12;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 7 : contentWidth + 2;				
		contentHeight = winHeight - 65;
		contentHeightBorder = contentHeight + 30;	
	}
	else if (window.styler && window.styler.showLDS)
	{
		contentWidth =  winWidth - 23;
		contentWidthBorder =  winWidth - 2;		
		contentHeight = winHeight - 60;	
		contentHeightBorder = winHeight - 30;		
	}
	else
	{
		contentWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? winWidth - 17 :winWidth - 12;
		contentWidthBorder = contentWidth;		
		contentHeight = winHeight - 65;
		contentHeightBorder = winHeight - 41;		
	}

	mainFrame.style.width = winWidth + "px";
	mainFrame.style.height = winHeight + "px";
	try
	{
		if (self.MAIN.onresize && self.MAIN.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.MAIN.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.MAIN.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.MAIN.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e)
	{}	
}
</script>
</head>
<body style="overflow:hidden" onload="OpenNickName()" onresize="fitToScreen()">
	<iframe id="header" name="header" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="MAIN" name="MAIN" src="/lawson/xhrnet/ui/headerpane.htm" style="visibility:hidden;position:absolute;height:464px;left:0px;top:32px;width:400px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" src="/lawson/xhrnet/dot.htm" style="visibility:hidden;height:0px;width:0px;" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" src="/lawson/xhrnet/errmsg.htm" style="visibility:hidden;height:0px;width:0px;" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.02.00.29 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/Attic/nickname.htm,v 1.1.2.12 2012/06/29 17:12:06 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2012 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
