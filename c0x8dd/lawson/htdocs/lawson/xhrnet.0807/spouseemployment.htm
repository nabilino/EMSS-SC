<html>
<head>
<title>Spouse Employment</title>
<meta name="viewport" content="width=device-width" />
<META HTTP-EQUIV="Pragma" CONTENT="No-Cache">
<META HTTP-EQUIV="Expires" CONTENT="Mon, 01 Jan 1990 00:00:01 GMT">
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
function LoadSpouseEmployment()
{
	// Force the program to recall authen only if we haven't called authen before or if
	// we don't have the bookmarks.
	try
	{
	    if (top && top.authUser && !top.authUser.OfficeObject) {
			top.authUser = null;
		}
		if (opener && opener.top && opener.top.authUser && !opener.top.authUser.OfficeObject) {
			opener.top.authUser = null;
		}
	}
	catch(e) {}
	authenticate("frameNm='jsreturn'|funcNm='SpouseEmploymentContent()'|officeObjects=true|desiredEdit='EM'");
}
function SpouseEmploymentContent()
{
	stylePage();
	document.title = getSeaPhrase("CHG_EMP","ESS");

	// Set the task title.
	setTaskHeader("header",getSeaPhrase("CHG_EMP","ESS"),"LifeEvents");

	var strHtml = '<table id="spouseTbl" border="0" cellspacing="0" cellpadding="0">';
	strHtml += '<tr>';
	strHtml += '<td class="plaintableheadertallwhite">'+getSeaPhrase("MY_SPOUSE","ESS")+'</td>';
	strHtml += '</tr>';
	strHtml += '<tr style="height:10px"><td>&nbsp;</td></tr>';
	strHtml += '<tr>';
	strHtml += '<td class="plaintableheadertallwhite" style="padding-left:20px"><a href="" onclick="parent.ChangedEmployers();return false" onmouseover="window.status=\'\';return true" onmouseover="window.status=\'\';return true">'+getSeaPhrase("CHANGED_EMPLOYERS","ESS")+'</a></td>';
	strHtml += '</tr>';
	strHtml += '<tr>';
	strHtml += '<td class="plaintableheadertallwhite" style="padding-left:20px"><a href="" onclick="parent.IsUnemployed();return false" onmouseover="window.status=\'\';return true" onmouseout="window.status=\'\';return true">'+getSeaPhrase("UNEMPLOYED","ESS")+'</a></td>';
	strHtml += '</tr>';
	strHtml += '<tr>';
	strHtml += '<td class="plaintableheadertallwhite" style="padding-left:20px"><a href="" onclick="parent.IsEmployed();return false" onmouseover="window.status=\'\';return true" onmouseout="window.status=\'\';return true">'+getSeaPhrase("NOW_EMPLOYED","ESS")+'</a></td>';
	strHtml += '</tr>';
	strHtml += '</table>';

	try {
		self.left.document.getElementById("paneHeader").innerHTML = getSeaPhrase("CHANGE_OPTIONS","ESS");
		self.left.document.getElementById("paneBody").innerHTML = '<div style="padding-left:5px;padding-top:5px">'+strHtml+'</div>';
	}
	catch(e) {}

	self.left.stylePage();
	self.left.setLayerSizes();
	fitToScreen();
 	document.getElementById("left").style.visibility = "visible";
}
function ChangedEmployers()
{
   	if (self.right.location.href.indexOf("spouse.htm?type=0")==-1
   	&& self.right.location.href.indexOf("spouse.htm?type=2")==-1)
   	{
   		showWaitAlert(getSeaPhrase("GATHERING_INFO","ESS"));
   		self.right.location.replace("/lawson/xhrnet/spouse.htm?type=0");
    	document.getElementById("right").style.visibility = "visible";

    }
    else
    {
    	self.right.MAIN.document.spouseform.reset();
    	document.getElementById("right").style.visibility = "visible";
    	self.right.MAIN.document.spouseform.startdate.focus();
    }
}
function IsUnemployed()
{
   	if (self.right.location.href.indexOf("spouse.htm?type=1")==-1)
   	{
   		showWaitAlert(getSeaPhrase("GATHERING_INFO","ESS"));
   		self.right.location.replace("/lawson/xhrnet/spouse.htm?type=1");
    	document.getElementById("right").style.visibility = "visible";

    }
    else
    {
    	self.right.MAIN.document.spouseform.reset();
    	document.getElementById("right").style.visibility = "visible";
    	self.right.MAIN.document.spouseform.termdate.focus();
    }
}
function IsEmployed()
{
   	if (self.right.location.href.indexOf("spouse.htm?type=0")==-1
   	&& self.right.location.href.indexOf("spouse.htm?type=2")==-1)
   	{
   		showWaitAlert(getSeaPhrase("GATHERING_INFO","ESS"));
   		self.right.location.replace("/lawson/xhrnet/spouse.htm?type=2");
    	document.getElementById("right").style.visibility = "visible";

    }
    else
    {
    	self.right.MAIN.document.spouseform.reset();
    	document.getElementById("right").style.visibility = "visible";
    	self.right.MAIN.document.spouseform.startdate.focus();
    }
}
function OpenHelpDialog()
{
    try
    {
    	self.right.OpenHelpDialog.apply(this, arguments);
    }
    catch(e)
    {}
}
function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
	{
		window.stylerWnd = findStyler(true);
	}

	if (!window.stylerWnd)
	{
		return;
	}

	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
	{
		window.styler = new window.stylerWnd.StylerEMSS();
	}
	else
	{
		window.styler = window.stylerWnd.styler;
	}

	var leftFrame = document.getElementById("left");
	var rightFrame = document.getElementById("right");
	var relatedTaskFrame = document.getElementById("relatedtask");
	var fullRelatedTaskFrame = document.getElementById("fullrelatedtask");
	var winHeight = 768;
	var winWidth = 1024;

	// resize the table frame to the screen dimensions
	if (document.body.clientHeight)
	{
		winHeight = document.body.clientHeight;
		winWidth = document.body.clientWidth;
	}
	else if (window.innerHeight)
	{
		winHeight = window.innerHeight;
		winWidth = window.innerWidth;
	}

	var contentHeightBorder;
	var contentHeight;
	var contentWidthBorder;
	var contentWidth;	
	var contentLeftWidthBorder;
	var contentLeftWidth;	
	var contentRightWidthBorder;
	var contentRightWidth;

	if (window.styler && window.styler.showInfor)
	{	
		contentWidth = winWidth - 12;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 7 : contentWidth + 2;	
		contentLeftWidth = parseInt(winWidth*.50) - 12;
		contentLeftWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentLeftWidth + 7 : contentLeftWidth + 2;
		contentRightWidth = parseInt(winWidth*.50) - 12;
		contentRightWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentRightWidth + 7 : contentRightWidth + 2;						
		contentHeight = winHeight - 65;
		contentHeightBorder = contentHeight + 30;
	}
	else if (window.styler && window.styler.showLDS)
	{
		contentWidth = winWidth - 23;
		contentWidthBorder = winWidth - 2;	
		contentLeftWidth = parseInt(winWidth*.50) - 23;
		contentLeftWidthBorder = parseInt(winWidth*.50) - 2;
		contentRightWidth = parseInt(winWidth*.50) - 23;
		contentRightWidthBorder = parseInt(winWidth*.50) - 2;				
		contentHeight = winHeight - 60;	
		contentHeightBorder = winHeight - 30;
	}
	else
	{
		contentWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? winWidth - 17 : winWidth - 12;
		contentWidthBorder = contentWidth;	
		contentLeftWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winWidth*.50) - 17 : parseInt(winWidth*.50) - 12;
		contentLeftWidthBorder = contentLeftWidth;	
		contentRightWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winWidth*.50) - 17 : parseInt(winWidth*.50) - 12;
		contentRightWidthBorder = contentRightWidth;			
		contentHeight = winHeight - 65;
		contentHeightBorder = winHeight - 41;
	}
	
	setLayerSizes = function() {};
	
	leftFrame.style.width = parseInt(winWidth*.50) + "px";
	leftFrame.style.height = winHeight + "px";
	try
	{
		if (self.left.onresize && self.left.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.left.setLayerSizes = function() {};
			self.left.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.left.document.getElementById("paneBorder").style.width = contentLeftWidthBorder + "px";
		self.left.document.getElementById("paneBodyBorder").style.width = contentLeftWidth + "px";
		self.left.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.left.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.left.document.getElementById("paneBody").style.width = contentLeftWidth + "px";
		self.left.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e)
	{}	
	rightFrame.style.left = parseInt(winWidth*.50) + "px";
	rightFrame.style.width = parseInt(winWidth*.50) + "px";
	rightFrame.style.height = winHeight + "px";
	try
	{
		if (self.right.onresize && self.right.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.right.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.right.document.getElementById("paneBorder").style.width = contentRightWidthBorder + "px";
		self.right.document.getElementById("paneBodyBorder").style.width = contentRightWidth + "px";
		self.right.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.right.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.right.document.getElementById("paneBody").style.width = contentRightWidth + "px";
		self.right.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e)
	{}	
	relatedTaskFrame.style.width = parseInt(winWidth*.50) + "px";
	relatedTaskFrame.style.height = winHeight + "px";
	try
	{
		if (self.relatedtask.onresize && self.relatedtask.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.relatedtask.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.relatedtask.document.getElementById("paneBorder").style.width = contentLeftWidthBorder + "px";
		self.relatedtask.document.getElementById("paneBodyBorder").style.width = contentLeftWidth + "px";
		self.relatedtask.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.relatedtask.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.relatedtask.document.getElementById("paneBody").style.width = contentLeftWidth + "px";
		self.relatedtask.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e)
	{}	
	fullRelatedTaskFrame.style.width = winWidth + "px";
	fullRelatedTaskFrame.style.height = winHeight + "px";
	try
	{
		if (self.fullrelatedtask.onresize && self.fullrelatedtask.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.fullrelatedtask.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.fullrelatedtask.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.fullrelatedtask.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.fullrelatedtask.document.getElementById("paneBorder").style.height = contentHeightBorder + "px";
		self.fullrelatedtask.document.getElementById("paneBodyBorder").style.height = contentHeight + "px";
		self.fullrelatedtask.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.fullrelatedtask.document.getElementById("paneBody").style.height = contentHeight + "px";
	}
	catch(e)
	{}	
	if (window.styler && window.styler.textDir == "rtl")
	{
		leftFrame.style.left = "";
		leftFrame.style.right = "0px";		
		rightFrame.style.left = "0px";
	}
	else
	{	
		rightFrame.style.left = parseInt(winWidth*.50,10) + "px";
	}	
}
</script>
</head>
<body style="overflow:hidden" onload="fitToScreen();LoadSpouseEmployment()" onresize="fitToScreen()">
	<iframe id="header" name="header" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="left" name="left" class="contentframe" src="/lawson/xhrnet/ui/headerpane.htm" style="visibility:hidden;position:absolute;top:32px;height:555px;left:0%;width:49%"  frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="right" name="right" class="contentframe" src="/lawson/xhrnet/dot.htm" style="visibility:hidden;position:absolute;top:32px;height:555px;left:49%;width:51%" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="relatedtask" name="relatedtask" class="contentframe" style="position:absolute;top:32px;height:555px;left:0%;width:49%;visibility:hidden" src="/lawson/xhrnet/dot.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="fullrelatedtask" name="fullrelatedtask" class="contentframe"style="position:absolute;top:32px;height:555px;width=803px;left:0%;visibility:hidden" src="/lawson/xhrnet/dot.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.02.00.29 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/spouseemployment.htm,v 1.8.2.26 2012/06/29 17:11:59 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2012 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
