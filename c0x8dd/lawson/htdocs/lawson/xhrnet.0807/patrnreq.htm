<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>Required Training</title>
<meta name="viewport" content="width=device-width" />
<META HTTP-EQUIV="Pragma" CONTENT="No-Cache">
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var Temp;
var Courses = new Array();
var Prereqs = new Array();
var DateTypeFlds;
var sortProperty;

function OpenProgram()
{
	authenticate("frameNm='jsreturn'|funcNm='GetWaitingList()'|desiredEdit='EM'");
}

function GetWaitingList()
{
	stylePage();
	document.title = getSeaPhrase("REQUIRED_TRAINING","ESS");
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"));
	setTaskHeader("header",getSeaPhrase("REQUIRED_TRAINING","ESS"),"Training");
	StoreDateRoutines();

	WaitingFlag = new Array();

	var dmeObj = new DMEObject(authUser.prodline, "pamodopt");
	dmeObj.out = "JAVASCRIPT";
	dmeObj.field = "waitlist-flag";
	dmeObj.key = "1";
	dmeObj.max = "1";
	dmeObj.func = "GetWaitingListArray()";
	dmeObj.debug = false;
	DME(dmeObj, "jsreturn");
}

function GetWaitingListArray()
{
	for (var i=0; i<self.jsreturn.NbrRecs; i++)
	{
		y = WaitingFlag.length;
		WaitingFlag[y] = new Object();
		WaitingFlag[y] = self.jsreturn.record[i];
	}

	if (WaitingFlag.length == 0)
	{
		seaAlert(getSeaPhrase("TRAINING_SETUP_INCOMPLETE","ESS")+"\n"+getSeaPhrase("SETUP_TR00","ESS"));
		return;
	}
	else if (WaitingFlag[0] != "Y")
	{
		// treat spaces as equivalent to "No"
		WaitingFlag[0] = "N";
	}

	GetTrackType();
}

function GetTrackType()
{
	Temp = new Array();

	var dmeObj 	 	= new DMEObject(authUser.prodline,"paemptrack");
	dmeObj.out 	 	= "JAVASCRIPT";
	dmeObj.index 	= "etrset1";
	dmeObj.field 	= "type;type,xlt;track;track.desc;track-status,xlt;"
		+ "start-date;exp-cmplt-date;end-date;course.short-crs-desc";
	dmeObj.key   	= parseInt(authUser.company,10) +"="+ parseInt(authUser.employee,10);
	dmeObj.max 	 	= "600";
	dmeObj.func  	= "ArrayTrackType()";
	dmeObj.debug 	= false;
	dmeObj.exclude 	= "drills;sorts";
	dmeObj.sortasc 	= "type";
	DME(dmeObj, "jsreturn");
}

function ArrayTrackType()
{
	Temp = Temp.concat(self.jsreturn.record);

	if (self.jsreturn.Next)
	{
		self.jsreturn.location.replace(self.jsreturn.Next);
	}
	else
	{
		DisplayTable();
	}
}

function DisplayTable(onsort,property)
{
	// Required Training Main Frame
	var strHtml = '<table id="reqTrainingTbl" class="plaintableborder" cellspacing="0" cellpadding="0" width="100%" styler="list">'
	+ '<tr>'
	+ '<th class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="" onclick="parent.SortTable(\'type\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_BY_TYPE","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\'\';return true">'+getSeaPhrase("TYPE","ESS")+'</a></th>'
	+ '<th class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="" onclick="parent.SortTable(\'track\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_BY_NAME","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\'\';return true">'+getSeaPhrase("NAME","ESS")+'</a></th>'
	+ '<th class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="" onclick="parent.SortTable(\'track_status_xlt\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_BY_STATUS","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\'\';return true">'+getSeaPhrase("STATUS","ESS")+'</a></th>'
	+ '<th class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="" onclick="parent.SortTable(\'start_date\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_BY_START_DATE","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\'\';return true">'+getSeaPhrase("DATE_ASSIGNED","ESS")+'</a></th>'
	+ '<th class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="" onclick="parent.SortTable(\'exp_complt_date\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_BY_EXPECTED_END_DATE","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\'\';return true">'+getSeaPhrase("EXPECTED_COMPLETION","ESS")+'</a></th>'
	+ '<th class="plaintableheaderborder" style="text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="" onclick="parent.SortTable(\'end_date\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_BY_END_DATE","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\'\';return true">'+getSeaPhrase("COMPLETION_DATE","ESS")+'</a></th>'
	+ '</tr>'

	for(var i=0; i<Temp.length; i++)
	{
		//if (i%2 == 0) {
			strHtml += '<tr>'
		//}
		//else {
		//	strHtml += '<tr class="tablerowhighlight">'
		//}

		strHtml += '<td class="plaintablecellborder" style="width:15%;text-align:left" nowrap>'
		+ ((Temp[i].type_xlt)?Temp[i].type_xlt:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborder" style="width:15%;text-align:left" nowrap>'
		+ '<a href="javascript:parent.FillDetail('+i+')"'
		+ ' onmouseover="window.status=\''+getSeaPhrase("VIEW_DETAIL","ESS").replace(/\'/g,"\\'")+'\';return true"'
		+ ' onmouseout="window.status=\' \';return true">'
		+ ((Temp[i].track)?Temp[i].track:'&nbsp;')+'</a></td>'
		+ '<td class="plaintablecellborder" style="width:31%;text-align:center" nowrap>'
		+ ((Temp[i].track_status_xlt)?Temp[i].track_status_xlt:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborder" style="width:13%;text-align:center" nowrap>'
		+ ((formatDME(Temp[i].start_date))?formatDME(Temp[i].start_date):'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborder" style="width:13%;text-align:center" nowrap>'
		+ ((Temp[i].exp_cmplt_date)?Temp[i].exp_cmplt_date:'&nbsp;')+'</td>'
		+ '<td class="plaintablecellborder" style="width:13%;text-align:center" nowrap>'
		+ ((formatDME(Temp[i].end_date))?formatDME(Temp[i].end_date):'&nbsp;')+'</td>'
		+ '</tr>'
	}

	strHtml += '</table>'

	try {
		self.MAIN.document.getElementById("paneHeader").innerHTML = getSeaPhrase("COURSES","ESS");

		if (Temp.length > 0) {
			self.MAIN.document.getElementById("paneBody").innerHTML = strHtml;
		}
		else {
			self.MAIN.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold" style="text-align:left;padding-top:5px;padding-left:5px">'
			+ getSeaPhrase("TRAINING_NOT_REQUIRED","ESS")
			+ '</div>';
		}
	}
	catch(e) {}

	self.MAIN.stylePage();

	if (onsort) {
		self.MAIN.styleSortArrow("reqTrainingTbl", property);
	}
	else
	{
		self.MAIN.setLayerSizes();
	}

	document.getElementById("MAIN").style.visibility = "visible";

	// Required Training Course Detail Frame
	var dtlHtml = '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list">'
	+ '<tr>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:left;width:30%">'+getSeaPhrase("COURSE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:left;width:70%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th>\n'
	+ '</tr>\n'
	+ '</table>\n'

	try {
		self.DETAIL.document.getElementById("paneHeader").innerHTML = getSeaPhrase("DETAIL","ESS");
		self.DETAIL.document.getElementById("paneBody").innerHTML = dtlHtml;
		self.DETAIL.setLayerSizes();
		self.DETAIL.stylePage();
		document.getElementById("DETAIL").style.visibility = "visible";
	}
	catch(e) {}

	// Required Training Courses in Track Detail Frame
	var trkDtlHtml = '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list">'
	+ '<tr>\n'
	//+ '<td class="plaintableheaderborderlite" style="text-align:left;width:20%">'+getSeaPhrase("TRACK","ESS")+'</td>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:left;width:30%">'+getSeaPhrase("COURSE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:left;width:70%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th>\n'
	+ '</tr>\n'
	+ '</table>\n'

	try {
		self.TRKDETAIL.document.getElementById("paneHeader").innerHTML = getSeaPhrase("COURSES_IN_TRACK","ESS");
		self.TRKDETAIL.document.getElementById("paneBody").innerHTML = trkDtlHtml;
		self.TRKDETAIL.setLayerSizes();
		self.TRKDETAIL.stylePage();
		document.getElementById("TRKDETAIL").style.visibility = "hidden";
	}
	catch(e) {}

	// Required Training Prerequisites Detail Frame
	var prereqsHtml = '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list">'
	+ '<tr>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:20%">'+getSeaPhrase("PREREQUISITE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("TYPE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("REQUIRED","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("FROM_DATE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("LENGTH","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("WHEN_ELIGIBLE","ESS")+'</th>\n'
	+ '</tr>\n'
	+ '</table>\n'

	try {
		self.PREREQS.document.getElementById("paneHeader").innerHTML = getSeaPhrase("PREREQUISITES","ESS");
		self.PREREQS.document.getElementById("paneBody").innerHTML = prereqsHtml;
		self.PREREQS.setLayerSizes();
		self.PREREQS.stylePage();
		document.getElementById("PREREQS").style.visibility = "visible";
	}
	catch(e) {}

	removeWaitAlert();
	fitToScreen();
}

function FillDetail(n)
{
	showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"));
	activateTableRow("reqTrainingTbl",n,self.MAIN);

	if (Temp[n].type == "TR") {

		if (!Courses[Temp[n].track])
		{
			Courses[Temp[n].track] = new Array();
//PT 159966 DME to pacourse replaced with DME to patrackdtl
			var dmeObj		= new DMEObject(authUser.prodline,"patrackdtl");
			dmeObj.out 	 	= "JAVASCRIPT";
			dmeObj.debug 	= false;
			dmeObj.field 	= "course;track;course.short-crs-desc";
			dmeObj.key 		= escape(Temp[n].track, 1);
			dmeObj.max 		= "600";
			dmeObj.otmmax	= "1";
			dmeObj.func 	= "StoreCoursesByTrack(" + n + ")";
			DME(dmeObj,"jsreturn");
		}
		else
		{
			FillCoursesByTrack(n);
		}
	}
	else {
		document.getElementById("TRKDETAIL").style.visibility = "hidden";
		var dtlHtml = '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list">'
		+ '<tr>\n'
		+ '<th class="plaintableheaderborderlite" style="text-align:left;width:30%">'+getSeaPhrase("COURSE","ESS")+'</th>\n'
		+ '<th class="plaintableheaderborderlite" style="text-align:left;width:70%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th>\n'
		+ '</tr>\n'
		+ '<tr>\n'
		+ '<td class="plaintablecellborder" style="text-align:left;width:30%" nowrap><span id="dtlCourse">'+((Temp[n].track)?Temp[n].track:'&nbsp;')+'</span></td>\n'
		+ '<td class="plaintablecellborder" style="text-align:left;width:70%" nowrap><span id="dtlDescription">'+((Temp[n].course_short_crs_desc)?Temp[n].course_short_crs_desc:'&nbsp;')+'</span></td>\n'
		+ '</tr>\n'
		+ '</table>\n'
		self.DETAIL.document.getElementById("paneBody").innerHTML = dtlHtml;
		self.DETAIL.stylePage();
		document.getElementById("DETAIL").style.visibility = "visible";
		GetPrereqs(n);
		fitToScreen();
	}
}

function StoreCoursesByTrack(n)
{
	Courses[Temp[n].track] = Courses[Temp[n].track].concat(self.jsreturn.record);

	if (self.jsreturn.Next)
	{
		self.jsreturn.location.replace(self.jsreturn.Next);
	}
	else
	{
		FillCoursesByTrack(n);
	}
}

function FillCoursesByTrack(n)
{
	var tmpObj;
	var trkDtlHtml = '<table id="coursesByTrackTbl" class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list">'
	+ '<tr>\n'
	//+ '<td class="plaintableheaderborderlite" style="text-align:left;width:20%">'+getSeaPhrase("TRACK","ESS")+'</td>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:left;width:40%">'+getSeaPhrase("COURSE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:left;width:40%">'+getSeaPhrase("JOB_OPENINGS_2","ESS")+'</th>\n'
	+ '</tr>\n'

	for (var i=0; i<Courses[Temp[n].track].length; i++)
	{
		tmpObj = Courses[Temp[n].track][i];

		//if (i%2 == 0) {
			trkDtlHtml += '<tr>\n';
		//}
		//else {
		//	trkDtlHtml += '<tr class="tablerowhighlight">\n';
		//}

		//+ '<td class="plaintablecellborder" style="text-align:left;width:20%" nowrap>'+((tmpObj.track_track)?tmpObj.track_track:'&nbsp;')+'</td>\n'
		trkDtlHtml += '<td class="plaintablecellborder" style="text-align:left;width:30%" nowrap>'
		+ '<a href="javascript:parent.GetPrereqs('+n+','+i+')"'
		+ ' onmouseover="window.status=\''+getSeaPhrase("VIEW_DETAIL","ESS").replace(/\'/g,"\\'")+'\';return true"'
		+ ' onmouseout="window.status=\' \';return true">'
		+((tmpObj.course)?tmpObj.course:'&nbsp;')+'</a></td>\n'
		+ '<td class="plaintablecellborder" style="text-align:left;width:70%" nowrap>'+((tmpObj.course_short_crs_desc)?tmpObj.course_short_crs_desc:'&nbsp;')+'</td>\n'
		+ '</tr>\n'
	}

	trkDtlHtml += '</table>\n'

	try {
		self.TRKDETAIL.document.getElementById("paneBody").innerHTML = trkDtlHtml;
		self.TRKDETAIL.setLayerSizes();
		self.TRKDETAIL.stylePage();

	}
	catch(e) {}

	ClearPrereqDetail();
	document.getElementById("DETAIL").style.visibility = "hidden";
	document.getElementById("TRKDETAIL").style.visibility = "visible";
	removeWaitAlert();
	fitToScreen();
}

function GetPrereqs(n,i)
{
	if (typeof(i) != "undefined") {
		showWaitAlert(getSeaPhrase("PROCESSING_WAIT","ESS"));
	}

	i = (i)?i:0;

	if (Temp[n].type == "TR") {
		activateTableRow("coursesByTrackTbl",i,self.TRKDETAIL);
	}

	if ((Temp[n].type == "CS" && !Prereqs[Temp[n].track])
	|| (Temp[n].type == "TR" && !Prereqs[Courses[Temp[n].track][i].course]))
	{
		if (Temp[n].type == "CS") Prereqs[Temp[n].track] = new Array();
		if (Temp[n].type == "TR") Prereqs[Courses[Temp[n].track][i].course] = new Array();

		var dmeKey = (Temp[n].type=="CS")?Temp[n].track:Courses[Temp[n].track][i].course;

		var dmeObj 		= new DMEObject(authUser.prodline,"paprereq");
		dmeObj.out 		= "JAVASCRIPT";
		dmeObj.index 	= "rqsset1";
		dmeObj.field 	= "course;prereq-type;prereq-type,xlt;required-flag,xlt;"
			+ "prerequisite;date-type;date-type,xlt;date-measure;unit-type;"
			+ "end-date;unit-type,xlt"
		dmeObj.key   	= dmeKey+"=";
		dmeObj.max 		= "600";
		dmeObj.debug 	= false;
		dmeObj.func  	= "StorePrereqs("+n+","+i+")";
		DME(dmeObj, "jsreturn");
	}
	else {
		FillPrereqDetail(n,i);
	}
}

function StorePrereqs(n,i)
{
	if (Temp[n].type == "CS") {
		Prereqs[Temp[n].track] = Prereqs[Temp[n].track].concat(self.jsreturn.record);
	}

	if (Temp[n].type == "TR") {
		Prereqs[Courses[Temp[n].track][i].course] = Prereqs[Courses[Temp[n].track][i].course].concat(self.jsreturn.record);
	}

	if (self.jsreturn.Next)
	{
		self.jsreturn.location.replace(self.jsreturn.Next);
	}
	else
	{
		if ((Temp[n].type == "CS" && Prereqs[Temp[n].track].length > 0)
		|| (Temp[n].type == "TR" && Prereqs[Courses[Temp[n].track][i].course].length > 0))
		{
			GetDateTypeFlds(n,i);
		}
		else {
			FillPrereqDetail(n,i);
		}
	}
}

function GetDateTypeFlds(n,i)
{
	if (!DateTypeFlds)
	{
		DateTypeFlds = new Array();

		var dmeObj 		= new DMEObject(authUser.prodline, "employee");
		dmeObj.out 		= "JAVASCRIPT";
		dmeObj.index	= "empset1";
		dmeObj.debug 	= false;
		dmeObj.key		= parseInt(authUser.company,10) +"="+ parseInt(authUser.employee,10);
		dmeObj.field	= "date-hired;adj-hire-date;annivers-date;paemployee.senior-date";
		dmeObj.func		= "StoreDateTypeFlds("+n+","+i+")";
		dmeObj.max		= "1";
		DME(dmeObj, "jsreturn");
	}
	else
	{
		FillPrereqDetail(n,i);
	}
}

function StoreDateTypeFlds(n,i)
{
	DateTypeFlds = self.jsreturn.record;
	FillPrereqDetail(n,i);
}

function ClearPrereqDetail()
{
	var prereqsHtml = '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list">'
	+ '<tr>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:20%">'+getSeaPhrase("PREREQUISITE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("TYPE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("REQUIRED","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("FROM_DATE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("LENGTH","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("WHEN_ELIGIBLE","ESS")+'</th>\n'
	+ '</tr>\n'
	+ '</table>\n'

	try {
		self.PREREQS.document.getElementById("paneBody").innerHTML = prereqsHtml;
		self.PREREQS.stylePage();
	}
	catch(e) {}
	fitToScreen();
}

function FillPrereqDetail(n,i)
{
	var lengthExists = false;
	var whenEligible = "";
	var tmpObj;

	var prereqsHtml = '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" width="100%" styler="list">'
	+ '<tr>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:20%">'+getSeaPhrase("PREREQUISITE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("TYPE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("REQUIRED","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("FROM_DATE","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("LENGTH","ESS")+'</th>\n'
	+ '<th class="plaintableheaderborderlite" style="text-align:center;width:16%">'+getSeaPhrase("WHEN_ELIGIBLE","ESS")+'</th>\n'
	+ '</tr>\n'

	var prArray = (Temp[n].type=="CS")?Prereqs[Temp[n].track]:Prereqs[Courses[Temp[n].track][i].course];

	for (var i=0; i<prArray.length; i++)
	{
		var tmpObj = prArray[i];
		lengthExists = (NonSpace(tmpObj.date_measure) > 0 || NonSpace(tmpObj.unit_type_xlt) > 0)?true:false;
		whenEligible = calcEligibleDate(tmpObj);

		//if (i%2 == 0) {
			prereqsHtml += '<tr>\n';
		//}
		//else {
		//	prereqsHtml += '<tr class="tablerowhighlight">\n';
		//}

		prereqsHtml += '<td class="plaintablecellborder" style="text-align:left;width:20%" nowrap>'+((tmpObj.prerequisite)?tmpObj.prerequisite:'&nbsp;')+'</td>\n'
		+ '<td class="plaintablecellborder" style="text-align:left;width:16%" nowrap>'+((tmpObj.prereq_type_xlt)?tmpObj.prereq_type_xlt:'&nbsp;')+'</td>\n'
		+ '<td class="plaintablecellborder" style="text-align:center;width:16%" nowrap>'+((tmpObj.required_flag_xlt)?tmpObj.required_flag_xlt:'&nbsp;')+'</td>\n'
		+ '<td class="plaintablecellborder" style="text-align:center;width:16%" nowrap>'+((tmpObj.date_type_xlt)?tmpObj.date_type_xlt:'&nbsp;')+'</td>\n'
		+ '<td class="plaintablecellborder" style="text-align:left;width:16%" nowrap>'+((lengthExists)?tmpObj.date_measure+' '+tmpObj.unit_type_xlt:'&nbsp;')+'</td>\n'
		+ '<td class="plaintablecellborder" style="text-align:center;width:16%" nowrap>'+((whenEligible)?whenEligible:'&nbsp;')+'</td>\n'
		+ '</tr>\n'
	}

	prereqsHtml += '</table>\n'

	try {
		self.PREREQS.document.getElementById("paneHeader").innerHTML = getSeaPhrase("PREREQUISITES","ESS");
		if (prArray.length > 0) {
			self.PREREQS.document.getElementById("paneBody").innerHTML = prereqsHtml;
			self.PREREQS.stylePage();
		}
		else {
			self.PREREQS.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold" style="text-align:left;padding-top:5px;padding-left:5px">'
			+ getSeaPhrase("NO_PREREQS","ESS")
			+ '</div>'
			self.PREREQS.stylePage();
		}
		self.PREREQS.setLayerSizes();
		document.getElementById("PREREQS").style.visibility = "visible";

	}
	catch(e) {}
	removeWaitAlert();
	fitToScreen();
}

function calcEligibleDate(tmpObj)
{
	var fromDate = "";
	year = "";
	month = "";
	day = "";

	if (tmpObj.date_type == "HI")
		fromDate = DateTypeFlds[0].date_hired;
	else if (tmpObj.date_type == "AJ")
		fromDate = DateTypeFlds[0].adj_hire_date;
	else if(tmpObj.date_type == "AN")
		fromDate = DateTypeFlds[0].annivers_date;
	else if(tmpObj.date_type == "SN")
		fromDate = DateTypeFlds[0].paemployee_senior_date;
	else
		fromDate = 0;

	if (fromDate == 0) {
		return(getSeaPhrase("NA_SHORT","ESS"))
	}
	else {
		fromDate = formjsDate(formatDME(fromDate));
		year = parseInt(fromDate.substring(0,4),10);
		month = parseInt(fromDate.substring(4,6),10);
		day = parseInt(fromDate.substring(6,8),10);

		if (tmpObj.unit_type == "Y")
		{
			year = year + parseInt(tmpObj.date_measure,10);
			addMonthDay();
		}
		else if (tmpObj.unit_type == "M")
		{
			day = day + (parseInt(tmpObj.date_measure,10)*30);
			addMonthDay();
		}
		else if (tmpObj.unit_type == "D")
		{
			day = day + parseInt(tmpObj.date_measure,10);
			addMonthDay();
		}
		else if (!tmpObj.unit_type)
		{
			return(getSeaPhrase("NA_SHORT","ESS"));
		}

		year = year + "";
		month = month + "";
		day = day + "";

		if (month.length < 2) month = "0" + month;
		if (day.length < 2) day = "0" + day;

		fromDate = year + month + day;
		fromDate = checkCurrentDate(fromDate);
		return(fromDate);
	}
}

function addMonthDay()
{
	found = false;

	while (!found)
	{
		if (month == 1 || month == 3 || month == 5 || month == 7
		|| month == 8 || month == 10 || month == 12) {

			if (month == 12 && day > 31) {
				day = day-31;
				year++;
				month = 1;
			}
			else if (day > 31) {
				day = day-31;
				month++;
			}
			else {
				found=true;
			}
		}
		if (month == 4 || month == 6 || month == 9 || month == 11) {

			if(day > 30) {
				day = day-30;
				month++;
			}
			else {
				found = true;
			}
		}
		if (month == 2) {

			if(((year%4 == 0) && (year%100 != 0)) || (year%400 == 0)) {

				if(day > 29) {
					day = day-29;
					month++;
				}
				else {
					found = true;
				}
			}
			else
			{
				if (day > 28) {
					day = day-28;
					month++;
				}
				else {
					found = true;
				}
			}
		}
	}
}

function checkCurrentDate(dte)
{
	if (fmttoday >= dte)
		dte = getSeaPhrase("CURRENT","ESS");
	else
		dte = FormatDte4(dte);

	return(dte);
}

function sortByProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortProperty == "start_date" || sortProperty == "end_date" || sortProperty == "exp_complt_date")
	{
		name1 = formjsDate(formatDME(name1));
		name2 = formjsDate(formatDME(name2));
	}
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function SortTable(property)
{
	sortProperty = property;
	Temp.sort(sortByProperty);
	DisplayTable(true,property);
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
	{
		window.stylerWnd = findStyler(true);
	}

	if (!window.stylerWnd)
	{
		return;
	}

	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
	{
		window.styler = new window.stylerWnd.StylerEMSS();
	}
	else
	{
		window.styler = window.stylerWnd.styler;
	}

	var mainFrame = document.getElementById("MAIN");
	var detailFrame = document.getElementById("DETAIL");
	var trkDetailFrame = document.getElementById("TRKDETAIL");
	var prereqsFrame = document.getElementById("PREREQS");
	var winHeight = 768;
	var winWidth = 1024;

	// resize the table frame to the screen dimensions
	if (document.body.clientHeight)
	{
		winHeight = document.body.clientHeight;
		winWidth = document.body.clientWidth;
	}
	else if (window.innerHeight)
	{
		winHeight = window.innerHeight;
		winWidth = window.innerWidth;
	}

	var contentWidth;
	var contentWidthBorder;
	var contentLeftWidth;
	var contentLeftWidthBorder;
	var contentRightWidth;
	var contentRightWidthBorder;
	var contentTopHeightBorder;
	var contentTopHeight;
	var contentBottomHeightBorder;
	var contentBottomHeight;	

	if (window.styler && window.styler.showInfor)
	{			
		contentWidth = winWidth - 12;
		contentWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentWidth + 7 : contentWidth + 2;	
		contentLeftWidth = parseInt(winWidth*.50,10) - 12;
		contentLeftWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentLeftWidth + 7 : contentLeftWidth + 2;
		contentRightWidth = parseInt(winWidth*.50,10) - 12;
		contentRightWidthBorder = (navigator.appName.indexOf("Microsoft") >= 0) ? contentRightWidth + 7 : contentRightWidth + 2;			
		contentTopHeight = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winHeight*.60,10) - 65 : parseInt(winHeight*.60,10) - 65;
		contentTopHeightBorder = contentTopHeight + 30;
		contentBottomHeight = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winHeight*.40,10) - 35 : parseInt(winHeight*.40,10) - 35;
		contentBottomHeightBorder = contentBottomHeight + 30;		
	}
	else if (window.styler && window.styler.showLDS)
	{
		contentWidth = winWidth - 23;
		contentWidthBorder = winWidth - 2;	
		contentLeftWidth =  parseInt(winWidth*.50,10) - 23;
		contentLeftWidthBorder =  parseInt(winWidth*.50,10) - 2;
		contentRightWidth =  parseInt(winWidth*.50,10) - 23;
		contentRightWidthBorder =  parseInt(winWidth*.50,10) - 2;		
		contentTopHeight = parseInt(winHeight*.60,10) - 65;	
		contentTopHeightBorder = parseInt(winHeight*.60,10) - 5;
		contentBottomHeight = parseInt(winHeight*.40,10) - 35;	
		contentBottomHeightBorder = parseInt(winHeight*.40,10) - 5;		
	}
	else
	{
		contentWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? winWidth - 17 : winWidth - 12;
		contentWidthBorder = contentWidth;	
		contentLeftWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winWidth*.50,10) - 17 : parseInt(winWidth*.50,10) - 12;
		contentLeftWidthBorder = contentLeftWidth;
		contentRightWidth = (navigator.appName.indexOf("Microsoft") >= 0) ? parseInt(winWidth*.50,10) - 17 : parseInt(winWidth*.50,10) - 12;
		contentRightWidthBorder = contentRightWidth;		
		contentTopHeight = parseInt(winHeight*.60,10) - 65;
		contentTopHeightBorder = parseInt(winHeight*.60,10) - 42;
		contentBottomHeight = parseInt(winHeight*.40,10) - 35;
		contentBottomHeightBorder = parseInt(winHeight*.40,10) - 12;			
	}

	mainFrame.style.width = winWidth + "px";
	mainFrame.style.height = parseInt(winHeight*.60,10) + "px";
	try
	{
		if (self.MAIN.onresize && self.MAIN.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.MAIN.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.MAIN.document.getElementById("paneBorder").style.width = contentWidthBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBorder").style.height = contentTopHeightBorder + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.height = contentTopHeight + "px";
		self.MAIN.document.getElementById("paneBody").style.width = contentWidth + "px";
		self.MAIN.document.getElementById("paneBody").style.height = contentTopHeight + "px";
	}
	catch(e)
	{}
	detailFrame.style.top = parseInt(winHeight*.60,10) + "px";
	detailFrame.style.left = "0px";	
	detailFrame.style.width = parseInt(winWidth*.50,10) + "px";
	detailFrame.style.height = parseInt(winHeight*.40,10) + "px";	
	try
	{
		if (self.DETAIL.onresize && self.DETAIL.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.DETAIL.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.DETAIL.document.getElementById("paneBorder").style.width = contentLeftWidthBorder + "px";
		self.DETAIL.document.getElementById("paneBodyBorder").style.width = contentLeftWidth + "px";
		self.DETAIL.document.getElementById("paneBorder").style.height = contentBottomHeightBorder + "px";
		self.DETAIL.document.getElementById("paneBodyBorder").style.height = contentBottomHeight + "px";
		self.DETAIL.document.getElementById("paneBody").style.width = contentLeftWidth + "px";
		self.DETAIL.document.getElementById("paneBody").style.height = contentBottomHeight + "px";
	}
	catch(e)
	{}	
	trkDetailFrame.style.top = parseInt(winHeight*.60,10) + "px";
	trkDetailFrame.style.left = "0px";
	trkDetailFrame.style.width = parseInt(winWidth*.50,10) + "px";
	trkDetailFrame.style.height = parseInt(winHeight*.40,10) + "px";	
	try
	{
		if (self.TRKDETAIL.onresize && self.TRKDETAIL.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.TRKDETAIL.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.TRKDETAIL.document.getElementById("paneBorder").style.width = contentLeftWidthBorder + "px";
		self.TRKDETAIL.document.getElementById("paneBodyBorder").style.width = contentLeftWidth + "px";
		self.TRKDETAIL.document.getElementById("paneBorder").style.height = contentBottomHeightBorder + "px";
		self.TRKDETAIL.document.getElementById("paneBodyBorder").style.height = contentBottomHeight + "px";
		self.TRKDETAIL.document.getElementById("paneBody").style.width = contentLeftWidth + "px";
		self.TRKDETAIL.document.getElementById("paneBody").style.height = contentBottomHeight + "px";
	}
	catch(e)
	{}	
	prereqsFrame.style.top = parseInt(winHeight*.60,10) + "px";
	prereqsFrame.style.width = parseInt(winWidth*.50,10) + "px";
	prereqsFrame.style.height = parseInt(winHeight*.40,10) + "px";	
	try
	{
		if (self.PREREQS.onresize && self.PREREQS.onresize.toString().indexOf("setLayerSizes") >= 0)
		{
			self.PREREQS.onresize = null;
		}			
	}
	catch(e)
	{}
	try
	{
		self.PREREQS.document.getElementById("paneBorder").style.width = contentRightWidthBorder + "px";
		self.PREREQS.document.getElementById("paneBodyBorder").style.width = contentRightWidth + "px";
		self.PREREQS.document.getElementById("paneBorder").style.height = contentBottomHeightBorder + "px";
		self.PREREQS.document.getElementById("paneBodyBorder").style.height = contentBottomHeight + "px";
		self.PREREQS.document.getElementById("paneBody").style.width = contentRightWidth + "px";
		self.PREREQS.document.getElementById("paneBody").style.height = contentBottomHeight + "px";
	}
	catch(e)
	{}	
	if (window.styler && window.styler.textDir == "rtl")
	{
		detailFrame.style.left = "";
		detailFrame.style.right = "0px";	
		trkDetailFrame.style.left = "";
		trkDetailFrame.style.right = "0px";
		prereqsFrame.style.left = "0px";
	}
	else
	{
		prereqsFrame.style.left = parseInt(winWidth*.50,10) + "px";
	}	
}
</script>
</head>
<body style="overflow:hidden" onload="OpenProgram()" onresize="fitToScreen()">
	<iframe id="header" name="header" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="MAIN" name="MAIN" style="visibility:hidden;position:absolute;height:294px;width:803px;left:0px;top:32px" src="/lawson/xhrnet/ui/headerpane.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="DETAIL" name="DETAIL" style="visibility:hidden;position:absolute;height:170px;width:326px;left:0px;top:326px" src="/lawson/xhrnet/ui/headerpanelite.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="TRKDETAIL" name="TRKDETAIL" style="visibility:hidden;position:absolute;height:170px;width:326px;left:0px;top:326px" src="/lawson/xhrnet/ui/headerpanelite.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="PREREQS" name="PREREQS" style="visibility:hidden;position:absolute;height:170px;width:477px;left:326px;top:326px" src="/lawson/xhrnet/ui/headerpanelite.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/errmsg.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.02.00.29 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/patrnreq.htm,v 1.12.2.24 2012/06/29 17:12:00 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2012 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
