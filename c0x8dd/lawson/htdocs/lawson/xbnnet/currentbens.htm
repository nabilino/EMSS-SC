<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=IE8">
<meta charset="utf-8">
<title>Current Benefits</title>
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script>
function initProgram()
{
	setWinTitle(getSeaPhrase("CURBEN_22","BEN"));
	parent.startProcessing(getSeaPhrase("PROCESSING_WAIT","ESS"), startProgram);
}
function startProgram()
{
	var bod = '';
	var bod2 = '';
	parent.Fcost = 0;
	var totEmpCost = 0;
	var totCompCost = 0;
	var totEmpPercent = 0;
	var totCheckDedCost = 0;
	var head = '<br/><table cellspacing="0" cellpadding="0" border="0" style="width:100%;margin-left:auto;margin-right:auto" role="presentation"><tr><td class="plaintablecell">';
	if (parent.rule_type == "N" && parent.CurrentBens.length > 0)
		head += getSeaPhrase("CURBEN_1","BEN")+' '+getSeaPhrase("CURBEN_2","BEN")
	else
		head += getSeaPhrase("CURBEN_3","BEN")+' '+((parent.CurrentBenDate.indexOf("/") == -1) ? parent.FormatDte4(parent.CurrentBenDate) : parent.CurrentBenDate)+'.';
	head += ' ' + parent.costdivisor;
	head += '</td></tr></table><br/>';
	parent.InitSummaryTotals();
	for (var i=1; i<parent.CurrentBens.length; i++)
	{
		var YourCost = 0;
		var PreAft = "";
		if (parent.CurrentBens[i][13] == "P")
			PreAft = getSeaPhrase("PRE_TAX","BEN");
		if (parent.CurrentBens[i][13] == "B")
			PreAft = getSeaPhrase("BOTH","BEN");
		if (parent.CurrentBens[i][13] == "A")
			PreAft = getSeaPhrase("AFTER_TAX","BEN");
		var empcst1 = 0;
		var empcst2 = 0;
		var checkdedcst = 0;
		var flxcnt = 0;
		if (parent.CurrentBens[i][21] != "")
			flxcnt = parseFloat(parent.CurrentBens[i][21]);
		// Default after-tax cost is BEN-EMP-AFT-CONT field.
		if (parent.CurrentBens[i][19] != "")
			empcst2 = parseFloat(parent.CurrentBens[i][19]);			
		// PT 150518. Use the BEN-BOND-DED-AMT field for RS plans if the cost divisor is not annual.
		// If an annual cost divisor is used, the annual employee cost should be stored in the BEN-EMP-AFT-CONT field.
		if ((parent.CurrentBens[i][13] == "A" || parent.CurrentBens[i][13] == "B") && (parent.CurrentBens[i][1] == "RS" || parent.CurrentBens[i][1] == "SP"))
		{
			if (parent.BenefitRules[6] == "P" && parent.CurrentBens[i][26] != "")
				empcst2 = parseFloat(parent.CurrentBens[i][26]);
		}
		// Default pre-tax cost is BEN-EMP-PRE-CONT field.	
		if (parent.CurrentBens[i][18] != "")
			empcst1 = parseFloat(parent.CurrentBens[i][18]);
		// PT 150518. Use the BEN-BOND-DED-AMT field for RS plans if the cost divisor is not annual.
		// If an annual cost divisor is used, the annual employee cost should be stored in the BEN-EMP-PRE-CONT field.
		if ((parent.CurrentBens[i][13] == "P" || parent.CurrentBens[i][13] == "B") && (parent.CurrentBens[i][1] == "RS" || parent.CurrentBens[i][1] == "SP"))
		{
			if (parent.BenefitRules[6] == "P" && parent.CurrentBens[i][26] != "")
				empcst1 = parseFloat(parent.CurrentBens[i][26]);
		}
		YourCost = empcst1 + empcst2;
		if (YourCost == 0)
			YourCost = "";
		else
		{
			if (parent.CurrentBens[i][11] != "P")
			{
				// PT96844 - If this is a record type 6 plan (spending account) with a flat amount, use the BEN-BOND-DED-AMT as the employee cost, 
				// since this could have been a mid-year enrollment.
				// PT 150518. Do not use BEN-BOND-DED-AMT if cost divisor is annual.
				if (parent.CurrentBens[i][22] == "06" && parent.BenefitRules[6] == "P" && parent.CurrentBens[i][26] != "")
					YourCost = parent.CurrentBens[i][26];
				totEmpCost += parseFloat(YourCost);
				// Pre-tax amount contributions
				if (parent.CurrentBens[i][13] == "P" || parent.CurrentBens[i][13] == "B")
				{
					if (parseFloat(empcst1) < 0)
						parent.EmpNegPreTaxTotal += parseFloat(Math.abs(empcst1));
					else
					{
						if (parent.CurrentBens[i][39] == "Y")
							parent.EmpPreTaxFlexTotal += parseFloat(empcst1);
						parent.EmpPreTaxTotal += parseFloat(empcst1);
					}
				}
				// After-tax amount contributions
				if (parent.CurrentBens[i][13] == "A" || parent.CurrentBens[i][13] == "B")
					parent.EmpAfterTaxTotal += parseFloat(empcst2);
			}
			else
			{
				totEmpPercent += parseFloat(YourCost);
				// Pre-tax percent contributions
				if (parent.CurrentBens[i][13] == "P" || parent.CurrentBens[i][13] == "B")
					parent.EmpPreTaxPercentTotal += parseFloat(empcst1);
				// After-tax percent contributions
				if (parent.CurrentBens[i][13] == "A" || parent.CurrentBens[i][13] == "B")
					parent.EmpAfterTaxPercentTotal += parseFloat(empcst2);
			}
			YourCost = parent.formatCont(YourCost);
		}
		if (typeof(parent.CurrentBens[i][46]) != "undefined" && typeof(parent.CurrentBens[i][47]) != "undefined")
		{
			if (!isNaN(Number(parent.CurrentBens[i][46])))
				checkdedcst += Number(parent.CurrentBens[i][46]);
			if (!isNaN(Number(parent.CurrentBens[i][47])))	
				checkdedcst += Number(parent.CurrentBens[i][47]);			
		}
		bod += '<tr><td class="plaintablecellborder" nowrap>&nbsp;' + parent.CurrentBens[i][5] + '&nbsp;</td>'
		+ '<td class="plaintablecellborder" nowrap>&nbsp;'
		+ ((parent.CurrentBens[i][3].indexOf("/") == -1) ? parent.FormatDte4(parent.CurrentBens[i][3]) : parent.CurrentBens[i][3])
		+ '&nbsp;</td>';
		if (parent.CurrentBens[i][22] == "01")
			bod += '<td class="plaintablecellborderright" nowrap>&nbsp;' + parent.CurrentBens[i][23] + '&nbsp;</td>';
		else if (parent.CurrentBens[i][22] == "02")
		{
			if (parent.CurrentBens[i][31] == "E")
			{
				bod += '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+getSeaPhrase("EMPLOYEE","BEN")
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>';
			}
			else if (parent.CurrentBens[i][31] == "S")
			{
				bod += '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+getSeaPhrase("SPOUSE","BEN")
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>';
			}
			else if (parent.CurrentBens[i][31] == "D")
			{
				bod += '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+getSeaPhrase("DEPENDENT","BEN")
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>';
			}
			else if (parent.CurrentBens[i][31] == "B" || parent.CurrentBens[i][31] == "C" || parent.CurrentBens[i][31] == "A")
			{
				var covLbl = "&nbsp;";
				if (parent.CurrentBens[i][31]=="B")
					covLbl = getSeaPhrase("SPOUSE","BEN");
				else if (parent.CurrentBens[i][31]=="C")
					covLbl = getSeaPhrase("DOM_PARTNER","BEN");
				else if (parent.CurrentBens[i][31]=="A")
					covLbl = getSeaPhrase("SPOUSE_OR_PARTNER","BEN");
				bod += '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+covLbl
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+getSeaPhrase("DEPENDENT","BEN")
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][24])+'</td>';
			}
			else if (parent.CurrentBens[i][31] == "P")
			{
				bod += '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+getSeaPhrase("DOM_PARTNER","BEN")
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>';
			}
			else if (parent.CurrentBens[i][31] == "O")
			{
				bod += '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+getSeaPhrase("SPOUSE_OR_PARTNER","BEN")
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>';
			}
			else if (parent.CurrentBens[i][31] == "R")
			{
				bod += '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
				+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td></tr>'
				+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;'+getSeaPhrase("PARTNER_DEPS","BEN")
				+ '&nbsp;&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>';
			}				
			else if (parent.CurrentBens[i][31] == "")
				bod += '<td class="plaintablecellborderright" nowrap>&nbsp;'+parent.formatCont(parent.CurrentBens[i][8])+'</td>';
		}
		else if (parent.CurrentBens[i][22] == "03" || parent.CurrentBens[i][22] == "13")
			bod += '<td class="plaintablecellborderright" nowrap>&nbsp;' + parent.formatCont(parent.CurrentBens[i][8]) + '&nbsp;</td>';
		else if (parent.CurrentBens[i][22] == "04")
			bod += '<td class="plaintablecellborderright" nowrap>&nbsp;' + parent.formatCont(parent.CurrentBens[i][8]) + '&nbsp;</td>';
		else if (parent.CurrentBens[i][22] == "05")
		{	
			bod += '<td class="plaintablecellborderright" nowrap>&nbsp;' +  getSeaPhrase("%_OF_SAL","BEN",[parent.CurrentBens[i][20]]);
			if (!isNaN(parseFloat(parent.formatCont(parent.CurrentBens[i][8]))))
				bod += '<br/>' + parent.formatCont(parent.CurrentBens[i][8]);
			bod += '&nbsp;</td>';
		}	
		else if (parent.CurrentBens[i][22] == "06")
		{
			if (parent.CurrentBens[i][11] == "P")
			{
				bod += '<td class="plaintablecellborderright" nowrap>&nbsp;';
				if (!isNaN(parseFloat(parent.formatCont(parent.CurrentBens[i][27]))))
					bod += parent.formatCont(parent.CurrentBens[i][27]) + ' ' + getSeaPhrase("PERCENT_OF_TOTAL","BEN");
			}
			else
			{
				bod += '<td class="plaintablecellborderright" nowrap>&nbsp;';
				if (!isNaN(parseFloat(parent.formatCont(parent.CurrentBens[i][27]))))
					bod += parent.formatCont(parent.CurrentBens[i][27]) + ' ' + getSeaPhrase("PER_YEAR","BEN");
			}
			bod += '&nbsp;</td>';
		}
		else if (parent.CurrentBens[i][22] == "07")
		{
			bod += '<td class="plaintablecellborderright" nowrap>&nbsp;';
			if (!isNaN(parseFloat(parent.CurrentBens[i][30])))
				bod += parent.CurrentBens[i][30]+ ' ' + getSeaPhrase("HOURS","BEN");
			bod += '&nbsp;</td>';	
		}
		else if (parent.CurrentBens[i][22] == "08" || parent.CurrentBens[i][22] == "09")
		{
			if (parent.CurrentBens[i][11] == "P")
			{
				bod += '<td class="plaintablecellborderright" nowrap>&nbsp;';
				if (!isNaN(parseFloat(parent.formatCont(parent.CurrentBens[i][27]))))
					bod += parent.formatCont(parent.CurrentBens[i][27]) + ' ' + getSeaPhrase("PERCENT_OF_TOTAL","BEN");
			}
			else
			{
				bod += '<td class="plaintablecellborderright" nowrap>&nbsp;';
				if (!isNaN(parseFloat(parent.formatCont(parent.CurrentBens[i][27]))))
					bod += parent.formatCont(parent.CurrentBens[i][27]) + ' ' + getSeaPhrase("PER_YEAR","BEN");
			}
			bod += '&nbsp;</td>';
		}
		else if (parent.CurrentBens[i][22] == "10" || parent.CurrentBens[i][22] == "11")
			bod += '<td class="plaintablecellborderright">&nbsp;</td>';
		else if (parent.CurrentBens[i][22] == "12")
		{	
			if ((parent.CurrentBens[i][1] == "HL" || parent.CurrentBens[i][1] == "DN") && parent.CurrentBens[i][48] == "Y")
				bod += '<td class="plaintablecellborderright">&nbsp;'+getSeaPhrase("CURBEN_26","BEN")+'&nbsp;</td>';
			else
				bod += '<td class="plaintablecellborderright">&nbsp;</td>';
		}
		if (checkdedcst != 0)
		{
			bod += '<td class="plaintablecellborderright">&nbsp;' + parent.formatCont(checkdedcst) + '&nbsp;</td>';
			totCheckDedCost += checkdedcst;
		}
		else
			bod += '<td class="plaintablecellborder" nowrap>&nbsp;</td>';
		if (parent.CurrentBens[i][21] != 0 && parent.CurrentBens[i][21] != "")
		{
			bod += '<td class="plaintablecellborderright">&nbsp;' + parent.formatCont(parent.CurrentBens[i][21]) + '&nbsp;</td>';
			parent.Fcost += parseFloat(flxcnt);
		}
		else
			bod += '<td class="plaintablecellborder" nowrap>&nbsp;</td>';
		// Add spacer column for display
		//bod += '<td class="plaintablecellborder" style="width:'+parent.TableSpacer+';text-align:center" nowrap>&nbsp;</td>';
		if (parent.CurrentBens[i][13] == "B")
		{
			if (empcst1 != 0)
			{
				bod += '<td class="plaintablecellborderright" nowrap>&nbsp;' + parent.formatCont(empcst1);
				if (parent.CurrentBens[i][11] == "P")
					bod += getSeaPhrase("PER","BEN");
				bod += '&nbsp;</td><td class="plaintablecellborder" nowrap>&nbsp;' + getSeaPhrase("PRE_TAX","BEN") + '&nbsp;</td>';
			}
			if (empcst2 != 0)
			{
				if (empcst1 != 0)
				{
					bod += '<td class="plaintablecellborderright">&nbsp;</td></tr>'
					+ '<tr><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
					+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
					+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborderright" nowrap>&nbsp;' + parent.formatCont(empcst2);
					if (parent.CurrentBens[i][11] == "P")
						bod += getSeaPhrase("PER","BEN");
					bod += '&nbsp;</td><td class="plaintablecellborder" nowrap>&nbsp;' + getSeaPhrase("AFTER_TAX","BEN") + '&nbsp;</td>';
				}
				else
				{
					bod += '<td class="plaintablecellborderright" nowrap>&nbsp;' + parent.formatCont(empcst2);
					if (parent.CurrentBens[i][11] == "P")
						bod += getSeaPhrase("PER","BEN");
					bod += '&nbsp;</td><td class="plaintablecellborder" nowrap>&nbsp;' + getSeaPhrase("AFTER_TAX","BEN") + '&nbsp;</td>';					
				}
			}
		}
		else
		{
			bod += '<td class="plaintablecellborderright" nowrap>&nbsp;' + YourCost;
			if (parent.CurrentBens[i][11] == "P" && YourCost != "")
				bod += getSeaPhrase("PER","BEN");
			bod += '&nbsp;</td>';
			if (YourCost != "")
				bod += '<td class="plaintablecellborder" nowrap>&nbsp;' + PreAft;
			else
				bod += '<td class="plaintablecellborder" nowrap>&nbsp;';
			bod += '&nbsp;</td>';
		}
		if (parent.CurrentBens[i][22] != "08" && parent.CurrentBens[i][22] != "09")
		{
			bod += '<td class="plaintablecellborderright">&nbsp;' + parent.formatCont(parent.CurrentBens[i][12]) + '&nbsp;</td>';
			if (parent.CurrentBens[i][12] != "" && parent.CurrentBens[i][12] != null && parent.CurrentBens[i][11] != "P")
			{
				totCompCost += parent.unFormat(parent.formatCont(parent.CurrentBens[i][12]));
				parent.CompanyTotal += parseFloat(parent.CurrentBens[i][12]);
			}
		}
		else
			bod += '<td class="plaintablecellborderright">&nbsp;</td>';
		if (parent.CurrentDeps[i])
		{
			bod += '</tr><tr><td class="plaintablecellborder" nowrap>';
			for (var x=0; x<parent.CurrentDeps[i][1].length; x++)
			{
				if (parent.CurrentDeps[i][1][x].label_name_1)
				{
					if (x > 0)
						bod += '<br/>';
					bod += ' &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+parent.CurrentDeps[i][1][x].label_name_1;
				}
			}
			bod += '</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
			+ '<td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td><td class="plaintablecellborder">&nbsp;</td>'
			+ '<td class="plaintablecellborderright" nowrap>&nbsp;</td>';
		}
		bod += '</tr>';
	}
	head += '<table class="plaintableborder" border="0" cellspacing="0" cellpadding="0" style="width:100%;margin-left:auto;margin-right:auto" styler="list" summary="'+getSeaPhrase("TSUM_10","BEN")+'">'
	+ '<caption class="offscreen">'+getSeaPhrase("TCAP_9","BEN")+'</caption>'
	+ '<tr><th scope="col" class="plaintableheaderborder" style="text-align:center" nowrap>'+getSeaPhrase("PLAN","BEN")+'</th>'
	+ '<th scope="col" class="plaintableheaderborder" style="text-align:center" nowrap>'+getSeaPhrase("START_DATE","BEN")+'</th>'
	+ '<th scope="col" class="plaintableheaderborder" style="text-align:center" nowrap>'+getSeaPhrase("COVERAGE","BEN")+'</th>';
	if (parseFloat(totCheckDedCost) != 0)
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center">'+getSeaPhrase("CURBEN_36","BEN")+'</th>';
	else
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center">&nbsp;</th>';		
	if (parseFloat(parent.Fcost) != 0)
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center">'+getSeaPhrase("FLEX_CR","BEN")+'</th>';
	else
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center">&nbsp;</th>';
	// Add spacer column for display
	//head += '<th scope="col" class="plaintableheaderborder" style="width:'+parent.TableSpacer+';text-align:center">&nbsp;</th>';
	if (parseFloat(totEmpCost) != 0)
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center" colspan="2">'+getSeaPhrase("YOUR_COST","BEN")+'</th>';
	else
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center" colspan="2">&nbsp;</th>';
	if (parseFloat(totCompCost) != 0)
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center">'+getSeaPhrase("CO_COST","BEN")+'</th>';
	else
		head += '<th scope="col" class="plaintableheaderborder" style="text-align:center">&nbsp;</th>';
	head += '</tr>';
	bod += '</table>';
	bod2 += '<br/>'+parent.GetSummaryTable();
	if (parent.rule_type == "N" && parent.CurrentBens.length > 0)
	{
	}
	else
	{
		bod2 += '<p class="textAlignRight">'
		+ uiButton(getSeaPhrase("CONTINUE","BEN"),"continueClicked();return false","margin-right:5px;margin-top:10px")
		+ uiButton(getSeaPhrase("PREVIOUS","BEN"), "backClicked();return false", "margin-right:5px;margin-top:10px")
		+ uiButton(getSeaPhrase("EXIT","BEN"),"parent.quitEnroll(self.location.href);return false","margin-right:5px;margin-top:10px",null,'aria-haspopup="true"')
		+ '</p>';
	}
	document.getElementById("paneBody").innerHTML = '<div style="padding:0px">' + head + bod + bod2 + '</div>';
	document.getElementById("paneHeader").innerHTML = getSeaPhrase("CURBEN_22","BEN");
	stylePage();
	document.body.style.visibility = "visible";
	parent.stopProcessing(getSeaPhrase("CNT_UPD_FRM","SEA",[getWinTitle()]));
	parent.fitToScreen();
}
function backClicked()
{
	parent.document.getElementById("main").src=parent.LastDoc[parent.currentdoc];
	parent.currentdoc--;
}
function continueClicked()
{
	if (parent.LastDoc[parent.LastDoc.length-1] != parent.baseurl+"currentbens.htm")
		parent.LastDoc[parent.LastDoc.length]=parent.baseurl+"currentbens.htm";
	parent.currentdoc = parent.LastDoc.length-1;
	parent.keepcheck2();
}
</script>
</head>
<body onload="setLayerSizes();initProgram()" style="visibility:hidden">
<div id="paneBorder" class="paneborder">
	<table id="paneTable" border="0" height="100%" width="100%" cellpadding="0" cellspacing="0" role="presentation">
	<tr><td style="height:16px">
		<div id="paneHeader" class="paneheader" role="heading" aria-level="2">&nbsp;</div>
	</td></tr>
	<tr><td>
		<div id="paneBodyBorder" class="panebodyborder" styler="groupbox"><div id="paneBody" class="panebody" tabindex="0"></div></div>
	</td></tr>
	</table>
</div>
</body>
</html>
<!-- Version: 8-)@(#)@10.00.05.00.12 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xbnnet/currentbens.htm,v 1.20.2.49 2014/02/25 22:49:14 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2014 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
