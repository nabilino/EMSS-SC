<head>
<title>Spouse Employment</title>
<META HTTP-EQUIV="Pragma" CONTENT="No-Cache">
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/transaction.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/statesuscan.js"></script>
<script src="/lawson/xhrnet/instctrycdselect.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script>
var pgmType = (window.location.search)?unescape(window.location.search):"";
var SpouseForm = new Object();
var prm = 0;

if (pgmType)
{
	switch(getVarFromString("type",pgmType))
	{
		case "0":	prm = 0; break; // spouse changed employers
		case "1":	prm = 1; break; // spouse is no longer employed
		case "2":	prm = 2; break; // spouse is now employed
	}
}

function OpenSpouse()
{
	// Check if a parent or opener document has already done an authenticate,
	// otherwise go get the webuser info.
	if (parent && typeof(parent.authUser) != "undefined" && parent.authUser != null)
	{
		authUser = parent.authUser;
		if (typeof(parent.EmpInfo) != "undefined" && parent.EmpInfo != null)
			EmpInfo = parent.EmpInfo;
		try {
			profileHandler.setLoganenvVars();
		}
		catch(e) {}
	}
	else if (opener && typeof(opener.authUser) != "undefined" && opener.authUser != null)
	{
		authUser = opener.authUser;
		if (typeof(opener.EmpInfo) != "undefined" && opener.EmpInfo != null)
			EmpInfo = opener.EmpInfo;
		try {
			profileHandler.setLoganenvVars();
		}
		catch(e) {}
	}
	else if (typeof(authUser) == "undefined" || authUser == null)
	{
		authenticate("frameNm='jsreturn'|funcNm='GetCountryCodes()'|officeObjects=true|desiredEdit='EM'");
		return;
	}

	GrabStates('GetCountryCodes()');
}

function GetCountryCodes()
{
	document.title = parent.getSeaPhrase("DEP_43","ESS");
	StoreDateRoutines();
	GetInstCtryCdSelect(authUser.prodline,"DrawSpouseScreen()");
}

function DrawSpouseScreen()
{
	var SpouseContent = '<form name="spouseform">'

    if (prm == 1) // Spouse is no longer employed
	{
		SpouseContent += '<table border="0" cellspacing="0" cellpadding="0">'
		+ '<tr style="padding-top:5px"><td align="left" class="fieldlabelbold">'
		+ parent.getSeaPhrase("SPOUSE_TERMINATION_DATE","ESS")
		+ '</td><td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="termdate" value=""'
		+ ' size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
		+ '<a href=javascript:parent.DateSelect("termdate")'
		+ ' onmouseover="window.status=\''+parent.getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
		+ ' onmouseout="window.status=\'\';return true">'
		+ uiCalendarIcon()+'</a>'+uiRequiredIcon()+'<br/>'
		+ uiDateFormatSpan2()
    	+ '</td></tr>'
		+ '<tr><td align="left" class="fieldlabelbold" style="padding-top:10px">'
		+ parent.getSeaPhrase("FORMER_INSURANCE_STOP_DATE","ESS")
		+ '</td><td class="plaintablecell">'
		+ '<input class="inputbox" type="text" name="datecover" value=""'
		+ ' size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
		+ '<a href=javascript:parent.DateSelect("datecover")'
		+ ' onmouseover="window.status=\''+parent.getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
		+ ' onmouseout="window.status=\'\';return true">'
		+ uiCalendarIcon()+'</a><br/>'
		+ uiDateFormatSpan2()
    	+ '</td></tr>'
  	}
	else // Spouse has employment
	{
		SpouseContent += '<table border="0" cellspacing="0" cellpadding="0">'
		+ '<tr style="padding-top:5px"><td class="fieldlabelbold" style="width:45%">'
		+ parent.getSeaPhrase("NEW_JOB_START_DATE","ESS")
		+ '</td><td class="plaintablecell" nowrap>'
		+ '<input class="inputbox" type="text" name="startdate" value=""'
		+ ' size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
		+ '<a href=javascript:parent.DateSelect("startdate")'
		+ ' onmouseover="window.status=\''+parent.getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
		+ ' onmouseout="window.status=\'\';return true">'
		+ uiCalendarIcon()+'</a>'+uiRequiredIcon()+'<br/>'
		+ uiDateFormatSpan2()
    	+ '</td></tr>'
    	+ '<tr><td class="fieldlabelbold" style="text-align:left;padding:15px" colspan="3">'
    	+ parent.getSeaPhrase("NEW_HEALTH_COVERAGE","ESS")
    	+'</td></tr>'
		+ '<tr><td class="fieldlabelbold" style="width:45%">'
		+ parent.getSeaPhrase("COVERAGE_START_DATE","ESS")
		+ '</td><td class="plaintablecell">'
		+ '<input class="inputbox" type="text" name="covbegin" value=""'
		+ ' size="10" maxlength="10" onfocus="this.select()" onchange="parent.ValidateDate(this)">'
		+ '<a href=javascript:parent.DateSelect("covbegin")'
		+ ' onmouseover="window.status=\''+parent.getSeaPhrase("DISPLAY_CAL","ESS").replace(/\'/g,"\\'")+'\';return true"'
		+ ' onmouseout="window.status=\'\';return true">'
		+ uiCalendarIcon()+'</a><br/>'
		+ uiDateFormatSpan2()
    	+ '</td></tr>'
		+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("EMPLOYER_NAME","ESS")+'</td>'
        + '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="spouseemp" value="" size="30" maxlength="30" onfocus="this.select()">'+uiRequiredIcon()+'</td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("ADDRESS_1_ONLY","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr1" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("ADDRESS_2_ONLY","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr2" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("ADDRESS_3_ONLY","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr3" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("ADDRESS_4_ONLY","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="addr4" value="" size="30" maxlength="30" onfocus="this.select()"></td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("CITY_OR_ADDR_5","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="city" value="" size="18" maxlength="18" onfocus="this.select()"></td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("HOME_ADDR_6","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><select class="inputbox" name="state">'+BuildStateSelect("")+'</select></td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("HOME_ADDR_7","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="zip" value="" size="10" maxlength="10" onfocus="this.select()"></td></tr>'
       	+ '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("COUNTRY_ONLY","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><select class="inputbox" name="country">'+DrawInstCtryCdSelect("")+'</select></td></tr>'
        + '<tr><td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("WORK_PHONE_ONLY","ESS")+'</td>'
 	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="wkphonenbr" value="" size="15" maxlength="15" onfocus="this.select()"></td></tr>'
 		+ '<tr id="wkctrycd" onmouseover="parent.displayHelpText(\'self.MAIN\',\'wkctrycd\',\'cntryCdHelpText\',true)" onmouseout="parent.displayHelpText(\'self.MAIN\',\'wkctrycd\',\'cntryCdHelpText\',false)">'
 		+ '<td class="fieldlabelbold" style="width:45%">'+parent.getSeaPhrase("WORK_PHONE_CNTRY_CODE_ONLY","ESS")+'</td>'
	   	+ '<td class="plaintablecell" nowrap><input class="inputbox" type="text" name="wkphonecntry" value="" size="3" maxlength="3" onfocus="this.select()"></td></tr>'
    }

	SpouseContent += '<tr><td>&nbsp;</td><td class="plaintablecell" nowrap>'
	+ uiButton(parent.getSeaPhrase("UPDATE","ESS"),"parent.UpdateSpouseEmployment();return false","margin-top:10px")
	+ uiButton(parent.getSeaPhrase("CANCEL","ESS"),"parent.CancelSpouseEmployment();return false","margin-top:10px;margin-right:5px")
	+ '</td></tr>'
	+ '</table>'
	+ uiRequiredFooter()
	+ rolloverHelpText("cntryCdHelpText",parent.getSeaPhrase("COUNTRY_CODE_HELP_TEXT","ESS"))

	try {
		self.MAIN.document.getElementById("paneHelpIcon").alt = parent.getSeaPhrase("HELP","ESS");
		if (prm == 1) {
			self.MAIN.document.getElementById("paneHeader").innerHTML = parent.getSeaPhrase("NOT_EMP","ESS");
		}
		else {
			self.MAIN.document.getElementById("paneHeader").innerHTML = parent.getSeaPhrase("NEW_EMP","ESS");
		}
		self.MAIN.document.getElementById("paneBody").innerHTML = '<div style="padding-left:10px">'+SpouseContent+'</div>'
		if (prm == 1) {
			self.MAIN.document.spouseform.termdate.focus();
		}
		else {
			self.MAIN.document.spouseform.startdate.focus();
		}
	}
	catch(e) {}

	self.MAIN.stylePage();
	self.MAIN.setLayerSizes();
	fitToScreen();
	document.getElementById("MAIN").style.visibility = "visible";

	// if this task has been launched as a related link, remove any processing message
	if (pgmType && typeof(parent.removeWaitAlert) == "function")
		parent.removeWaitAlert();
}

function CancelSpouseEmployment()
{
	self.MAIN.document.spouseform.reset();
	try {
		parent.document.getElementById("right").style.visibility = "hidden";
	}
	catch(e) {}
}

function UpdateSpouseEmployment()
{
   	SpouseForm = self.MAIN.document.spouseform;

  	if (prm == 1) // Spouse is no longer employed
   	{
   		clearRequiredField(SpouseForm.termdate);

   		if (NonSpace(SpouseForm.termdate.value) == 0)
  	  	{
  	  		setRequiredField(SpouseForm.termdate);
  		 	parent.seaAlert(parent.getSeaPhrase("TERMINATION_DATE_REQUIRED","ESS"));
  		 	SpouseForm.termdate.focus();
  		 	SpouseForm.termdate.select();
  		 	return;
  	  	}
  	  	else if (ValidDate(SpouseForm.termdate) == false)
  	  	{
  	  		setRequiredField(SpouseForm.termdate);
  	  		return;
		}

	  	if (NonSpace(SpouseForm.datecover.value) == 0)
	  	{
	     	SpouseForm.dateneeded = SpouseForm.termdate.value;
	  	}
	  	else
	  	{
	  		SpouseForm.dateneeded = SpouseForm.datecover.value;
		}

		SpouseForm.spouse_cov = " ";
   	}
   	else // Spouse has employment
   	{
   		clearRequiredField(SpouseForm.startdate);
   		clearRequiredField(SpouseForm.spouseemp);

 		if (NonSpace(SpouseForm.startdate.value) == 0)
  	  	{
  	  		setRequiredField(SpouseForm.startdate);
  		 	parent.seaAlert(parent.getSeaPhrase("NEW_JOB_START_DATE_REQUIRED","ESS"));
  		 	SpouseForm.startdate.focus();
  		 	SpouseForm.startdate.select();
  		 	return;
  	  	}
  	  	else if (ValidDate(SpouseForm.startdate) == false)
  	  	{
  	  		setRequiredField(SpouseForm.startdate);
  	  		return;
		}

  	  	if (NonSpace(SpouseForm.spouseemp.value) == 0)
  	  	{
  	  		setRequiredField(SpouseForm.spouseemp);
         	parent.seaAlert(parent.getSeaPhrase("EMPLOYER_NAME_REQUIRED","ESS"));
		 	SpouseForm.spouseemp.focus();
		 	SpouseForm.spouseemp.select();
		 	return;
  	  	}

	  	if (NonSpace(SpouseForm.covbegin.value) == 0)
	  	{
	     	SpouseForm.dateneeded = SpouseForm.startdate.value;
		 	SpouseForm.spouse_cov = "N";
	  	}
	  	else
	  	{
	     	SpouseForm.dateneeded = SpouseForm.covbegin.value;
		 	SpouseForm.spouse_cov = "Y";
	  	}

      	if (typeof(SpouseForm.state) != "undefined")
      	{
			SpouseForm.spstate = SpouseForm.state.options[SpouseForm.state.selectedIndex].value;
		}
		else
		{
			SpouseForm.spstate = " ";
		}

		if (typeof(SpouseForm.country) != "undefined")
		{
			SpouseForm.spcountry = SpouseForm.country.options[SpouseForm.country.selectedIndex].value;
		}
		else
		{
			SpouseForm.spcountry = " ";
		}

   	  	if (SpouseForm.spouseemp.value == "") SpouseForm.spouseemp.value = " ";
   	  	if (SpouseForm.addr1.value == "") SpouseForm.addr1.value = " ";
   	  	if (SpouseForm.addr2.value == "") SpouseForm.addr2.value = " ";
   	  	if (SpouseForm.addr3.value == "") SpouseForm.addr3.value = " ";
   	  	if (SpouseForm.addr4.value == "") SpouseForm.addr4.value = " ";
   	  	if (SpouseForm.city.value == "") SpouseForm.city.value = " ";
   	  	if (SpouseForm.zip.value == "") SpouseForm.zip.value = " ";
   	  	if (SpouseForm.wkphonecntry.value == "") SpouseForm.wkphonecntry.value = " ";
   	  	if (SpouseForm.wkphonenbr.value == "") SpouseForm.wkphonenbr.value = " ";
	}

   	var agsObj			= new AGSObject(authUser.prodline, "ES10.1");
    agsObj.event     	= "ADD";
    agsObj.rtn       	= "MESSAGE";
    agsObj.longNames 	= "ALL";
    agsObj.tds       	= false;
    agsObj.field     	= "FC=A"
                    	+ "&FSH-COMPANY=" + parseInt(authUser.company,10)
                    	+ "&FSH-EMPLOYEE=" + parseInt(authUser.employee,10)
   	  	            	+ "&FSH-FAMILY-STATUS=" + escape("SPS CHANGE")
   		            	+ "&FSH-EFFECT-DATE=" + formjsDate(SpouseForm.dateneeded)
						+ "&FSH-BENEFIT-UPDATE=N"
						//PT 95878 - always set benefit update flag to "N"
						//+ escape(SpouseForm.spouse_cov)
    agsObj.func     	= "parent.DspMsgES10()";
	agsObj.debug		= false;
	parent.showWaitAlert(parent.getSeaPhrase("HOME_ADDR_42","ESS"));
	AGS(agsObj, "jsreturn");
}

function ProcessHR11()
{
    var agsObj      = new AGSObject(authUser.prodline, "HR11.1")
    agsObj.event   	= "CHANGE"
    agsObj.rtn     	= "MESSAGE"
    agsObj.longNames= "ALL"
    agsObj.tds     	= false
    agsObj.field   	= "FC=C"
		       		+ "&EMP-COMPANY=" + parseInt(authUser.company,10)
                    + "&EMP-EMPLOYEE=" + parseInt(authUser.employee,10)
					+ "&EFFECT-DATE=" + formjsDate(fmttoday)
					+ "&XMIT-HREMP-BLOCK=1000000000"
					+ "&XMIT-REQDED=1"

	if (prm != 1) // Spouse has employment
   	{
	 	agsObj.field += "&PEM-HL-COV-PROOF=" + escape(SpouseForm.spouse_cov)
	           	   + "&PEM-SPOUSE-EMP=" + escape(SpouseForm.spouseemp.value)
	               + "&PEM-SP-EMP-ADDR1=" + escape(SpouseForm.addr1.value)
	               + "&PEM-SP-EMP-ADDR2=" + escape(SpouseForm.addr2.value)
	               + "&PEM-SP-EMP-ADDR3=" + escape(SpouseForm.addr3.value)
	               + "&PEM-SP-EMP-ADDR4=" + escape(SpouseForm.addr4.value)
	               + "&PEM-SP-EMP-CITY=" + escape(SpouseForm.city.value)
	               + "&PEM-SP-EMP-STATE=" + escape(SpouseForm.spstate)
	               + "&PEM-SP-EMP-ZIP=" + escape(SpouseForm.zip.value)
				   + "&PEM-SP-EMP-COUNTRY=" + escape(SpouseForm.spcountry)
	               + "&PEM-SP-EMP-PH-CNTR=" + escape(SpouseForm.wkphonecntry.value)
	               + "&PEM-SP-EMP-PH-NBR=" + escape(SpouseForm.wkphonenbr.value)
  	}
   	else
   	{
       	agsObj.field += "&PEM-HL-COV-PROOF=" + escape(" ")
   		           + "&PEM-HL-VERIFY-DT=" + escape(" ")
				   + "&PEM-DN-COV-PROOF=" + escape(" ")
   	               + "&PEM-DN-VERIFY-DT=" + escape(" ")
   	               + "&PEM-SPOUSE-EMP=" + escape(" ")
   	               + "&PEM-SP-EMP-ADDR1=" + escape(" ")
   	               + "&PEM-SP-EMP-ADDR2=" + escape(" ")
   	               + "&PEM-SP-EMP-ADDR3=" + escape(" ")
   	               + "&PEM-SP-EMP-ADDR4=" + escape(" ")
   	               + "&PEM-SP-EMP-CITY=" + escape(" ")
   	               + "&PEM-SP-EMP-STATE=" + escape(" ")
   	               + "&PEM-SP-EMP-ZIP=" + escape(" ")
				   + "&PEM-SP-EMP-COUNTRY=" + escape(" ")
   	               + "&PEM-SP-EMP-PH-CNTR=" + escape(" ")
	               + "&PEM-SP-EMP-PH-NBR=" + escape(" ")
 	}

  	agsObj.func = "parent.DspMsgHR11()";
	agsObj.debug = false;
   	AGS(agsObj, "jsreturn");
}

function DspMsgES10()
{
 	if (parseInt(self.lawheader.gmsgnbr,10) == 0)
 	{
    	ProcessHR11();
 	}
 	else
 	{
 		parent.removeWaitAlert();
 		parent.seaAlert(self.lawheader.gmsg);
	}
}

function DspMsgHR11()
{
	parent.removeWaitAlert();

 	if (parseInt(self.lawheader.gmsgnbr,10) == 0)
 	{
		parent.left.location.replace("/lawson/xhrnet/spouse1.htm?date="+formjsDate(SpouseForm.dateneeded));
		parent.document.getElementById("right").style.visibility = "hidden";
		parent.document.getElementById("relatedtask").style.visibility = "hidden";
		parent.document.getElementById("fullrelatedtask").style.visibility = "hidden";
   		parent.document.getElementById("left").style.visibility = "visible";
 		parent.seaAlert(parent.getSeaPhrase("UPDATE_COMPLETE","ESS"));
  	}
   	else
   	{
   		parent.seaAlert(self.lawheader.gmsg);
	}
}

function OpenHelpDialog()
{
	if (isEnwisenEnabled())
		openEnwisenWindow("id=SPOUSE_EMPLOYMENT");
	else
		openHelpDialogWindow("/lawson/xhrnet/spousetip.htm");
}

function ReturnDate(date)
{
   self.MAIN.document.forms[0].elements[date_fld_name].value = date;
}

function fitToScreen()
{
	if (typeof(window["styler"]) == "undefined" || window.styler == null)
	{
		window.stylerWnd = findStyler(true);
	}

	if (!window.stylerWnd)
	{
		return;
	}

	if (typeof(window.stylerWnd["StylerEMSS"]) == "function")
	{
		window.styler = new window.stylerWnd.StylerEMSS();
	}
	else
	{
		window.styler = window.stylerWnd.styler;
	}

	var mainFrame = document.getElementById("MAIN");
	var winHeight = 464;
	var winWidth = 400;

	// resize the table frame to the screen dimensions
	if (document.body.clientHeight)
	{
		winHeight = document.body.clientHeight;
		winWidth = document.body.clientWidth;
	}
	else if (window.innerHeight)
	{
		winHeight = window.innerHeight;
		winWidth = window.innerWidth;
	}

	mainFrame.style.width = winWidth + "px";
	mainFrame.style.height = winHeight + "px";

	var fullContentWidth = (window.styler && window.styler.showLDS) ? (winWidth - 17) : ((navigator.appName.indexOf("Microsoft") >= 0) ? (winWidth - 12) : (winWidth - 7));
	var fullPaneContentWidth = (window.styler && window.styler.showLDS) ? fullContentWidth - 5 : fullContentWidth;

	try
	{
		self.MAIN.document.getElementById("paneBodyBorder").style.width = fullContentWidth + "px";
		self.MAIN.document.getElementById("paneBodyBorder").style.height = (winHeight - 35) + "px";
		self.MAIN.document.getElementById("paneBody").style.width = fullPaneContentWidth + "px";
		self.MAIN.document.getElementById("paneBody").style.height = (winHeight - 35) + "px";
	}
	catch(e)
	{}
}
</script>
</head>
<body style="overflow:hidden" onload="fitToScreen();OpenSpouse()" onresize="fitToScreen()">
	<iframe id="MAIN" name="MAIN" src="/lawson/xhrnet/ui/headerpanehelp.htm" style="visibility:hidden;left:0%;top:0px;width:400px;height:464px" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="jsreturn" name="jsreturn" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="lawheader" name="lawheader" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/errmsg.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
<!-- Version: 8-)@(#)@(201111) 09.00.01.06.00 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/spouse.htm,v 1.12.2.16 2009/02/25 20:23:40 brentd Exp $ -->
