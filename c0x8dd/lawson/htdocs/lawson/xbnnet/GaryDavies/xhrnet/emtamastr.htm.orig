<html>
<head>
<title>Leave Balances</title>
<meta name="viewport" content="width=device-width" />
<META HTTP-EQUIV="Pragma" CONTENT="No-Cache">
<link rel="stylesheet" type="text/css" id="default" title="default" href="/lawson/xhrnet/ui/default.css"/>
<link rel="alternate stylesheet" type="text/css" id="ui" title="classic" href="/lawson/xhrnet/ui/ui.css"/>
<link rel="alternate stylesheet" type="text/css" id="uiLDS" title="lds" href="/lawson/webappjs/lds/css/ldsEMSS.css"/>
<script src="/lawson/webappjs/commonHTTP.js"></script>
<script src="/lawson/webappjs/data.js"></script>
<script src="/lawson/xhrnet/esscommon80.js"></script>
<script src="/lawson/xhrnet/waitalert.js"></script>
<script src="/lawson/webappjs/user.js"></script>
<script src="/lawson/xhrnet/xml/xmldateroutines.js"></script>
<script src="/lawson/xhrnet/xml/xmlcommon.js"></script>
<script src="/lawson/xhrnet/ui/ui.js"></script>
<script src="/lawson/webappjs/javascript/objects/StylerBase.js?emss"></script>
<script src="/lawson/webappjs/javascript/objects/emss/StylerEMSS.js"></script>
<script src="/lawson/webappjs/javascript/objects/Sizer.js"></script>
<script src="/lawson/webappjs/javascript/objects/ActivityDialog.js"></script>
<script src="/lawson/webappjs/javascript/objects/OpaqueCover.js"></script>
<script src="/lawson/webappjs/javascript/objects/Dialog.js"></script>
<script>
var loadTimer;
var EmployeeName;
var leaveBalances = new Array();
var authUser;
var Employee;
var sortProperty;
var sortByNumber = false;

function CallBack()
{
	// Adjust the frame height for Netscape
	setLayerSizes();
	stylePage();
	if(opener)
	{
		authUser = opener.authUser;
		showWaitAlert(getSeaPhrase("WAIT","ESS"));
		document.title = getSeaPhrase("LEAVE_BALANCES","ESS");
		setTaskHeader("header", getSeaPhrase("TIME_ENTRY","TE"), "TimeEntry");

		if(typeof(opener.Employee)!="undefined")
		{
			EmployeeName = opener.Employee.EmployeeName;
			Employee = opener.Employee.EmployeeNbr;
			GetEmtamastr();
		}
		else
		{
			Employee = authUser.employee;
			GetEmployee();
		}
	}
	else {
		authenticate("frameNm='jsreturn'|funcNm='user=authUser;GetEmployee(true)'|desiredEdit='EM'")
	}
}

function GetEmployee(setHeader)
{
	if (setHeader) {
		showWaitAlert(getSeaPhrase("WAIT","ESS"));
		document.title = getSeaPhrase("LEAVE_BALANCES","ESS");
		setTaskHeader("header",getSeaPhrase("LEAVE_BALANCES","ESS"),"TimeEntry");
	}
	StoreDateRoutines();

	var obj 		= new DMEObject(authUser.prodline, "employee")
		obj.out 	= "JAVASCRIPT";
		obj.field 	= "first-name;last-name;middle-name;label-name-1";
		obj.key 	= parseFloat(authUser.company) +"="+ parseFloat(authUser.employee);
		obj.max 	= "1";
	DME(obj,"jsreturn");
}

function DspEmployee()
{
	EmployeeName = self.jsreturn.record[0].label_name_1;
	Employee = authUser.employee;
	GetEmtamastr();
}

function GetEmtamastr()
{
	sub_emp_name = ""
	leaveBalances = new Array();

	var obj = new DMEObject(authUser.prodline, "emtamastr");
		obj.out 	= "JAVASCRIPT";
		obj.index 	= "etmset1";
		obj.field 	= "plan.description;elig-balance;pl-end-date;run-date";
		obj.key 	= authUser.company+"="+Employee;
		obj.debug 	= false;
		obj.max		= "600";
  	DME(obj,"jsreturn")
}

function DspEmtamastr()
{
	leaveBalances = leaveBalances.concat(self.jsreturn.record);

	if (self.jsreturn.Next != "")
	{
		self.jsreturn.location.replace(self.jsreturn.Next);
	}
	else
	{
		MakeForm();
	}
}

function MakeForm(onsort, property)
{
	var leaveBalancesHtml = '<table id="balanceTbl" styler="list" class="plaintableborder" cellspacing="0" cellpadding="0" width="100%"'
	+ ' summary="'+getSeaPhrase("LEAVE_BALANCES_SUMMARY","ESS")+'">'
	+ '<tr><th scope="col" class="plaintableheaderborder" style="width:38%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:void(0);" onclick="parent.SortEmtamastr(\'plan_description\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_PLAN_NAME","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'
	+ getSeaPhrase("PLAN_NAME","ESS")
	+ '</a>'
	+ '</th>'
	+ '<th scope="col" class="plaintableheaderborder" style="width:17%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:void(0);" onclick="parent.SortEmtamastr(\'run_date\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_RUN_DATE","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'
	+ getSeaPhrase("AS_OF_DATE","ESS")
	+ '</a>'
	+ '</th>'
	+ '<th scope="col" class="plaintableheaderborder" style="width:23%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:void(0);" onclick="parent.SortEmtamastr(\'elig_balance\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_AVAILABLE_HOURS","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'
	+ getSeaPhrase("AVAILABLE_HOURS","ESS")
	+ '</a>'
	+ '</th>'
	+ '<th scope="col" class="plaintableheaderborder" style="width:22%;text-align:center" styler_click="StylerEMSS.onClickColumn" styler_init="StylerEMSS.initListColumn">'
	+ '<a class="columnsort" href="javascript:void(0);" onclick="parent.SortEmtamastr(\'avail_days\');return false"'
	+ ' onmouseover="window.status=\''+getSeaPhrase("SORT_AVAILABLE_DAYS","ESS").replace(/\'/g,"\\'")+'\';return true"'
	+ ' onmouseout="window.status=\' \';return true">'
	+ getSeaPhrase("AVAILABLE_DAYS","ESS")
	+ '</a>'
	+ '</th>'
	+ '</tr>'

	var tableHtml = "";

	for (var i=0; i<leaveBalances.length; i++)
	{
		var sysdate	= parseFloat(ymdtoday);
		var enddate = parseFloat(formjsDate(formatDME(leaveBalances[i].pl_end_date)));

		if (enddate > sysdate || isNaN(enddate))
		{
			leaveBalances[i].elig_balance = EvaluateBCD(leaveBalances[i].elig_balance);
			leaveBalances[i].avail_days = leaveBalances[i].elig_balance/8;

			tableHtml += '<tr>'
			+ '<td class="plaintablecellborder" style="text-align:left">' + leaveBalances[i].plan_description + '</td>'
			+ '<td class="plaintablecellborder" style="text-align:center">' + ((leaveBalances[i].run_date)?formatDME(leaveBalances[i].run_date):'&nbsp;') + '</td>'
			+ '<td class="plaintablecellborder" style="text-align:center">' + ((NonSpace(roundToDecimal(leaveBalances[i].elig_balance,2))>0)?roundToDecimal(leaveBalances[i].elig_balance,2):'&nbsp;') + '</td>'
			+ '<td class="plaintablecellborder" style="text-align:center">' + ((NonSpace(roundToDecimal(leaveBalances[i].avail_days,2))>0)?roundToDecimal(leaveBalances[i].avail_days,2):'&nbsp;') + '</td></tr>'
		}
	}

	leaveBalancesHtml += tableHtml + '</table>';

	if (opener)
	{
		//document.getElementById("MAIN").style.top = "5px";
		leaveBalancesHtml += '<form>'
		+ '<table cellspacing="0" cellpadding="0" width="100%">'
		+ '<tr><td class="plaintablecell">'
		+ uiButton(getSeaPhrase("QUIT","ESS"),"parent.DoneClicked();return false")
		+ '</td></tr>'
		+ '</table>'
		+ '</form>'
	}

	try {
		self.MAIN.document.getElementById("paneHeader").innerHTML = getSeaPhrase("BALANCES","ESS");

		if (leaveBalances.length > 0) {
			self.MAIN.document.getElementById("paneBody").innerHTML = leaveBalancesHtml;
		}
		else {
			self.MAIN.document.getElementById("paneBody").innerHTML = '<div class="fieldlabelbold" style="text-align:left;padding-top:5px;padding-left:5px">'
			+ getSeaPhrase("NO_LEAVE_BALANCE","ESS")
			+ '</div>'
		}
	}
	catch(e) {}

	if (!onsort) {
		self.MAIN.stylePage();
		self.MAIN.setLayerSizes(true);
		document.getElementById("MAIN").style.visibility = "visible";
	} else {
		self.MAIN.stylePage();
		self.MAIN.styleSortArrow("balanceTbl", property);
	}
	removeWaitAlert();
}

function DoneClicked()
{
	self.close();
	if (typeof(parent) != "undefined")
		parent.focus();
	else
		opener.focus();
}

function sortByProperty(obj1, obj2)
{
	var name1 = obj1[sortProperty];
	var name2 = obj2[sortProperty];
	if (sortProperty == "run_date")
	{
		name1 = formjsDate(formatDME(name1));
		name2 = formjsDate(formatDME(name2));
	}
	if (sortByNumber)
	{
		name1 = Number(name1);
		name2 = Number(name2);
	}
	if (name1 < name2)
		return -1;
	else if (name1 > name2)
		return 1;
	else
		return 0;
}

function SortEmtamastr(property)
{
   	sortByNumber = (property == "elig_balance" || property == "avail_days") ? true : false;
	sortProperty = property;
	leaveBalances.sort(sortByProperty);
	MakeForm(true, property);
}
</script>
</head>
<body onload="CallBack()">
	<iframe id="header" name="header" style="visibility:hidden;position:absolute;height:32px;width:803px;left:0px;top:0px" src="/lawson/xhrnet/ui/header.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="no"></iframe>
	<iframe id="MAIN" name="MAIN" style="visibility:hidden;position:absolute;height:464px;width:575px;left:0px;top:32px" src="/lawson/xhrnet/ui/headerpane.htm" frameborder="no" marginwidth="0" marginheight="0" scrolling="auto"></iframe>
	<iframe id="jsreturn" name="jsreturn" style="visibility:hidden;height:0px;width:0px;" src="/lawson/xhrnet/dot.htm" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</body>
</html>
<!-- Version: 8-)@(#)@(201111) 09.00.01.06.00 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xhrnet/emtamastr.htm,v 1.22.2.16 2011/05/04 21:10:11 brentd Exp $ -->
