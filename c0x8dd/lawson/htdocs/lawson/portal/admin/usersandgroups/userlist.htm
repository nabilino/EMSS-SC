<!--		*************************************************************** -->
<!--		*                                                             * -->
<!--		*                           NOTICE                            * -->
<!--		*                                                             * -->
<!--		*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             * -->
<!--		*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              * -->
<!--		*   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     * -->
<!--		*   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  * -->
<!--		*   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         * -->
<!--		*   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       * -->
<!--		*   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     * -->
<!--		*                                                             * -->
<!--		*   (c) COPYRIGHT 2012 INFOR.  ALL RIGHTS RESERVED.           * -->
<!--		*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            * -->
<!--		*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          * -->
<!--		*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               * -->
<!--		*   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  * -->
<!--		*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  * -->
<!--		*                                                             * -->
<!--		*************************************************************** -->
<!-- $Header: /cvs/cvs_archive/LawsonPlatform/ui/portal/admin/usersandgroups/userlist.htm,v 1.22.2.1.4.5.14.1.2.3 2012/08/08 12:37:23 jomeli Exp $ -->
<!-- $NoKeywords: $ -->
<!-- LaVersion=8-)@(#)@9.0.1.11.231 2012-09-05 04:00:00 -->
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" href="../../portal.css" type="text/css" />
<link rel="stylesheet" href="usersandgroups.css" type="text/css" />
<script language="javascript" src="../../servenv.js"></script>
<script language="javascript" src="../admincommon.js"></script>
<script>
//-----------------------------------------------------------------------------
// common layers
var divUsers

// search / navigation
var userlistPrev
var userlistNext
var searchFor
var txtSearch

var edgeWidth = 6
var isIE = opener.isIE
var portalWnd = opener.portalWnd
var portalObj = opener.portalObj
var subMsgs = opener.subMsgs

//-----------------------------------------------------------------------------
function initUserList() 
{
	window.document.title = subMsgs.getPhrase("LBL_ADD_WEBUSER") + " " + 
		subMsgs.getPhrase("LBL_FOR") + " " + opener.activeGroup

	var webusers=document.getElementById("webusers")
	opener.top.cmnSetElementText(webusers,subMsgs.getPhrase("LBL_WEBUSERS"))

	var spanprev=document.getElementById("spanprev")
	spanprev.onclick = doPrevious
	var prevPhrase = portalObj.getPhrase("LBL_PREVIOUS")
	opener.top.cmnSetElementText(spanprev,prevPhrase)
	spanprev.title = prevPhrase

	var spannext=document.getElementById("spannext")
	spannext.onclick = doNext
	var nextPhrase = portalObj.getPhrase("LBL_NEXT")
	opener.top.cmnSetElementText(spannext,nextPhrase)
	spannext.title = nextPhrase

	var spansearch=document.getElementById("spansearch")
	spansearch.onclick = doSearch
	opener.top.cmnSetElementText(spansearch,portalObj.getPhrase("LBL_FIND"))

	var spanclose=document.getElementById("spanclose")
	spanclose.onclick = doClose
	var closePhrase = portalObj.getPhrase("LBL_CLOSE")
	opener.top.cmnSetElementText(spanclose,portalObj.getPhrase("LBL_CLOSE"))
	spanclose.title = closePhrase

	var findPhrase = portalObj.getPhrase("LBL_FIND")
	var lblSearch=document.getElementById("lblSearch")
	opener.top.cmnSetElementText(lblSearch,findPhrase)

	divUsers=document.getElementById("divUsers")
	txtSearch=document.getElementById("txtSearch")
	txtSearch.onkeypress=keyPress;

	sizeFind()

	loadUsers( 'initial' )
	txtSearch.focus()
}

//-----------------------------------------------------------------------------
// Calls function in the opener window that will perform the ags
// call to update a user's status.  The opener window should know
// the bookmark ID for which we are allowing/denying access by the user.
function callOpenerAddUser( userid, user )
{
	window.opener.addUser( userid, user )
}

//-----------------------------------------------------------------------------
// The variable loadedFrom can take one of 4 values:
// initial -- on first load when window pops up
// prev or next -- when user clicks next or prev links
// search -- when user is doing a search.
function loadUsers( loadedFrom )
{
	// dme call to get users
	var api = opener.top.DMEPath + "?"
	if (loadedFrom == "initial")
	{
		api += 	"PROD=LOGAN&" +
				"FILE=SIRDIDHDR&" +
				"FIELD=ID;ID-STATUS;WEB-USER;DESCRIPTION;&" +
				"MAX=19&" +
				"INDEX=IDHSET7&" +
				"KEY&" +
				"OUT=XML";
	}
	else if (loadedFrom == "prev")
	{
		api += 	"PROD=LOGAN&" +
				"FILE=SIRDIDHDR&" +
				"FIELD=ID;ID-STATUS;WEB-USER;DESCRIPTION;&" +
				"MAX=19&" +
				"INDEX=IDHSET7&" +
				"KEY&" +
				"EXCLUDE=DRILL;SORTS&" +
				"SORTASC=WEB-USER&" + userlistPrev +
				"OUT=XML";
	}
	else if (loadedFrom == "next")
	{
		api += 	"PROD=LOGAN&" +
				"FILE=SIRDIDHDR&" +
				"FIELD=ID;ID-STATUS;WEB-USER;DESCRIPTION;&" +
				"MAX=19&" +
				"INDEX=IDHSET7&" +
				"KEY&" +
				"EXCLUDE=DRILL;SORTS&" +
				"SORTASC=WEB-USER&" + userlistNext +
				"OUT=XML";
	}
	else
	{	// loadedFrom = "search"
		if (!searchFor)
		{
			var msg=subMsgs.getPhrase("LBL_SEARCH_VALUE_MISSING");
			portalWnd.cmnDlg.messageBox(msg,"ok","alert",window);
		}
		else
		{
			api += 	"PROD=LOGAN&" +
					"FILE=SIRDIDHDR&" +
					"INDEX=IDHSET7&" +
					"FIELD=ID;ID-STATUS;WEB-USER;DESCRIPTION;&" +
					"MAX=19&" +
					"INDEX=IDHSET7&" +
					"KEY&" +
					"EXCLUDE=DRILL;SORTS&" +
					"SELECT=WEB-USER^~" + escape(searchFor) + "&" +
					"OUT=XML";
		}
	}

	if( api != "" )
	{
		var oUsrXml=portalWnd.httpRequest(api,null,"","text/xml",false);
		if (portalWnd.oError.isErrorResponse(oUsrXml,true,true,false,"",window))
		{
			oUsrXml=null;
			doClose();
			return;
		}
		oUsrXml=portalWnd.oError.getDSObject();

		var arrMsgs=oUsrXml.document.getElementsByTagName(opener.TAG_DME_MESSAGE);
		var lenMsgs=(arrMsgs?arrMsgs.length:0);
		if (lenMsgs && (arrMsgs[0].getAttribute("status")=="1"))
		{
			var msg=portalObj.getPhrase("LBL_ERROR") + " - " + arrMsgs[0].firstChild.nodeValue;
			portalWnd.cmnDlg.messageBox(msg,"ok","alert",window);
			doClose();
			return;
		}					

		renderUsers(oUsrXml);
		oUsrXml=null;
	}
}

//-----------------------------------------------------------------------------
// render users, similar to the xsl used in the old bookmarkuser.xsl
function renderUsers(oUsrXml)
{
	// save position calls
	userlistPrev = oUsrXml.document.getElementsByTagName("PREVCALL")
	if(userlistPrev && userlistPrev.length)
		userlistPrev=userlistPrev[0].firstChild.nodeValue
	else
		userlistPrev=null

	userlistNext = oUsrXml.document.getElementsByTagName("NEXTCALL")
	if(userlistNext && userlistNext.length)
		userlistNext=userlistNext[0].firstChild.nodeValue
	else
		userlistNext=null

	// clear previous nodes
	opener.abandonChildren(divUsers);

	var arrCOLUMNS = oUsrXml.document.getElementsByTagName("COLUMN")
	var arrRECORD = oUsrXml.document.getElementsByTagName("RECORD")
	var len = arrRECORD.length

	var divNode = document.createElement("div")
	divNode.canHide = true

	if (len==0)
	{
		var tableNode = document.createElement("table")
		tableNode.style.textAlign = "center"

		// header row
		var rowNode = tableNode.insertRow(tableNode.rows.length)

		// row 0, col 0 - user
		var cellNode = rowNode.insertCell(rowNode.cells.length)
		cellNode.className = "item"

		var descriptionPhrase = subMsgs.getPhrase("LBL_NO_RECORDS_EXIST")
		textNode = document.createTextNode(descriptionPhrase)
		cellNode.appendChild(textNode)

		divNode.appendChild(tableNode)

	}
	else
	{ // len>0
		var tableNode = document.createElement("table")
		tableNode.className = "xTTableList"
		tableNode.style.border = "0px"
		tableNode.cellPadding = 1
		tableNode.cellSpacing = 3
		tableNode.style.width = "100%"
		//tableNode.style.textAlign = "center"
		tableNode.onselectstart=opener.top.cmnBlockSelect;

		// header row
		var rowNode = tableNode.insertRow(tableNode.rows.length)

		// row 0, col 0 - 1 - webuser
		var cellNode = rowNode.insertCell(rowNode.cells.length)
		cellNode.className = "xTTableColumnHeader"
		cellNode.style.width = "55%"
		cellNode.columnSpan = 2
		var userPhrase = subMsgs.getPhrase("LBL_WEBUSER")
		var labelNode = document.createElement("label");
		labelNode.onselectstart=opener.top.cmnBlockSelect;
		var textNode = document.createTextNode(userPhrase);
		labelNode.appendChild(textNode);
		cellNode.appendChild(labelNode);

		// row 0, col 2 - description
		cellNode = rowNode.insertCell(rowNode.cells.length)
		cellNode.className = "xTTableColumnHeader"
		cellNode.style.width = "45%"
		var descriptionPhrase = portalObj.getPhrase("LBL_DESCRIPTION")
		var labelNode = document.createElement("label");
		labelNode.onselectstart=opener.top.cmnBlockSelect;
		textNode = document.createTextNode(descriptionPhrase);
		labelNode.appendChild(textNode);
		cellNode.appendChild(labelNode);

		divNode.appendChild(tableNode)

		var arrCOL
		var className
		var userid
		var user
		var status
		var description
		var userids = new Array(len)
		var descriptions = new Array(len)
		for (var i=0;i<len;i++)
		{
			// get DME columns
			if (isIE) {
				arrCOL = arrRECORD[i].getElementsByTagName("COL")
				userid = arrCOL[0].firstChild.nodeValue
				status = arrCOL[1].firstChild.nodeValue
				user = arrCOL[2].firstChild.nodeValue
				description = arrCOL[3].firstChild.nodeValue
			} else {
				var arrCOL=opener.getNodeChildElementsByTagName(arrRECORD[i],"COL")
				for (var k=0;k<arrCOL[0].childNodes.length;k++) {
					if (arrCOL[0].childNodes[k].nodeType==4) {
						userid = arrCOL[0].childNodes[k].nodeValue
						break
					}
				}
				for (var k=0;k<arrCOL[1].childNodes.length;k++) {
					if (arrCOL[1].childNodes[k].nodeType==4) {
						status = arrCOL[1].childNodes[k].nodeValue
						break
					}
				}
				for (var k=0;k<arrCOL[2].childNodes.length;k++) {
					if (arrCOL[2].childNodes[k].nodeType==4) {
						user = arrCOL[2].childNodes[k].nodeValue
						break
					}
				}
				for (var k=0;k<arrCOL[3].childNodes.length;k++) {
					if (arrCOL[3].childNodes[k].nodeType==4) {
						description = arrCOL[3].childNodes[k].nodeValue
						break
					}
				}
			}
			status = parseInt(status,10)

			userids[i]=user
			descriptions[i]=description

			for (var j=0;j<i;j++) {
				if (userids[j]==userids[i] && descriptions[j]==descriptions[i]) {
					userid = null
					j=i
				}
			}

			if (userid) {

				var spanNode = document.createElement("span")
				spanNode.className = "xTListItem"
				spanNode.style.border = "0px"
				spanNode.style.width = "100%"
				spanNode.userid = userid
				spanNode.user = user
				spanNode.tabIndex = 1
				//spanNode.onclick = spanClick

				tableNode = document.createElement("table")
				tableNode.style.border = "0px"
				tableNode.style.width = "100%"

				// row
				rowNode = tableNode.insertRow(tableNode.rows.length)

				className = (status=="1")?"item":"itemDim"

				// row i, col 0 - id
				cellNode = rowNode.insertCell(rowNode.cells.length)
				cellNode.style.width = "15%";
				cellNode.style.overflow = "hidden";
				cellNode.className = className
				cellNode.span = spanNode
				cellNode.onmouseover = spanOver
				cellNode.onmouseout = spanOut
				cellNode.onclick = spanClick
				labelNode = document.createElement("label");
				labelNode.onselectstart=opener.top.cmnBlockSelect;
				labelNode.span = spanNode;
				textNode = document.createTextNode(userid)
				//textNode = document.createTextNode(user)
				labelNode.appendChild(textNode);
				cellNode.appendChild(labelNode);
				spanNode.cellNode=cellNode

				// row i, col 1 - user
				cellNode = rowNode.insertCell(rowNode.cells.length)
				cellNode.style.width = "40%"
				cellNode.style.overflow = "hidden";
				cellNode.className = className
				cellNode.span = spanNode
				cellNode.onmouseover = spanOver
				cellNode.onmouseout = spanOut
				cellNode.onclick = spanClick
				labelNode = document.createElement("label");
				labelNode.onselectstart=opener.top.cmnBlockSelect;
				labelNode.span = spanNode;
				textNode = document.createTextNode(user);
				labelNode.appendChild(textNode);
				cellNode.appendChild(labelNode);

				// row i, col 2 - description
				cellNode = rowNode.insertCell(rowNode.cells.length)
				cellNode.style.width = "45%";
				cellNode.style.overflow = "hidden";
				cellNode.className = className
				cellNode.span = spanNode
				cellNode.onmouseover = spanOver
				cellNode.onmouseout = spanOut
				cellNode.onclick = spanClick
				labelNode = document.createElement("label");
				labelNode.onselectstart=opener.top.cmnBlockSelect;
				labelNode.span = spanNode;
				textNode = document.createTextNode(description);
				labelNode.appendChild(textNode);
				cellNode.appendChild(labelNode);

				spanNode.appendChild(tableNode)

				divNode.appendChild(spanNode)
			} // userid

		} // for
	} // len>0
	divUsers.appendChild(divNode)
}

//-----------------------------------------------------------------------------
function doSearch()
{
	searchFor = txtSearch.value
	if (searchFor)
		loadUsers('search')
	else
		loadUsers( 'initial' )
}

//-----------------------------------------------------------------------------
function doPrevious()
{
	if (!userlistPrev)
	{
		var phrase = subMsgs.getPhrase("LBL_NO_PREV_USERS")
		portalWnd.cmnDlg.messageBox(phrase,"ok","info",window);
		return
	}
	loadUsers('prev')
}

//-----------------------------------------------------------------------------
function doNext()
{
	if (!userlistNext)
	{
		var phrase = subMsgs.getPhrase("LBL_NO_NEXT_USERS")
		portalWnd.cmnDlg.messageBox(phrase,"ok","info",window);
		return
	}
	loadUsers('next')
}

//-----------------------------------------------------------------------------
function doClose()
{
	window.close()
}

//-----------------------------------------------------------------------------
function spanOver(e)
{
	e=opener.top.getEventObject(e,window);
	var t=opener.top.getEventElement(e);
	if (t)
	{
		if (t.span)
			t=t.span;
		t.className = "xTListItemHover";
	}
}

//-----------------------------------------------------------------------------
function spanOut(e)
{
	e=opener.top.getEventObject(e,window);
	var t=opener.top.getEventElement(e);
	if (t)
	{
		if (t.span)
			t=t.span;
		t.className = "xTListItem";
	}
}

//-----------------------------------------------------------------------------
function spanClick(e)
{
	e=opener.top.getEventObject(e,window);
	var t=opener.top.getEventElement(e);
	if (t)
	{
		if (t.span)
			t=t.span;
		var userid = t.userid;
		var user = t.user;
		callOpenerAddUser(userid,user);
	}
}

//-----------------------------------------------------------------------------
function sizeFind()
{
	var scrWidth=(isIE
		? document.body.offsetWidth
		: window.innerWidth);
	var scrHeight=(isIE
		? document.body.offsetHeight
		: window.innerHeight);

	var divHeader = document.getElementById("divHeader")
	var headerTop = parseInt(divHeader.style.top,10)
	var headerHeight = parseInt(divHeader.style.height,10)

	var divUsersTop = headerTop + headerHeight + edgeWidth
	with (divUsers.style) 
	{
		left = "0px"
		top = divUsersTop + "px"
		width = scrWidth + "px"
		height = (scrHeight - divUsersTop) + "px"
		visibility = "visible"
	}
}

//-----------------------------------------------------------------------------
function userlistKeyDown(evt)
{	
	evt = opener.top.getEventObject(evt,window);
	if (!evt)
		return false;

	var evtCaught = false
	var keyVal = (isIE) ? evt.keyCode : evt.charCode
	if (keyVal == 0)	// netscape only
		keyVal = evt.keyCode
	var t = opener.top.getEventElement(evt);
	if (t)
	{
		switch(keyVal)
		{	case 13:	// enter
				if (t && t.cellNode && typeof(t.cellNode.onclick)=="function") {
					t.cellNode.click()
					evtCaught = true
				}
				else if (t && typeof(t.onclick)=="function") {
					t.click()
					evtCaught = true
				}
				break
		}
	}
	if (evtCaught)
		opener.top.setEventCancel(evt)
	return evtCaught
}

//-----------------------------------------------------------------------------
</script>
</head>

<body tabIndex="-1" onLoad="initUserList()" onkeydown="userlistKeyDown(event)" onresize="sizeFind()">
	<div id="divHeader" style="position:absolute;top:0px;left:0px;height:25px;width:100%;" class="xTFormTitleBar">
		<table cellpadding="0" cellspacing="0" border="0" style="width:100%;height:25px;">
			<tr style="vertical-align:center;">
			<td class="xTRightHeader"><span id="webusers">Users</span></td>
			<td align="right">
				<table border="0" cellspacing="0" cellpadding="0" class="xTToolBarButton">
					<tr style="vertical-align:center;">
						<td><button id="spanprev" class="xTToolBarButton">Previous</button></td>
						<td width="2"><img id="spacer" src="../../images/spacer.gif" width="2" height="15"></td>
						<td><button id="spannext" class="xTToolBarButton">Next</button></td>
						<td width="2"><img id="spacer" src="../../images/spacer.gif" width="2" height="15"></td>
						<td width="0">
							<label for="txtSearch" id="lblSearch" class="xTLabel"
								style="position:relative;visibility:hidden;display:none;">
								Find:&nbsp;</label>
						</td>
						<td align="center">
							<input type="text" class="xTSearchField" id="txtSearch" />
						</td>
						<td width="2"><img id="spacer" src="../../images/spacer.gif" width="2" height="15"></td>
						<td><button id="spansearch" class="xTToolBarButton">Find</button></td>
						<td width="2"><img id="spacer" src="../../images/spacer.gif" width="2" height="15"></td>
						<td><button id="spanclose" class="xTToolBarButton">Close</button></td>
					</tr>
				</table>
			</td>
			</tr>
		</table>
	</div>
	<div id="divUsers" style="position:absolute;top:25px;left:0px;width:350px;height:425px;overflow:auto;visibility:hidden;" class="tip"></div>
</body>
</html>