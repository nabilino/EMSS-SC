<html>
<head>
<script>
//
// NOTE: For an Annual Cost Divisor, the Number of Cycles is always = 1.
// IMPORTANT: All dates must be entered as double quoted U.S. format
// with no spaces: "MM/DD/YYYY".
// If you wish to set up the number of cyles based on the employee's pay
// plan, create new date ranges in the appropriate table below, and
// specify the pay plan in the "Pay Plan" column.  A default set of
// date ranges has been created for each table where the employee pay
// plan is empty.  For an example, see the bi-weekly pay frequency table
// below.
//
var MonthlyCycles = new Array(

//					Monthly Divisor
//		Begin Date			End Date	   	# of Cycles		Pay Plan
//		----------			----------	   	-----------		--------
		"01/01/2011",       "01/31/2011",		   12,		"",
		"02/01/2011",		"02/29/2011",		   11,		"",
		"03/01/2011",		"03/31/2011",		   10,		"",
		"04/01/2011",		"04/30/2011",		    9,		"",
		"05/01/2011",		"05/31/2011",		    8,		"",
		"06/01/2011",		"06/30/2011",		    7,		"",
		"07/01/2011",		"07/31/2011",		    6,		"",
		"08/01/2011",		"08/31/2011",		    5,		"",
		"09/01/2011",		"09/30/2011",		    4,		"",
		"10/01/2011",		"10/31/2011",		    3,		"",
		"11/01/2011",		"11/30/2011",		    2,		"",
		"12/01/2011",		"12/31/2011",		    1,		"",
		"01/01/2010",       "01/31/2010",		   12,		"",
		"02/01/2010",		"02/29/2010",		   11,		"",
		"03/01/2010",		"03/31/2010",		   10,		"",
		"04/01/2010",		"04/30/2010",		    9,		"",
		"05/01/2010",		"05/31/2010",		    8,		"",
		"06/01/2010",		"06/30/2010",		    7,		"",
		"07/01/2010",		"07/31/2010",		    6,		"",
		"08/01/2010",		"08/31/2010",		    5,		"",
		"09/01/2010",		"09/30/2010",		    4,		"",
		"10/01/2010",		"10/31/2010",		    3,		"",
		"11/01/2010",		"11/30/2010",		    2,		"",
		"12/01/2010",		"12/31/2010",		    1,		""
)

var SemiMonthlyCycles = new Array(

//					Semi-Monthly Divisor
//		Begin Date			End Date	   	# of Cycles		Pay Plan
//		----------			----------	   	-----------		--------
        "01/01/2011",		"01/15/2011",		   24,		"",
		"01/16/2011",		"01/31/2011",		   23,		"",
		"02/01/2011",		"02/15/2011",		   22,		"",
		"02/16/2011",		"02/29/2011",		   21,		"",
		"03/01/2011",		"03/15/2011",		   20,		"",
		"03/16/2011",		"03/31/2011",		   19,		"",
		"04/01/2011",		"04/15/2011",		   18,		"",
		"04/16/2011",		"04/30/2011",		   17,		"",
		"05/01/2011",		"05/15/2011",		   16,		"",
		"05/16/2011",		"05/31/2011",		   15,		"",
		"06/01/2011",		"06/15/2011",		   14,		"",
		"06/16/2011",		"06/30/2011",		   13,		"",
		"07/01/2011",		"07/15/2011",		   12,		"",
		"07/16/2011",		"07/31/2011",		   11,		"",
		"08/01/2011",		"08/15/2011",		   10,		"",
		"08/16/2011",		"08/31/2011",		    9,		"",
		"09/01/2011",		"09/15/2011",		    8,		"",
		"09/16/2011",		"09/30/2011",		    7,		"",
		"10/01/2011",		"10/15/2011",		    6,		"",
		"10/16/2011",		"10/31/2011",		    5,		"",
		"11/01/2011",		"11/15/2011",		    4,		"",
		"11/16/2011",		"11/30/2011",		    3,		"",
		"12/01/2011",		"12/15/2011",		    2,		"",
		"12/16/2011",		"12/31/2011",		    1,		"",
		"01/01/2010",		"01/15/2010",		   24,		"",
		"01/16/2010",		"01/31/2010",		   23,		"",
		"02/01/2010",		"02/15/2010",		   22,		"",
		"02/16/2010",		"02/29/2010",		   21,		"",
		"03/01/2010",		"03/15/2010",		   20,		"",
		"03/16/2010",		"03/31/2010",		   19,		"",
		"04/01/2010",		"04/15/2010",		   18,		"",
		"04/16/2010",		"04/30/2010",		   17,		"",
		"05/01/2010",		"05/15/2010",		   16,		"",
		"05/16/2010",		"05/31/2010",		   15,		"",
		"06/01/2010",		"06/15/2010",		   14,		"",
		"06/16/2010",		"06/30/2010",		   13,		"",
		"07/01/2010",		"07/15/2010",		   12,		"",
		"07/16/2010",		"07/31/2010",		   11,		"",
		"08/01/2010",		"08/15/2010",		   10,		"",
		"08/16/2010",		"08/31/2010",		    9,		"",
		"09/01/2010",		"09/15/2010",		    8,		"",
		"09/16/2010",		"09/30/2010",		    7,		"",
		"10/01/2010",		"10/15/2010",		    6,		"",
		"10/16/2010",		"10/31/2010",		    5,		"",
		"11/01/2010",		"11/15/2010",		    4,		"",
		"11/16/2010",		"11/30/2010",		    3,		"",
		"12/01/2010",		"12/15/2010",		    2,		"",
		"12/16/2010",		"12/31/2010",		    1,		""
)

var MonthlyPayFrequency = new Array(

//					Monthly Pay Frequency
//		Begin Date			End Date	   	# of Cycles		Pay Plan
//		----------			----------	   	-----------		--------
		"01/01/2011",		"01/31/2011",		   12,		"",
		"02/01/2011",		"02/29/2011",		   11,		"",
		"03/01/2011",		"03/31/2011",		   10,		"",
		"04/01/2011",		"04/30/2011",		    9,		"",
		"05/01/2011",		"05/31/2011",		    8,		"",
		"06/01/2011",		"06/30/2011",		    7,		"",
		"07/01/2011",		"07/31/2011",		    6,		"",
		"08/01/2011",		"08/31/2011",		    5,		"",
		"09/01/2011",		"09/30/2011",		    4,		"",
		"10/01/2011",		"10/31/2011",		    3,		"",
		"11/01/2011",		"11/30/2011",		    2,		"",
		"12/01/2011",		"12/31/2011",		    1,		"",
		"01/01/2010",		"01/31/2010",		   12,		"",
		"02/01/2010",		"02/29/2010",		   11,		"",
		"03/01/2010",		"03/31/2010",		   10,		"",
		"04/01/2010",		"04/30/2010",		    9,		"",
		"05/01/2010",		"05/31/2010",		    8,		"",
		"06/01/2010",		"06/30/2010",		    7,		"",
		"07/01/2010",		"07/31/2010",		    6,		"",
		"08/01/2010",		"08/31/2010",		    5,		"",
		"09/01/2010",		"09/30/2010",		    4,		"",
		"10/01/2010",		"10/31/2010",		    3,		"",
		"11/01/2010",		"11/30/2010",		    2,		"",
		"12/01/2010",		"12/31/2010",		    1,		""
)

var SemiMonthlyPayFrequency = new Array(

//					Semi-Monthly Pay Frequency
//		Begin Date			End Date	   	# of Cycles		Pay Plan
//		----------			----------	   	-----------		--------
		"01/01/2011",		"01/15/2011",		   24,		"",
		"01/16/2011",		"01/31/2011",		   23,		"",
		"02/01/2011",		"02/15/2011",		   22,		"",
		"02/16/2011",		"02/29/2011",		   21,		"",
		"03/01/2011",		"03/15/2011",		   20,		"",
		"03/16/2011",		"03/31/2011",		   19,		"",
		"04/01/2011",		"04/15/2011",		   18,		"",
		"04/16/2011",		"04/30/2011",		   17,		"",
		"05/01/2011",		"05/15/2011",		   16,		"",
		"05/16/2011",		"05/31/2011",		   15,		"",
		"06/01/2011",		"06/15/2011",		   14,		"",
		"06/16/2011",		"06/30/2011",		   13,		"",
		"07/01/2011",		"07/15/2011",		   12,		"",
		"07/16/2011",		"07/31/2011",		   11,		"",
		"08/01/2011",		"08/15/2011",		   10,		"",
		"08/16/2011",		"08/31/2011",		    9,		"",
		"09/01/2011",		"09/15/2011",		    8,		"",
		"09/16/2011",		"09/30/2011",		    7,		"",
		"10/01/2011",		"10/15/2011",		    6,		"",
		"10/16/2011",		"10/31/2011",		    5,		"",
		"11/01/2011",		"11/15/2011",		    4,		"",
		"11/16/2011",		"11/30/2011",		    3,		"",
		"12/01/2011",		"12/15/2011",		    2,		"",
		"12/16/2011",		"12/31/2011",		    1,		"",
		"01/01/2010",		"01/15/2010",		   24,		"",
		"01/16/2010",		"01/31/2010",		   23,		"",
		"02/01/2010",		"02/15/2010",		   22,		"",
		"02/16/2010",		"02/29/2010",		   21,		"",
		"03/01/2010",		"03/15/2010",		   20,		"",
		"03/16/2010",		"03/31/2010",		   19,		"",
		"04/01/2010",		"04/15/2010",		   18,		"",
		"04/16/2010",		"04/30/2010",		   17,		"",
		"05/01/2010",		"05/15/2010",		   16,		"",
		"05/16/2010",		"05/31/2010",		   15,		"",
		"06/01/2010",		"06/15/2010",		   14,		"",
		"06/16/2010",		"06/30/2010",		   13,		"",
		"07/01/2010",		"07/15/2010",		   12,		"",
		"07/16/2010",		"07/31/2010",		   11,		"",
		"08/01/2010",		"08/15/2010",		   10,		"",
		"08/16/2010",		"08/31/2010",		    9,		"",
		"09/01/2010",		"09/15/2010",		    8,		"",
		"09/16/2010",		"09/30/2010",		    7,		"",
		"10/01/2010",		"10/15/2010",		    6,		"",
		"10/16/2010",		"10/31/2010",		    5,		"",
		"11/01/2010",		"11/15/2010",		    4,		"",
		"11/16/2010",		"11/30/2010",		    3,		"",
		"12/01/2010",		"12/15/2010",		    2,		"",
		"12/16/2010",		"12/31/2010",		    1,		""
)

var BiWeeklyPayFrequency = new Array(

//					Bi-Weekly Pay Frequency
//		Begin Date	 		End Date		# of Cycles		Pay Plan
//		----------			----------		-----------		--------
		"01/01/2011",		"01/14/2011",			26,     "",
		"01/15/2011",		"01/28/2011",			25,     "",
		"01/29/2011",		"02/11/2011",			24,		"",
		"02/12/2011",		"02/25/2011",			23,		"",
		"02/26/2011",		"03/10/2011",			22,		"",
		"03/11/2011",		"03/24/2011",			21,		"",
		"03/25/2011",		"04/07/2011",			20,		"",
		"04/08/2011",		"04/21/2011",			19,		"",
		"04/22/2011",		"05/05/2011",			18,		"",
		"05/06/2011",		"05/19/2011",			17,		"",
		"05/20/2011",		"06/02/2011",			16,		"",
		"06/03/2011",		"06/16/2011",			15,		"",
		"06/17/2011",		"06/30/2011",			14,		"",
		"07/01/2011",		"07/14/2011",			13,		"",
		"07/15/2011",		"07/28/2011",			12,		"",
		"07/29/2011",		"08/11/2011",			11,		"",
		"08/12/2011",		"08/25/2011",			10,		"",
		"08/26/2011",		"09/08/2011",			9,		"",
		"09/09/2011",		"09/22/2011",			8,		"",
		"09/23/2011",		"10/06/2011",			7,		"",
		"10/07/2011",		"10/20/2011",			6,		"",
		"10/21/2011",		"11/03/2011",			5,		"",
		"11/04/2011",		"11/17/2011",			4,		"",
		"11/18/2011",		"12/01/2011",			3,		"",
		"12/02/2011",		"12/15/2011",			2,		"",
		"12/16/2011",		"12/31/2011",			1,		"",
		"01/01/2010",		"01/14/2010",			26,     "",
		"01/15/2010",		"01/28/2010",			25, 	"",
		"01/29/2010",		"02/11/2010",			24,		"",
		"02/12/2010",		"02/25/2010",			23,		"",
		"02/26/2010",		"03/10/2010",			22,		"",
		"03/11/2010",		"03/24/2010",			21,		"",
		"03/25/2010",		"04/07/2010",			20,		"",
		"04/08/2010",		"04/21/2010",			19,		"",
		"04/22/2010",		"05/05/2010",			18,		"",
		"05/06/2010",		"05/19/2010",			17,		"",
		"05/20/2010",		"06/02/2010",			16,		"",
		"06/03/2010",		"06/16/2010",			15,		"",
		"06/17/2010",		"06/30/2010",			14,		"",
		"07/01/2010",		"07/14/2010",			13,		"",
		"07/15/2010",		"07/28/2010",			12,		"",
		"07/29/2010",		"08/11/2010",			11,		"",
		"08/12/2010",		"08/25/2010",			10,		"",
		"08/26/2010",		"09/08/2010",			9,		"",
		"09/09/2010",		"09/22/2010",			8,		"",
		"09/23/2010",		"10/06/2010",			7,		"",
		"10/07/2010",		"10/20/2010",			6,		"",
		"10/21/2010",		"11/03/2010",			5,		"",
		"11/04/2010",		"11/17/2010",			4,		"",
		"11/18/2010",		"12/01/2010",			3,		"",
		"12/02/2010",		"12/15/2010",			2,		"",
		"12/16/2010",		"12/31/2010",			1,		""
)

var WeeklyPayFrequency = new Array(

//					Weekly Pay Frequency
//		Begin Date			End Date	   	# of Cycles		Pay Plan
//		----------			----------	   	-----------		--------
		"01/01/2011",		"01/07/2011",		   52,		"",
		"01/07/2011",		"01/14/2011",		   51,		"",
		"01/15/2011",		"01/21/2011",		   50,		"",
		"01/22/2011",		"01/28/2011",		   49,		"",
		"01/29/2011",		"02/04/2011",		   48,		"",
		"02/05/2011",		"02/11/2011",		   47,		"",
		"02/12/2011",		"02/18/2011",		   46,		"",
		"02/19/2011",		"02/25/2011",		   45,		"",
		"02/26/2011",		"03/03/2011",		   44,		"",
		"03/04/2011",		"03/10/2011",		   43,		"",
		"03/11/2011",		"03/17/2011",		   42,		"",
		"03/18/2011",		"03/24/2011",		   41,		"",
		"03/25/2011",		"03/31/2011",		   40,		"",
		"04/01/2011",		"04/07/2011",		   39,		"",
		"04/08/2011",		"04/14/2011",		   38,		"",
		"04/15/2011",		"04/21/2011",		   37,		"",
		"04/22/2011",		"04/28/2011",		   36,		"",
		"04/29/2011",		"05/05/2011",		   35,		"",
		"05/06/2011",		"05/12/2011",		   34,		"",
		"05/13/2011",		"05/19/2011",		   33,		"",
		"05/20/2011",		"05/26/2011",		   32,		"",
		"05/27/2011",		"06/02/2011",		   31,		"",
		"06/03/2011",		"06/09/2011",		   30,		"",
		"06/10/2011",		"06/16/2011",		   29,		"",
		"06/17/2011",		"06/23/2011",		   28,		"",
		"06/24/2011",		"06/30/2011",		   27,		"",
		"07/01/2011",		"07/07/2011",		   26,		"",
		"07/08/2011",		"07/14/2011",		   25,		"",
		"07/15/2011",		"07/21/2011",		   24,		"",
		"07/22/2011",		"07/28/2011",		   23,		"",
		"07/29/2011",		"08/04/2011",		   22,		"",
		"08/05/2011",		"08/11/2011",		   21,		"",
		"08/12/2011",		"08/18/2011",		   20,		"",
		"08/19/2011",		"08/25/2011",		   19,		"",
		"08/26/2011",		"09/01/2011",		   18,		"",
		"09/02/2011",		"09/08/2011",		   17,		"",
		"09/09/2011",		"09/15/2011",		   16,		"",
		"09/16/2011",		"09/22/2011",		   15,		"",
		"09/23/2011",		"09/29/2011",		   14,		"",
		"09/30/2011",		"10/06/2011",		   13,		"",
		"10/07/2011",		"10/13/2011",		   12,		"",
		"10/14/2011",		"10/20/2011",		   11,		"",
		"10/21/2011",		"10/27/2011",		   10,		"",
		"10/28/2011",		"11/03/2011",		    9,		"",
		"11/04/2011",		"11/10/2011",		    8,		"",
		"11/11/2011",		"11/17/2011",		    7,		"",
		"11/18/2011",		"11/24/2011",		    6,		"",
		"11/25/2011",		"12/01/2011",		    5,		"",
		"12/02/2011",		"12/08/2011",		    4,		"",
		"12/09/2011",		"12/15/2011",		    3,		"",
		"12/16/2011",		"12/22/2011",		    2,		"",
		"12/23/2011",		"12/31/2011",		    1,		"",
		"01/01/2010",		"01/07/2010",		   52,		"",
		"01/07/2010",		"01/14/2010",		   51,		"",
		"01/15/2010",		"01/21/2010",		   50,		"",
		"01/22/2010",		"01/28/2010",		   49,		"",
		"01/29/2010",		"02/04/2010",		   48,		"",
		"02/05/2010",		"02/11/2010",		   47,		"",
		"02/12/2010",		"02/18/2010",		   46,		"",
		"02/19/2010",		"02/25/2010",		   45,		"",
		"02/26/2010",		"03/03/2010",		   44,		"",
		"03/04/2010",		"03/10/2010",		   43,		"",
		"03/11/2010",		"03/17/2010",		   42,		"",
		"03/18/2010",		"03/24/2010",		   41,		"",
		"03/25/2010",		"03/31/2010",		   40,		"",
		"04/01/2010",		"04/07/2010",		   39,		"",
		"04/08/2010",		"04/14/2010",		   38,		"",
		"04/15/2010",		"04/21/2010",		   37,		"",
		"04/22/2010",		"04/28/2010",		   36,		"",
		"04/29/2010",		"05/05/2010",		   35,		"",
		"05/06/2010",		"05/12/2010",		   34,		"",
		"05/13/2010",		"05/19/2010",		   33,		"",
		"05/20/2010",		"05/26/2010",		   32,		"",
		"05/27/2010",		"06/02/2010",		   31,		"",
		"06/03/2010",		"06/09/2010",		   30,		"",
		"06/10/2010",		"06/16/2010",		   29,		"",
		"06/17/2010",		"06/23/2010",		   28,		"",
		"06/24/2010",		"06/30/2010",		   27,		"",
		"07/01/2010",		"07/07/2010",		   26,		"",
		"07/08/2010",		"07/14/2010",		   25,		"",
		"07/15/2010",		"07/21/2010",		   24,		"",
		"07/22/2010",		"07/28/2010",		   23,		"",
		"07/29/2010",		"08/04/2010",		   22,		"",
		"08/05/2010",		"08/11/2010",		   21,		"",
		"08/12/2010",		"08/18/2010",		   20,		"",
		"08/19/2010",		"08/25/2010",		   19,		"",
		"08/26/2010",		"09/01/2010",		   18,		"",
		"09/02/2010",		"09/08/2010",		   17,		"",
		"09/09/2010",		"09/15/2010",		   16,		"",
		"09/16/2010",		"09/22/2010",		   15,		"",
		"09/23/2010",		"09/29/2010",		   14,		"",
		"09/30/2010",		"10/06/2010",		   13,		"",
		"10/07/2010",		"10/13/2010",		   12,		"",
		"10/14/2010",		"10/20/2010",		   11,		"",
		"10/21/2010",		"10/27/2010",		   10,		"",
		"10/28/2010",		"11/03/2010",		    9,		"",
		"11/04/2010",		"11/10/2010",		    8,		"",
		"11/11/2010",		"11/17/2010",		    7,		"",
		"11/18/2010",		"11/24/2010",		    6,		"",
		"11/25/2010",		"12/01/2010",		    5,		"",
		"12/02/2010",		"12/08/2010",		    4,		"",
		"12/09/2010",		"12/15/2010",		    3,		"",
		"12/16/2010",		"12/22/2010",		    2,		"",
		"12/23/2010",		"12/31/2010",		    1,		""
)

function GetCyclesList(CostDivisor, PayFrequency, PayPlan)
{
	var NoCycles = new Array();

	if (CostDivisor == "M")
	{
		for (var i=0; i<MonthlyCycles.length; i+=4)
		{
			if (MonthlyCycles[i+3] == PayPlan)
			{
				NoCycles = NoCycles.concat(new Array(MonthlyCycles[i],MonthlyCycles[i+1],MonthlyCycles[i+2],MonthlyCycles[i+3]));
			}
		}
		if (!NoCycles.length)
		{
			for (var i=0; i<MonthlyCycles.length; i+=4)
			{
				if (MonthlyCycles[i+3] == "")
				{
					NoCycles = NoCycles.concat(new Array(MonthlyCycles[i],MonthlyCycles[i+1],MonthlyCycles[i+2],MonthlyCycles[i+3]));
				}
			}
		}
	}
	else if (CostDivisor == "S")
	{
		for (var i=0; i<SemiMonthlyCycles.length; i+=4)
		{
			if (SemiMonthlyCycles[i+3] == PayPlan)
			{
				NoCycles = NoCycles.concat(new Array(SemiMonthlyCycles[i],SemiMonthlyCycles[i+1],SemiMonthlyCycles[i+2],SemiMonthlyCycles[i+3]));
			}
		}
		if (!NoCycles.length)
		{
			for (var i=0; i<SemiMonthlyCycles.length; i+=4)
			{
				if (SemiMonthlyCycles[i+3] == "")
				{
					NoCycles = NoCycles.concat(new Array(SemiMonthlyCycles[i],SemiMonthlyCycles[i+1],SemiMonthlyCycles[i+2],SemiMonthlyCycles[i+3]));
				}
			}
		}
	}
	else if (CostDivisor == "P")
	{
		var Frequency = parseInt(PayFrequency,10)
		if (Frequency == 4)
		{
			for (var i=0; i<MonthlyPayFrequency.length; i+=4)
			{
				if (MonthlyPayFrequency[i+3] == PayPlan)
				{
					NoCycles = NoCycles.concat(new Array(MonthlyPayFrequency[i],MonthlyPayFrequency[i+1],MonthlyPayFrequency[i+2],MonthlyPayFrequency[i+3]));
				}
			}
			if (!NoCycles.length)
			{
				for (var i=0; i<MonthlyPayFrequency.length; i+=4)
				{
					if (MonthlyPayFrequency[i+3] == "")
					{
						NoCycles = NoCycles.concat(new Array(MonthlyPayFrequency[i],MonthlyPayFrequency[i+1],MonthlyPayFrequency[i+2],MonthlyPayFrequency[i+3]));
					}
				}
			}
		}
		else if (Frequency == 3)
		{
			for (var i=0; i<SemiMonthlyPayFrequency.length; i+=4)
			{
				if (SemiMonthlyPayFrequency[i+3] == PayPlan)
				{
					NoCycles = NoCycles.concat(new Array(SemiMonthlyPayFrequency[i],SemiMonthlyPayFrequency[i+1],SemiMonthlyPayFrequency[i+2],SemiMonthlyPayFrequency[i+3]));
				}
			}
			if (!NoCycles.length)
			{
				for (var i=0; i<SemiMonthlyPayFrequency.length; i+=4)
				{
					if (SemiMonthlyPayFrequency[i+3] == "")
					{
						NoCycles = NoCycles.concat(new Array(SemiMonthlyPayFrequency[i],SemiMonthlyPayFrequency[i+1],SemiMonthlyPayFrequency[i+2],SemiMonthlyPayFrequency[i+3]));
					}
				}
			}
		}
		else if (Frequency == 2)
		{
			for (var i=0; i<BiWeeklyPayFrequency.length; i+=4)
			{
				if (BiWeeklyPayFrequency[i+3] == PayPlan)
				{
					NoCycles = NoCycles.concat(new Array(BiWeeklyPayFrequency[i],BiWeeklyPayFrequency[i+1],BiWeeklyPayFrequency[i+2],BiWeeklyPayFrequency[i+3]));
				}
			}
			if (!NoCycles.length)
			{
				for (var i=0; i<BiWeeklyPayFrequency.length; i+=4)
				{
					if (BiWeeklyPayFrequency[i+3] == "")
					{
						NoCycles = NoCycles.concat(new Array(BiWeeklyPayFrequency[i],BiWeeklyPayFrequency[i+1],BiWeeklyPayFrequency[i+2],BiWeeklyPayFrequency[i+3]));
					}
				}
			}
		}
		else if (Frequency == 1)
		{
			for (var i=0; i<WeeklyPayFrequency.length; i+=4)
			{
				if (WeeklyPayFrequency[i+3] == PayPlan)
				{
					NoCycles = NoCycles.concat(new Array(WeeklyPayFrequency[i],WeeklyPayFrequency[i+1],WeeklyPayFrequency[i+2],WeeklyPayFrequency[i+3]));
				}
			}
			if (!NoCycles.length)
			{
				for (var i=0; i<WeeklyPayFrequency.length; i+=4)
				{
					if (WeeklyPayFrequency[i+3] == "")
					{
						NoCycles = NoCycles.concat(new Array(WeeklyPayFrequency[i],WeeklyPayFrequency[i+1],WeeklyPayFrequency[i+2],WeeklyPayFrequency[i+3]));
					}
				}
			}
		}
	}

	return NoCycles;
}

// Return the valid number of remaining cycles for the year, given
// the start date on the benefit plan.  Dates are of the form
// mm/dd/yyyy and mm/dd/yy, respectively.
function GetNbrCycles(CostDivisor, PayFrequency, StartDate, PayPlan)
{
	var CyclesList = GetCyclesList(CostDivisor,PayFrequency, PayPlan);
	StartDate = parent.parent.parent.formjsDate(StartDate);

	for (var i=0; i<CyclesList.length; i+=4)
	{
		//if (parent.parent.parent.formjsDate(CyclesList[i]) <= StartDate &&
		//	StartDate <= parent.parent.parent.formjsDate(CyclesList[i+1]))
		// PT 107876
		if (formatStandardDate(CyclesList[i]) <= StartDate &&
			StartDate <= formatStandardDate(CyclesList[i+1]))
		{
			return parseInt(CyclesList[i+2],10);
		}
	}

	return 0;
}

// PT 107876
// Re-format the dates entered in the tables above for comparison.
// IMPORTANT: While the date format assigned to the user may differ,
// begin and end dates are assumed to have been defined in the tables
// above in MM/DD/YYYY format.
function formatStandardDate(str)
{
	str = str.split("/");
	return (str[2] + str[0] + str[1]);
}
</script>
</head>
<body></body>
</html>
<!-- Version: 8-)@(#)@10.00.02.00.29 -->
<!-- $Header: /cvs/cvs_archive/applications/webtier/shr/src/xbnnet/cycles.htm,v 1.12.2.5 2012/06/29 17:11:58 brentd Exp $ -->
<!--************************************************************
 *                                                             *
 *                           NOTICE                            *
 *                                                             *
 *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
 *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS              *
 *   AFFILIATES OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED     *
 *   WITHOUT PRIOR WRITTEN PERMISSION. LICENSED CUSTOMERS MAY  *
 *   COPY AND ADAPT THIS SOFTWARE FOR THEIR OWN USE IN         *
 *   ACCORDANCE WITH THE TERMS OF THEIR SOFTWARE LICENSE       *
 *   AGREEMENT. ALL OTHER RIGHTS RESERVED.                     *
 *                                                             *
 *   (c) COPYRIGHT 2012 INFOR.  ALL RIGHTS RESERVED.           *
 *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
 *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
 *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL               *
 *   RIGHTS RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE  *
 *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
 *                                                             *
 ************************************************************-->
